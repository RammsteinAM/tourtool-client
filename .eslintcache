[{"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\EliminationBracket.tsx":"1","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\Elimination.tsx":"2","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\actions.ts":"3","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\tournamentStyles.ts":"4","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\index.tsx":"5","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\theme.ts":"6","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\EmailVerificationResult.tsx":"7","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\types.ts":"8","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\passwordResetStyles.ts":"9","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\PlayerFormTextField.tsx":"10","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\homeStyles.ts":"11","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\RegisterSuccess.tsx":"12","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Main.tsx":"13","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleButton.tsx":"14","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderHome.tsx":"15","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\importParticipantsDialogStyles.ts":"16","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\arrayUtils.ts":"17","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\reportWebVitals.ts":"18","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\reducer.ts":"19","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentTypeSelect.tsx":"20","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\types.ts":"21","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\index.tsx":"22","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordResetSuccess.tsx":"23","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\headerStyles.ts":"24","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\actions.ts":"25","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\DeleteAccountDialog.tsx":"26","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\languageSelectStyles.ts":"27","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Slider\\index.tsx":"28","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderGeneric.tsx":"29","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\index.tsx":"30","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\layoutStyles.ts":"31","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\reducer.ts":"32","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\authUtils.ts":"33","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\actions.ts":"34","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\helpers.ts":"35","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\NotVerified.tsx":"36","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\actions.ts":"37","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Settings\\Settings.tsx":"38","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\ImportParticipantsDialog.tsx":"39","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\localization.ts":"40","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerForm.tsx":"41","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\App.tsx":"42","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\FormSubheader.tsx":"43","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\index.tsx":"44","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\mainStyles.ts":"45","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentForm.tsx":"46","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\index.tsx":"47","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\reducer.ts":"48","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\i18n.ts":"49","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\DeleteAccount\\DeleteAccountResult.tsx":"50","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\types.ts":"51","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\error.ts":"52","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\Register.tsx":"53","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\registerStyles.ts":"54","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\LastManStanding.tsx":"55","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\lastManStandingStyles.ts":"56","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListRow.tsx":"57","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\gameListRowStyles.ts":"58","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\PasswordResetForm.tsx":"59","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\loginDialogStyles.ts":"60","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\facebookButtonStyles.ts":"61","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\playerFormTextFieldStyles.ts":"62","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\FacebookButton.tsx":"63","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleLogo.tsx":"64","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListEnterScoreButton.tsx":"65","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListRound.tsx":"66","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\store.ts":"67","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\asyncWrapper.ts":"68","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\error.ts":"69","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\CreateTournamentDialog.tsx":"70","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\createTournamentDialogStyles.ts":"71","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\Profile.tsx":"72","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\user.ts":"73","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordReset.tsx":"74","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreContent.tsx":"75","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreSelector.tsx":"76","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreScoresConainer.tsx":"77","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreDialog.tsx":"78","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\reducer.ts":"79","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\reducer.ts":"80","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PrivateRoute.tsx":"81","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerTypeSelect.tsx":"82","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\types.ts":"83","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\actions.ts":"84","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\config.ts":"85","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\profileStyles.ts":"86","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\loginStyles.ts":"87","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreItem.tsx":"88","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\scoreUtils.ts":"89","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PublicRoute.tsx":"90","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\types.ts":"91","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\DeleteAccount\\deleteAccountStyles.ts":"92","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\DYPConfigForm.tsx":"93","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\LastManStandingPlayerStatsRow.tsx":"94","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\LastManStandingPlayerStatsList.tsx":"95","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\lastManStandingStyles.ts":"96","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationSidebarItem.tsx":"97","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationCard.tsx":"98","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationBracketCards.tsx":"99","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationCards.tsx":"100","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\main.ts":"101","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\IndependentSnackbar\\index.tsx":"102","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\Login.tsx":"103","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\stringUtils.ts":"104","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\constants.ts":"105","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\googleButtonStyles.ts":"106","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationSidebar.tsx":"107","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\DYPConfigFormItemPlayerSelect.tsx":"108","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\DYPConfigFormItem.tsx":"109","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\DeleteAccountSuccessDialog.tsx":"110","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\player.ts":"111","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\styles.ts":"112","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationColumn.tsx":"113","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\eliminationSidebarStyles.ts":"114","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\tournament.ts":"115","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\index.tsx":"116","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\dypFormStyles.ts":"117","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\HomeCard.tsx":"118","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\homeCardStyles.ts":"119","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\enterScoresStyles.ts":"120","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Generic\\Dialog.tsx":"121","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\objectUtils.ts":"122","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\games\\types.ts":"123","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationBracketCard.tsx":"124","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\games\\reducer.ts":"125","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EliminationResult.tsx":"126","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\eliminationResultStyles.ts":"127","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\TournamentStatsSettingsList.tsx":"128","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\TournamentStatsSettingsListItem.tsx":"129"},{"size":11551,"mtime":1617707310373,"results":"130","hashOfConfig":"131"},{"size":5545,"mtime":1617802970049,"results":"132","hashOfConfig":"131"},{"size":12611,"mtime":1617948905432,"results":"133","hashOfConfig":"131"},{"size":6387,"mtime":1617804266441,"results":"134","hashOfConfig":"131"},{"size":842,"mtime":1617090164343,"results":"135","hashOfConfig":"131"},{"size":572,"mtime":1613378631889,"results":"136","hashOfConfig":"131"},{"size":4684,"mtime":1615821472587,"results":"137","hashOfConfig":"131"},{"size":3281,"mtime":1613938707164,"results":"138","hashOfConfig":"131"},{"size":1563,"mtime":1615545353127,"results":"139","hashOfConfig":"131"},{"size":5714,"mtime":1617365285605,"results":"140","hashOfConfig":"131"},{"size":1488,"mtime":1616482575881,"results":"141","hashOfConfig":"131"},{"size":3300,"mtime":1615821505065,"results":"142","hashOfConfig":"131"},{"size":1103,"mtime":1614785018641,"results":"143","hashOfConfig":"131"},{"size":711,"mtime":1610694471474,"results":"144","hashOfConfig":"131"},{"size":8647,"mtime":1617777712646,"results":"145","hashOfConfig":"131"},{"size":1072,"mtime":1613397758184,"results":"146","hashOfConfig":"131"},{"size":2287,"mtime":1617627557603,"results":"147","hashOfConfig":"131"},{"size":425,"mtime":1609635969166,"results":"148","hashOfConfig":"131"},{"size":921,"mtime":1616677280885,"results":"149","hashOfConfig":"131"},{"size":4143,"mtime":1613409711305,"results":"150","hashOfConfig":"131"},{"size":835,"mtime":1616666826305,"results":"151","hashOfConfig":"131"},{"size":7589,"mtime":1617901054312,"results":"152","hashOfConfig":"131"},{"size":1621,"mtime":1615545648737,"results":"153","hashOfConfig":"131"},{"size":4679,"mtime":1616742726009,"results":"154","hashOfConfig":"131"},{"size":297,"mtime":1613975807360,"results":"155","hashOfConfig":"131"},{"size":2254,"mtime":1615820033861,"results":"156","hashOfConfig":"131"},{"size":322,"mtime":1610633123636,"results":"157","hashOfConfig":"131"},{"size":707,"mtime":1614253851768,"results":"158","hashOfConfig":"131"},{"size":10072,"mtime":1617904569191,"results":"159","hashOfConfig":"131"},{"size":7264,"mtime":1617900316917,"results":"160","hashOfConfig":"131"},{"size":2764,"mtime":1617630676500,"results":"161","hashOfConfig":"131"},{"size":3125,"mtime":1615819967447,"results":"162","hashOfConfig":"131"},{"size":325,"mtime":1613561150261,"results":"163","hashOfConfig":"131"},{"size":7772,"mtime":1616659137590,"results":"164","hashOfConfig":"131"},{"size":1226,"mtime":1612764630390,"results":"165","hashOfConfig":"131"},{"size":3176,"mtime":1615545648737,"results":"166","hashOfConfig":"131"},{"size":3810,"mtime":1615820748060,"results":"167","hashOfConfig":"131"},{"size":231,"mtime":1611642817858,"results":"168","hashOfConfig":"131"},{"size":5525,"mtime":1616680839754,"results":"169","hashOfConfig":"131"},{"size":48323,"mtime":1617952537909,"results":"170","hashOfConfig":"131"},{"size":16201,"mtime":1617363824485,"results":"171","hashOfConfig":"131"},{"size":4845,"mtime":1617635036881,"results":"172","hashOfConfig":"131"},{"size":1766,"mtime":1614339128442,"results":"173","hashOfConfig":"131"},{"size":1408,"mtime":1617952733402,"results":"174","hashOfConfig":"131"},{"size":1770,"mtime":1616569564436,"results":"175","hashOfConfig":"131"},{"size":12201,"mtime":1616675291703,"results":"176","hashOfConfig":"131"},{"size":4680,"mtime":1616966645826,"results":"177","hashOfConfig":"131"},{"size":9174,"mtime":1617691137504,"results":"178","hashOfConfig":"131"},{"size":1203,"mtime":1617952452942,"results":"179","hashOfConfig":"131"},{"size":2183,"mtime":1615820383100,"results":"180","hashOfConfig":"131"},{"size":10961,"mtime":1617283055678,"results":"181","hashOfConfig":"131"},{"size":776,"mtime":1612162500036,"results":"182","hashOfConfig":"131"},{"size":10682,"mtime":1615821202101,"results":"183","hashOfConfig":"131"},{"size":1109,"mtime":1611836196552,"results":"184","hashOfConfig":"131"},{"size":16530,"mtime":1617282378189,"results":"185","hashOfConfig":"131"},{"size":4396,"mtime":1617630594767,"results":"186","hashOfConfig":"131"},{"size":7391,"mtime":1617282048962,"results":"187","hashOfConfig":"131"},{"size":4218,"mtime":1615545269983,"results":"188","hashOfConfig":"131"},{"size":9860,"mtime":1612690736459,"results":"189","hashOfConfig":"131"},{"size":1000,"mtime":1612164946847,"results":"190","hashOfConfig":"131"},{"size":549,"mtime":1611146916965,"results":"191","hashOfConfig":"131"},{"size":1795,"mtime":1613399375323,"results":"192","hashOfConfig":"131"},{"size":689,"mtime":1610694471474,"results":"193","hashOfConfig":"131"},{"size":1386,"mtime":1610694471474,"results":"194","hashOfConfig":"131"},{"size":1192,"mtime":1615545269983,"results":"195","hashOfConfig":"131"},{"size":1526,"mtime":1617281869102,"results":"196","hashOfConfig":"131"},{"size":889,"mtime":1613975694055,"results":"197","hashOfConfig":"131"},{"size":777,"mtime":1617792858881,"results":"198","hashOfConfig":"131"},{"size":243,"mtime":1611751297698,"results":"199","hashOfConfig":"131"},{"size":3471,"mtime":1617953384749,"results":"200","hashOfConfig":"131"},{"size":673,"mtime":1613397734731,"results":"201","hashOfConfig":"131"},{"size":9003,"mtime":1615820162676,"results":"202","hashOfConfig":"131"},{"size":4700,"mtime":1617801323502,"results":"203","hashOfConfig":"131"},{"size":4554,"mtime":1615545353127,"results":"204","hashOfConfig":"131"},{"size":11259,"mtime":1617801934868,"results":"205","hashOfConfig":"131"},{"size":9341,"mtime":1617803999760,"results":"206","hashOfConfig":"131"},{"size":1971,"mtime":1615545270101,"results":"207","hashOfConfig":"131"},{"size":2033,"mtime":1617607780338,"results":"208","hashOfConfig":"131"},{"size":3153,"mtime":1616480691317,"results":"209","hashOfConfig":"131"},{"size":3714,"mtime":1616455576529,"results":"210","hashOfConfig":"131"},{"size":1031,"mtime":1616455914192,"results":"211","hashOfConfig":"131"},{"size":4432,"mtime":1616674103647,"results":"212","hashOfConfig":"131"},{"size":2742,"mtime":1615819330645,"results":"213","hashOfConfig":"131"},{"size":4426,"mtime":1614254263432,"results":"214","hashOfConfig":"131"},{"size":51,"mtime":1610346617372,"results":"215","hashOfConfig":"131"},{"size":1563,"mtime":1613736886053,"results":"216","hashOfConfig":"131"},{"size":851,"mtime":1611836196552,"results":"217","hashOfConfig":"131"},{"size":768,"mtime":1615530699955,"results":"218","hashOfConfig":"131"},{"size":1060,"mtime":1617610971656,"results":"219","hashOfConfig":"131"},{"size":722,"mtime":1612260090406,"results":"220","hashOfConfig":"131"},{"size":3399,"mtime":1616455576528,"results":"221","hashOfConfig":"131"},{"size":1109,"mtime":1613723185895,"results":"222","hashOfConfig":"131"},{"size":9409,"mtime":1616143449181,"results":"223","hashOfConfig":"131"},{"size":1825,"mtime":1615798448716,"results":"224","hashOfConfig":"131"},{"size":6971,"mtime":1616151424926,"results":"225","hashOfConfig":"131"},{"size":3082,"mtime":1615803316970,"results":"226","hashOfConfig":"131"},{"size":2848,"mtime":1616366096763,"results":"227","hashOfConfig":"131"},{"size":12443,"mtime":1617804041113,"results":"228","hashOfConfig":"131"},{"size":2529,"mtime":1617018440544,"results":"229","hashOfConfig":"131"},{"size":4600,"mtime":1617708358892,"results":"230","hashOfConfig":"131"},{"size":370,"mtime":1611750698023,"results":"231","hashOfConfig":"131"},{"size":1104,"mtime":1613735950828,"results":"232","hashOfConfig":"131"},{"size":8198,"mtime":1613546219417,"results":"233","hashOfConfig":"131"},{"size":951,"mtime":1617802240423,"results":"234","hashOfConfig":"131"},{"size":336,"mtime":1616675291703,"results":"235","hashOfConfig":"131"},{"size":544,"mtime":1611146916965,"results":"236","hashOfConfig":"131"},{"size":2419,"mtime":1615643538560,"results":"237","hashOfConfig":"131"},{"size":2459,"mtime":1616480691319,"results":"238","hashOfConfig":"131"},{"size":1620,"mtime":1615631132314,"results":"239","hashOfConfig":"131"},{"size":2054,"mtime":1615820064661,"results":"240","hashOfConfig":"131"},{"size":1708,"mtime":1615902324449,"results":"241","hashOfConfig":"131"},{"size":3240,"mtime":1612350812022,"results":"242","hashOfConfig":"131"},{"size":2568,"mtime":1617087466482,"results":"243","hashOfConfig":"131"},{"size":3490,"mtime":1617804368671,"results":"244","hashOfConfig":"131"},{"size":1653,"mtime":1616603987338,"results":"245","hashOfConfig":"131"},{"size":5290,"mtime":1613548907204,"results":"246","hashOfConfig":"131"},{"size":1197,"mtime":1615631132314,"results":"247","hashOfConfig":"131"},{"size":8444,"mtime":1617953321944,"results":"248","hashOfConfig":"131"},{"size":1462,"mtime":1616669453722,"results":"249","hashOfConfig":"131"},{"size":3582,"mtime":1615545269983,"results":"250","hashOfConfig":"131"},{"size":2651,"mtime":1617369369662,"results":"251","hashOfConfig":"131"},{"size":132,"mtime":1617027241619,"results":"252","hashOfConfig":"131"},{"size":2325,"mtime":1617085974193,"results":"253","hashOfConfig":"131"},{"size":2968,"mtime":1617173510303,"results":"254","hashOfConfig":"131"},{"size":2547,"mtime":1617385287600,"results":"255","hashOfConfig":"131"},{"size":9304,"mtime":1617905249735,"results":"256","hashOfConfig":"131"},{"size":2052,"mtime":1617898400872,"results":"257","hashOfConfig":"131"},{"size":2448,"mtime":1617950724434,"results":"258","hashOfConfig":"131"},{"size":3555,"mtime":1617950751402,"results":"259","hashOfConfig":"131"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"x7fxt9",{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"272"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"272"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"290"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"310"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"276"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"276"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"276"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"276"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"276"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"304"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"276"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"407"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"276"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"349"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"401"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"331"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"276"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"276"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"276"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"429"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"310"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"301"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"298"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"401"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"495","messages":"496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"331"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"276"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"401"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"276"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"331"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"301"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"547","messages":"548","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"549","messages":"550","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"551","messages":"552","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\EliminationBracket.tsx",["561","562","563","564"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\Elimination.tsx",["565","566","567"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\actions.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\tournamentStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\theme.ts",[],["568","569"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\EmailVerificationResult.tsx",["570","571","572","573","574","575","576","577","578","579"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport registerStyles from './registerStyles';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport { registerActions } from '../../redux/register/actions'\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport { appName } from '../../utils/constants';\r\nimport mainStyles from '../../styles/mainStyles';\r\n\r\ninterface FormikValues {\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IError {\r\n    password?: string;\r\n    confirmPassword?: string;\r\n}\r\n\r\ninterface Props {\r\n}\r\n\r\nconst EmailVerificationResult = (props: Props) => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const classes = registerStyles();\r\n    const mainClasses = mainStyles();\r\n    const history = useHistory();\r\n    const registerState = useSelector((state: RootState) => state.register);\r\n    const dispatch = useDispatch();\r\n    const { token } = useParams<{ token: string }>();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        if (registerState.verifyEmail.status === ActionStatus.Initial) {\r\n\r\n            dispatch(registerActions.verifyEmail(token));\r\n        }\r\n    }, [registerState.verifyEmail.status]);\r\n\r\n    const userData = registerState.verifyEmail.data;\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                maxWidth={false}\r\n                fullScreen={fullScreen}\r\n                open\r\n                classes={{\r\n                    paper:\r\n                        classes.paper\r\n                }}\r\n            >\r\n\r\n                <Typography>\r\n                    {t('Email Verification')}\r\n                </Typography>\r\n                {registerState.verifyEmail.status === ActionStatus.Request &&\r\n                    <div className={mainClasses.progress}>\r\n                        <CircularProgress />\r\n                    </div>\r\n                }\r\n                {registerState.verifyEmail.status === ActionStatus.Success && userData?.email &&\r\n                    <>\r\n                        <div>\r\n                            {userData?.displayName ? t('email-verification-success', {\r\n                                displayName: userData.displayName,\r\n                                email: userData?.email\r\n                            }) :\r\n                                t('email-verification-success-only-email', {\r\n                                    email: userData?.email\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <Button\r\n                                type=\"button\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.button}\r\n                                onClick={() => { history.push('/login') }}\r\n                            >\r\n                                {t('Login')}\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n\r\n                }\r\n                {registerState.verifyEmail.status === ActionStatus.Failure &&\r\n                    <>\r\n                        <div className={mainClasses.errorMessage}>{t(`ERROR_${registerState.verifyEmail.error}`)}</div>\r\n                        <div>\r\n                            <Button\r\n                                type=\"button\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.button}\r\n                                onClick={() => { history.push('/login') }}\r\n                            >\r\n                                {t('Go to Login Page')}\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default EmailVerificationResult;",["580","581"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\types.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\passwordResetStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\PlayerFormTextField.tsx",["582","583","584","585","586","587","588","589","590"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\homeStyles.ts",["591","592"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\RegisterSuccess.tsx",["593","594","595"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions';\r\nimport registerStyles from './registerStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport { registerActions } from '../../redux/register/actions';\r\n\r\ninterface FormikValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface IError {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\ninterface Props {\r\n}\r\n\r\nconst RegisterSuccess = (props: Props) => {\r\n    const classes = registerStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [timeLeft, setTimeLeft] = useState<number>(60);\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const registerState = useSelector((state: RootState) => state.register);\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.status === ActionStatus.Request);\r\n    }, [authState.status]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (timeLeft > 0) setTimeLeft(timeLeft - 1);\r\n        }, 1000);\r\n    });\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.login(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleResendEmail = (e: React.MouseEvent): void => {\r\n        //e.preventDefault();\r\n        registerState.data && dispatch(registerActions.resendVerificationEmail(registerState.data));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Typography>\r\n                {t(\"Registration success\")}\r\n            </Typography>\r\n            <div>\r\n                {t(\"registration-success-body\")}\r\n                {timeLeft > 0 ?\r\n                    t(\"registration-success-body-end1\", { sec: timeLeft }) :\r\n                    t(\"registration-success-body-end2\")\r\n                }\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={submitting || timeLeft > 0}\r\n                    className={classes.button}\r\n                    onClick={handleResendEmail}\r\n                >\r\n                    {t('Resend Verification Email')}\r\n                </Button>\r\n            </div>\r\n            {registerState.resendVerificationEmail.status === ActionStatus.Request &&\r\n                <div className={mainClasses.progress}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n            {registerState.resendVerificationEmail.status === ActionStatus.Failure &&\r\n                <div className={mainClasses.errorMessage}>{t(`ERROR_${registerState.resendVerificationEmail.error}`)}</div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegisterSuccess;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Main.tsx",[],["596","597"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleButton.tsx",["598"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport FacebookIcon from '@material-ui/icons/Facebook'; \r\nimport googleButtonStyles from './googleButtonStyles';\r\nimport GoogleLogo from './GoogleLogo';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n  onClick: Function\r\n}\r\n\r\nconst GoogleButton = (props: Props) => {\r\n  const classes = googleButtonStyles();\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"default\"\r\n      className={classes.button}\r\n      startIcon={<GoogleLogo />}\r\n      onClick={() => props.onClick()}\r\n    >\r\n      {t('Google Login')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default GoogleButton","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderHome.tsx",["599","600"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\importParticipantsDialogStyles.ts",[],["601","602"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\arrayUtils.ts",[],["603","604"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\reportWebVitals.ts",[],["605","606"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\reducer.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentTypeSelect.tsx",["607","608","609","610","611","612"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EliminationForm from './TournamentForm';\r\nimport clsx from 'clsx';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport Whatshot from '@material-ui/icons/Whatshot';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ReactComponent as RoundRobinIcon } from '../../resources/icons/roundRobin.svg';\r\nimport { ReactComponent as LastManStandingIcon } from '../../resources/icons/lms.svg';\r\nimport { ReactComponent as Elimination } from '../../resources/icons/elimination.svg';\r\n\r\nimport tournamentStyles from './tournamentStyles';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst TournamentTypeSelect = (props: Props) => {\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    const handleCardClick = (type: string) => {\r\n        history.push(`/tournament-form/${type}`)\r\n    }\r\n\r\n    const classes = tournamentStyles();\r\n    return (\r\n        <div className={classes.cardListContainer}>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#00b8d4' }}\r\n                    onClick={() => handleCardClick('round-robin')}\r\n                >\r\n                    <RoundRobinIcon className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Round Robin')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton aria-label=\"info\">\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handleCardClick('round-robin')} >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#9c27b0' }}\r\n                    onClick={() => handleCardClick('lms')}\r\n                >\r\n                    <LastManStandingIcon className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Last Man Standing')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton aria-label=\"info\">\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handleCardClick('lms')} >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#8dbb5e' }}\r\n                    onClick={() => handleCardClick('elimination')}\r\n                >\r\n\r\n                    <Elimination className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Elimination')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton aria-label=\"info\">\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handleCardClick('elimination')} >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TournamentTypeSelect\r\n",["613","614"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\types.ts",["615","616"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordResetSuccess.tsx",["617","618","619","620"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport resetPasswordStyles from './passwordResetStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    onSuccessCallback: () => void;\r\n}\r\n\r\nconst RequestPasswordResetSuccess = (props: Props) => {\r\n    const classes = resetPasswordStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(authActions.forgotPasswordStateReset())\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                {t(\"Check your Email\")}\r\n            </Typography>\r\n            <div>\r\n                <p>\r\n                    {t(\"password-reset-success-body\")}\r\n                </p>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={submitting}\r\n                    className={classes.button}\r\n                    onClick={() => props.onSuccessCallback()}\r\n                >\r\n                    {t('Go to Login Page')}\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RequestPasswordResetSuccess;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\headerStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\actions.ts",["621","622","623"],"import { actionCreator, payloadedActionCreator, PayloadedAction } from \"../helpers\";\r\nimport {\r\n    UPDATE_SETTINGS,\r\n    UpdateSettingsActionParams,\r\n    UserActionParams,\r\n} from \"./types\";\r\n\r\nexport const updateSettings = payloadedActionCreator<UpdateSettingsActionParams>(UPDATE_SETTINGS);\r\n\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\DeleteAccountDialog.tsx",["624","625"],"import React, { ReactElement, useEffect, useState } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport profileStyles from './profileStyles';\r\n\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onConfirm: () => void;\r\n}\r\n\r\nconst DeleteAccountDialog = ({ open, onClose, onConfirm }: Props): ReactElement => {\r\n    const [error, setError] = useState<string>()\r\n    const userState = useSelector((state: RootState) => state.user);\r\n    const classes = profileStyles();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setError(userState.delete.error);\r\n    }, [userState.delete.status]);\r\n\r\n    const handleConfirm = (e: React.FormEvent) => {\r\n        onConfirm();\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} classes={{ paper: classes.dialog }}>\r\n            <div className={classes.dialogHeader}>\r\n                <HighlightOffIcon style={{ fontSize: 100 }} />\r\n            </div>\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t('Delete Account')}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {t('delete-account-confirmation-message')}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleConfirm} color=\"default\" size='small' type='submit' className={classes.dialogButton}>\r\n                    {t('Delete Account')}\r\n                </Button>\r\n                <Button onClick={onClose} color=\"primary\" size='small' className={classes.dialogButton}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </DialogActions>\r\n            {error && <div color='error'>{error}</div>}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default DeleteAccountDialog\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\languageSelectStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Slider\\index.tsx",["626","627","628","629"],"import React from 'react';\r\nimport { withStyles, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nexport const HeaderSlider = withStyles({\r\n    root: {\r\n      color: '#8ebd5e',\r\n      width: '128px',\r\n      margin: '0 18px',\r\n    },\r\n    thumb: {\r\n      height: 14,\r\n      width: 14,\r\n      marginTop: -6,\r\n      marginLeft: -8,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n      '&:focus, &$active': {\r\n        marginTop: -8,        \r\n      marginLeft: -12,\r\n        height: 20,\r\n        width: 20,\r\n      },\r\n    },\r\n    active: {},\r\n    rail: {\r\n      backgroundColor: '#000',\r\n    },\r\n  })(Slider);",["630","631"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderGeneric.tsx",["632","633","634","635"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\index.tsx",["636","637"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\layoutStyles.ts",["638"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\reducer.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\authUtils.ts",["639"],"import Cookies from 'universal-cookie';\r\n\r\nconst loginCheck = () => {\r\n    const cookies = new Cookies();\r\n    return cookies.get('x-auth-token');\r\n}\r\n\r\nexport const clearCookieAndStorage = (): void => {\r\n    const cookies = new Cookies();\r\n    cookies.remove('x-auth-token');\r\n    localStorage.removeItem('refreshToken');\r\n}","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\actions.ts",["640","641"],"import { actionCreator, payloadedActionCreator } from \"../helpers\";\r\nimport { UserGoogleLoginReqData, UserLoginCheckResData, UserLoginReqData, UserLoginResData, UserPasswordResetReqData } from \"../../types/user\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {\r\n    AuthActionParams,\r\n    LoginFailureActionParams,\r\n    LoginRequestActionParams,\r\n    LoginSuccessActionParams,\r\n    // LoginCheckFailureActionParams,\r\n    // LoginCheckRequestActionParams,\r\n    // LoginCheckSuccessActionParams,\r\n    ForgotPasswordRequestActionParams,\r\n    ForgotPasswordSuccessActionParams,\r\n    ForgotPasswordFailureActionParams,\r\n    ResetPasswordRequestActionParams,\r\n    ResetPasswordSuccessActionParams,\r\n    ResetPasswordFailureActionParams,\r\n    UserUpdateSuccessActionParams,\r\n    LogoutActionParams,\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    LOGIN_RESET,\r\n    // LOGIN_CHECK_REQUEST,\r\n    // LOGIN_CHECK_FAILURE,\r\n    // LOGIN_CHECK_SUCCESS,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAILURE,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILURE,\r\n    FORGOT_PASSWORD_RESET,\r\n    USER_UPDATE_SUCCESS,\r\n    LOGOUT,\r\n    ForgotPasswordReqData,\r\n    ForgotPasswordResetActionParams,\r\n    LoginResetActionParams\r\n} from \"./types\"\r\nimport { userServices } from \"../../services/user\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport { Dispatch, DispatchWithoutAction } from \"react\";\r\nimport { ResponseData } from \"../../types/main\";\r\n\r\nexport const loginRequest = payloadedActionCreator<LoginRequestActionParams>(LOGIN_REQUEST);\r\n\r\nexport const loginSuccess = payloadedActionCreator<LoginSuccessActionParams>(LOGIN_SUCCESS);\r\n\r\nexport const loginFailure = payloadedActionCreator<LoginFailureActionParams>(LOGIN_FAILURE);\r\n\r\nexport const loginReset = actionCreator<LoginResetActionParams>(LOGIN_RESET);\r\n\r\nexport const forgotPasswordRequest = actionCreator<ForgotPasswordRequestActionParams>(FORGOT_PASSWORD_REQUEST);\r\n\r\nexport const forgotPasswordSuccess = payloadedActionCreator<ForgotPasswordSuccessActionParams>(FORGOT_PASSWORD_SUCCESS);\r\n\r\nexport const forgotPasswordFailure = payloadedActionCreator<ForgotPasswordFailureActionParams>(FORGOT_PASSWORD_FAILURE);\r\n\r\nexport const resetPasswordRequest = actionCreator<ResetPasswordRequestActionParams>(RESET_PASSWORD_REQUEST);\r\n\r\nexport const resetPasswordSuccess = payloadedActionCreator<ResetPasswordSuccessActionParams>(RESET_PASSWORD_SUCCESS);\r\n\r\nexport const resetPasswordFailure = payloadedActionCreator<ResetPasswordFailureActionParams>(RESET_PASSWORD_FAILURE);\r\n\r\nexport const forgotPasswordStateReset = actionCreator<ForgotPasswordResetActionParams>(FORGOT_PASSWORD_RESET);\r\n\r\nexport const userUpdateSuccess = payloadedActionCreator<UserUpdateSuccessActionParams>(USER_UPDATE_SUCCESS);\r\n\r\nexport const logout = actionCreator<LogoutActionParams>(LOGOUT);\r\n\r\nconst login = (data: UserLoginReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest({ data: { ...data } }));\r\n\r\n        userServices.login(data)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    if (res && res.data) {\r\n                        const cookies = new Cookies();\r\n                        if (cookies.get('x-auth-token')) {\r\n                            cookies.remove('x-auth-token');\r\n                        }\r\n                        cookies.set('x-auth-token', res.data.data?.accessToken, { path: '/' });\r\n                        localStorage.setItem('refreshToken', res.data.data?.refreshToken!);\r\n                        dispatch(loginSuccess(res?.data));\r\n                    }\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst loginCheck = () => {\r\n    const refreshToken = localStorage.getItem('refreshToken')\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        // dispatch(loginRequest(null));\r\n        refreshToken && userServices.loginCheck({ refreshToken })\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginCheckResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    if (res?.data.data?.accessToken) {\r\n                        cookies.set('x-auth-token', res.data.data!.accessToken, { path: '/' });\r\n                    }\r\n                    dispatch(loginSuccess(res?.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    localStorage.removeItem('refreshToken');\r\n                    // dispatch(loginReset());\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst googleLogin = (token: string) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest(null));\r\n\r\n        userServices.googleLogin(token)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    cookies.set('x-auth-token', res.data.data!.accessToken, { path: '/' });\r\n                    localStorage.setItem('refreshToken', res.data.data!.refreshToken!);\r\n                    dispatch(loginSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst facebookLogin = (token: string) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest(null));\r\n\r\n        userServices.facebookLogin(token)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    cookies.set('x-auth-token', res.data.data!.accessToken, { path: '/' });\r\n                    localStorage.setItem('refreshToken', res.data.data!.refreshToken!);\r\n                    dispatch(loginSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                    //dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst forgotPassword = (data: ForgotPasswordReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(forgotPasswordRequest());\r\n\r\n        userServices.forgotPassword(data)\r\n            .then(\r\n                (res: AxiosResponse) => {\r\n                    dispatch(forgotPasswordSuccess(res.data));\r\n                    //history.push(from);\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(forgotPasswordFailure({ error: error.name, message: error.message }));\r\n                    //dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst resetPassword = (data: UserPasswordResetReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(resetPasswordRequest());\r\n\r\n        userServices.resetPassword(data)\r\n            .then(\r\n                (res: AxiosResponse) => {\r\n                    dispatch(resetPasswordSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(resetPasswordFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nexport const authActions = {\r\n    login,\r\n    loginCheck,\r\n    googleLogin,\r\n    facebookLogin,\r\n    forgotPassword,\r\n    forgotPasswordStateReset,\r\n    resetPassword,\r\n    logout,\r\n};","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\helpers.ts",["642"],"import { Action } from \"redux\";\r\nimport { EntityStateData } from \"../types/entities\";\r\n\r\nexport interface PayloadedAction<T, P> extends Action<T> {\r\n    payload: P;\r\n}\r\n\r\nexport const actionCreator = <T extends Action<T[\"type\"]>>(type: T[\"type\"]): () => Action<T[\"type\"]> => {\r\n    return () => ({\r\n        type\r\n    })\r\n}\r\n\r\nexport const payloadedActionCreator = <T extends PayloadedAction<T[\"type\"], T[\"payload\"]>>(type: T[\"type\"]): (payload: T[\"payload\"]) => PayloadedAction<T[\"type\"], T[\"payload\"]> => {\r\n    return (payload: T[\"payload\"]) => ({\r\n        type,\r\n        payload\r\n    })\r\n}\r\n\r\nexport const arrayGroupBy = <T>(objectArray: any[], property: string): T => {\r\n    return objectArray.reduce(function (acc, obj, i) {\r\n      //let key = obj[property]\r\n      if (!acc[i]) {\r\n        acc[i] = {}\r\n      }\r\n      acc[i] = {...obj}\r\n      return acc\r\n    }, {})\r\n  }\r\n\r\n\r\n// export function payloadedActionCreator<TAction extends PayloadedAction<TAction['type'], TAction['payload']>>(\r\n//     type: TAction['type'],\r\n// ): (payload: TAction['payload']) => PayloadedAction<TAction['type'], TAction['payload']> {\r\n//     return (payload: TAction['payload']) => ({\r\n//         payload,\r\n//         type,\r\n//     });\r\n// }",["643","644"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\NotVerified.tsx",["645","646","647"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions';\r\nimport registerStyles from './registerStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport { registerActions } from '../../redux/register/actions';\r\n\r\ninterface FormikValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface Props {\r\n}\r\n\r\nconst NotVerified = (props: Props) => {\r\n    const classes = registerStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [timeLeft, setTimeLeft] = useState<number>(0);\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const registerState = useSelector((state: RootState) => state.register);\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.status === ActionStatus.Request);\r\n    }, [authState.status]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (timeLeft > 0) setTimeLeft(timeLeft - 1);\r\n        }, 1000);\r\n    });\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.login(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleResendEmail = (e: React.MouseEvent): void => {\r\n        //e.preventDefault();\r\n        if (authState.data?.email && authState.data?.password) {\r\n            dispatch(registerActions.resendVerificationEmail({ email: authState.data?.email, password: authState.data?.password }));\r\n            setTimeLeft(60)\r\n        }            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Typography>\r\n                {t(\"Your account is not verified\")}\r\n            </Typography>\r\n            <div>\r\n                {t(\"not-verified-body\")}\r\n                {timeLeft > 0 ?\r\n                    t(\"not-verified-body-end1\", { sec: timeLeft }) :\r\n                    t(\"not-verified-body-end2\")\r\n                }\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={submitting || timeLeft > 0}\r\n                    className={classes.button}\r\n                    onClick={handleResendEmail}\r\n                >\r\n                    {t('Resend Verification Email')}\r\n                </Button>\r\n            </div>\r\n            {registerState.resendVerificationEmail.status === ActionStatus.Request &&\r\n                <div className={mainClasses.progress}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NotVerified;",["648","649"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\actions.ts",["650"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Settings\\Settings.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\ImportParticipantsDialog.tsx",["651","652","653","654"],"import React, { ReactElement, useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { StateParticipants, StateEliminationPlayers } from '../../types/entities';\r\nimport { updateParticipants } from '../../redux/tournamentEntities/actions';\r\nimport toast from '../IndependentSnackbar';\r\nimport importParticipantsDialogStyles from './importParticipantsDialogStyles';\r\nimport { RootState } from '../../redux/store';\r\n\r\nconst initialPlayer = { name: '', category: null };\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    //onSubmit: (e: React.FormEvent, name: string) => void;\r\n}\r\n\r\nconst ImportParticipantsDialog = ({ open, onClose }: Props): ReactElement => {\r\n    const [participants, setParticipants] = useState<string>('');\r\n    const storeParticipants = useSelector((state: RootState) => state.entities.participants);\r\n    const dispatch = useDispatch();\r\n    const classes = importParticipantsDialogStyles();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const handleParticipantsChange = (e: React.ChangeEvent<{ value: string }>) => {\r\n        setParticipants(e.target.value)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setParticipants('');\r\n        onClose();\r\n    }\r\n\r\n    const handleImportKeyDown = (e: React.KeyboardEvent) => {\r\n        if (e.key === \"Enter\") {\r\n            if (e.ctrlKey || e.shiftKey) {\r\n                e.preventDefault();\r\n                handleImport();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleImport = () => {\r\n        const participants = generateParticipants();\r\n        const duplicates = findDuplicates(participants);\r\n        const storeParticipantNames = storeParticipants.map(p => p.name)\r\n        if (duplicates.length === 1) {\r\n            toast.warning(t('player-import-form-duplicate-name', { name: duplicates[0] }));\r\n        }\r\n        else if (duplicates.length > 1) {\r\n            let duplicateNames = '';\r\n            for (let i = 0; i < duplicates.length; i++) {\r\n                duplicateNames += duplicates[i]\r\n                if (i < duplicates.length - 1) duplicateNames += ', '\r\n            }\r\n            toast.warning(t('player-import-form-duplicate-names', { names: duplicateNames }));\r\n        }\r\n        else {\r\n            submitPlayersToStore(participants.filter(x => (!!x && storeParticipantNames.indexOf(x) < 0)));\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    const generateParticipants = (): string[] => {\r\n        let normalizedParticipants = participants.replace(/\\s*;\\s*/g, \";\").replace(/\\s*,\\s*/g, \",\").replace(/\\s*\\n\\s*/g, \"\\n\");\r\n        return normalizedParticipants.split(/[,;\\n]+/);\r\n    }\r\n\r\n    const findDuplicates = (arr: string[]) => {\r\n        const duplicates = arr.filter((e, i, a) => !!e && a.indexOf(e) !== i);\r\n        const uniqueDuplicates = [...new Set(duplicates)];\r\n        return uniqueDuplicates;\r\n    }\r\n\r\n    const submitPlayersToStore = (newParticipants: string[]) => {\r\n        const storeNewParticipants: StateParticipants = newParticipants\r\n            .map((name) => {\r\n                return { name, category: null }\r\n            })\r\n\r\n        dispatch(updateParticipants([...storeParticipants, ...storeNewParticipants]));\r\n    }\r\n\r\n    return (\r\n        <Dialog open={open} classes={{ paper: classes.importParticipantsDialog }}>\r\n            <div className={classes.importDialogHeader}>\r\n                <DialogTitle>\r\n                    {t('Import Participants')}\r\n                </DialogTitle>\r\n                <IconButton aria-label=\"close\" onClick={handleClose} className={classes.dialogHeaderIcon}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </div>\r\n\r\n\r\n            <DialogContent>\r\n                <div className={classes.importParticipantsDescription}>\r\n                    {t('import-participants-dialog-description')}\r\n                </div>\r\n                <InputBase\r\n                    className={classes.importParticipantsTextField}\r\n                    autoFocus\r\n                    multiline\r\n                    spellCheck={false}\r\n                    inputProps={{ 'data-gramm': 'false' }}\r\n                    rows={26}\r\n                    value={participants}\r\n                    onChange={handleParticipantsChange}\r\n                    onKeyDown={handleImportKeyDown}\r\n                    type='text'\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"default\" size='small' className={classes.submitDialogButton}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n                <Button onClick={handleImport} color=\"default\" size='small' className={classes.submitDialogButton}>\r\n                    {t('Import')}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default ImportParticipantsDialog\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\localization.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerForm.tsx",["655","656","657"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\App.tsx",["658","659","660"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\FormSubheader.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\mainStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentForm.tsx",["661","662"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\index.tsx",["663"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\reducer.ts",["664","665","666"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\i18n.ts",["667","668"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\DeleteAccount\\DeleteAccountResult.tsx",["669","670","671"],"import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport deleteAccountStyles from './deleteAccountStyles';\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport { userActions } from '../../redux/user/actions';\r\n\r\nconst DeleteAccountResult = () => {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const classes = deleteAccountStyles();\r\n    const mainClasses = mainStyles();\r\n    const userState = useSelector((state: RootState) => state.user);\r\n    const dispatch = useDispatch();\r\n    const { token } = useParams<{ token: string }>();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        if (userState.delete.status === ActionStatus.Initial) {\r\n            dispatch(userActions.deleteUser(token));\r\n        }\r\n    }, [userState.delete.status]);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                maxWidth={false}\r\n                fullScreen={fullScreen}\r\n                open\r\n                classes={{\r\n                    paper:\r\n                        classes.paper\r\n                }}\r\n            >\r\n\r\n                {userState.delete.status === ActionStatus.Request &&\r\n                    <div className={mainClasses.progress}>\r\n                        <CircularProgress />\r\n                    </div>\r\n                }\r\n                {userState.delete.status === ActionStatus.Success &&\r\n                    <Typography>\r\n                        {t('delete-account-success-message')}\r\n                    </Typography>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DeleteAccountResult;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\types.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\error.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\Register.tsx",["672","673"],"import React, { useEffect, useState, useCallback } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerActions } from '../../redux/register/actions'\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { appName } from '../../utils/constants';\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport { RegisterFormValues } from '../../types/user';\r\nimport { userServices } from '../../services/user';\r\nimport { ErrorNames } from '../../types/error';\r\nimport { debounce } from 'lodash';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport registerStyles from './registerStyles';\r\n\r\ninterface IError {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\ninterface Props {\r\n    onSuccessCallback: (values: RegisterFormValues) => void;\r\n}\r\n\r\nconst Register = (props: Props) => {\r\n    const classes = registerStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [emailIsValid, setEmailIsValid] = useState<boolean>(false);\r\n    const [emailInUse, setEmailInUse] = useState<boolean>(false);\r\n    const [emailInUseLoading, setEmailInUseLoading] = useState<boolean>(false);\r\n    const [formValues, setFormValues] = useState<RegisterFormValues>();\r\n    const registerState = useSelector((state: RootState) => state.register);\r\n    //const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(registerState.status === ActionStatus.Request);\r\n        if (registerState.status === ActionStatus.Success && formValues) {\r\n            props.onSuccessCallback(formValues); // TODO\r\n        }\r\n    }, [registerState.status]);\r\n\r\n    const handleFormSubmit = (values: RegisterFormValues): void => {\r\n        setFormValues(values);\r\n        dispatch(registerActions.register(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const checkEmailInUse = (email: string) => {\r\n        userServices.emailCheck(email)\r\n            .then(() => {\r\n                setEmailInUse(false)\r\n            })\r\n            .catch(() => {\r\n                setEmailInUse(true)\r\n            })\r\n            .finally(() => {\r\n                setEmailInUseLoading(false)\r\n            })\r\n    }\r\n\r\n    const delayedCheckEmailInUse = useCallback(debounce(email => checkEmailInUse(email), 500), [emailInUse]);\r\n\r\n    const handleEmailChange = (formikCallback: (e: React.ChangeEvent<any>) => void, e: React.ChangeEvent<{ value: string }>) => {\r\n        const email = e.target.value;\r\n        if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\r\n            setEmailInUseLoading(true);\r\n            setEmailIsValid(true);\r\n            delayedCheckEmailInUse(email);\r\n        }\r\n        else {\r\n            setEmailIsValid(false)\r\n        }\r\n        formikCallback(e);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Typography>\r\n                {t(\"Register for\", { appName })}\r\n            </Typography>\r\n            <Formik\r\n                initialValues={{ email: '', password: '', confirmPassword: '', displayName: '' }}\r\n                validate={values => {\r\n                    const errors: IError = {};\r\n                    if (!values.email) {\r\n                        errors.email = t('Email is required');\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = t('Invalid Email Address');\r\n                    }\r\n                    if (!values.password) {\r\n                        errors.password = t('Please enter the Password');\r\n                    } else if (\r\n                        !/(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}/.test(values.password)\r\n                    ) {\r\n                        errors.password = t('password-validation-error');\r\n                    } else if (values.password !== values.confirmPassword) {\r\n                        errors.password = t('Passwords do not match');\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={handleFormSubmit}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit\r\n                }) => (\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            id=\"displayName\"\r\n                            label={t('Display Name')}\r\n                            name=\"displayName\"\r\n                            autoComplete=\"displayName\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.displayName && touched.displayName &&\r\n                                <ErrorMessage name=\"displayName\" component=\"div\" className={mainClasses.formError} />\r\n                            }\r\n                        </div>\r\n                        <TextField\r\n                            error={!!errors.email && touched.email}\r\n                            size=\"small\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label={t('Email')}\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            InputProps={{\r\n                                endAdornment: emailIsValid && (\r\n                                    <InputAdornment position=\"end\">\r\n                                        {emailInUseLoading ? <CircularProgress size={20} /> :\r\n                                            (\r\n                                                emailInUse ?\r\n                                                    <Tooltip title={`${t(`ERROR_${ErrorNames.EmailInUse}`)}`}>\r\n                                                        <ErrorIcon style={{ color: 'red', fontSize: '22px', cursor: 'default' }} />\r\n                                                    </Tooltip> :\r\n                                                    <CheckCircleIcon style={{ color: 'green', fontSize: '22px' }} />\r\n                                            )\r\n                                        }\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                            onChange={(e: React.ChangeEvent<any>) => handleEmailChange(handleChange, e)}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.email && touched.email &&\r\n                                <ErrorMessage name=\"email\" component=\"div\" className={mainClasses.formError} />\r\n                            }\r\n                        </div>\r\n                        <TextField\r\n                            error={!!errors.password && touched.password}\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label={t('Password')}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.password && touched.password &&\r\n                                <ErrorMessage name=\"password\" component=\"div\" className={mainClasses.formError} />\r\n                            }\r\n                        </div>\r\n                        <TextField\r\n                            error={!!errors.password && touched.password}\r\n                            required\r\n                            fullWidth\r\n                            name=\"confirmPassword\"\r\n                            label={t('Confirm Password')}\r\n                            type=\"password\"\r\n                            id=\"confirmPassword\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.password && touched.password &&\r\n                                <ErrorMessage name=\"confirmPassword\" component=\"div\" className={mainClasses.formError} />\r\n                            }\r\n                        </div>\r\n                        <br />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={submitting}\r\n                            className={classes.button}\r\n                        >\r\n                            {t('Register')}\r\n                        </Button>\r\n                        {registerState.status === ActionStatus.Request &&\r\n                            <div className={mainClasses.progress}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        }\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\registerStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\LastManStanding.tsx",["674","675","676","677","678","679"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\lastManStandingStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListRow.tsx",["680","681","682","683","684","685","686","687","688","689","690"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\gameListRowStyles.ts",[],["691","692"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\PasswordResetForm.tsx",["693"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport resetPasswordStyles from './passwordResetStyles';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport mainStyles from '../../styles/mainStyles';\r\n\r\ninterface FormikValues {\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IError {\r\n    password?: string;\r\n    confirmPassword?: string;\r\n}\r\n\r\nconst PasswordResetForm = () => {\r\n    const [success, setSuccess] = useState<boolean>(false);\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const history = useHistory();\r\n    const classes = resetPasswordStyles();\r\n    const mainClasses = mainStyles();\r\n    const { token } = useParams<{ token: string }>();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.resetPassword.status === ActionStatus.Request);\r\n        if (authState.resetPassword.status === ActionStatus.Success) {\r\n            setSuccess(true);\r\n        }\r\n    }, [authState.resetPassword.status]);\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.resetPassword({ password: values.password, token }));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleLoginPageButton = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth={false}\r\n            fullScreen={fullScreen}\r\n            open\r\n            classes={{\r\n                paper:\r\n                    classes.paper\r\n            }}\r\n        >\r\n            <div className={classes.content}>\r\n                <div className={classes.leftPart}>\r\n                    (Lorem Ipsum)\r\n                        </div>\r\n                <div className={classes.mainPart}>\r\n\r\n                    <div className={classes.mainContent}>\r\n                        {!success ?\r\n                            <>\r\n                                <Typography>\r\n                                    {t('Please enter a new Password')}\r\n                                </Typography>\r\n                                <Formik\r\n                                    initialValues={{ password: '', confirmPassword: '' }}\r\n                                    validate={values => {\r\n                                        const errors: IError = {};\r\n                                        if (!values.password) {\r\n                                            errors.password = t('Please enter a Password');\r\n                                        } else if (\r\n                                            !/(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}/.test(values.password)\r\n                                        ) {\r\n                                            errors.password = t('password-validation-error');\r\n                                        } else if (values.password !== values.confirmPassword) {\r\n                                            errors.confirmPassword = t('Passwords do not match');\r\n                                        }\r\n                                        if (!values.confirmPassword) {\r\n                                            errors.confirmPassword = t('Please confirm the Password');\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={handleFormSubmit}\r\n                                >\r\n                                    {({\r\n                                        values,\r\n                                        errors,\r\n                                        touched,\r\n                                        handleChange,\r\n                                        handleBlur,\r\n                                        handleSubmit\r\n                                    }) => (\r\n                                        <form className={classes.form} onSubmit={handleSubmit}>\r\n                                            <TextField\r\n                                                error={!!errors.password && touched.password}\r\n                                                required\r\n                                                fullWidth\r\n                                                name=\"password\"\r\n                                                label={t('Password')}\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={classes.textField}\r\n                                            />\r\n                                            <div className={mainClasses.formErrorContainer}>\r\n                                                {errors.password && touched.password &&\r\n                                                    <ErrorMessage name=\"password\" component=\"div\" className={mainClasses.formError} />}\r\n                                            </div>\r\n                                            <TextField\r\n                                                error={!!errors.confirmPassword && touched.confirmPassword}\r\n                                                required\r\n                                                fullWidth\r\n                                                name=\"confirmPassword\"\r\n                                                label={t('Confirm Password')}\r\n                                                type=\"password\"\r\n                                                id=\"confirmPassword\"\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={classes.textField}\r\n                                            />\r\n                                            <div className={mainClasses.formErrorContainer}>\r\n                                                {errors.confirmPassword && touched.confirmPassword &&\r\n                                                    <ErrorMessage name=\"confirmPassword\" component=\"div\" className={mainClasses.formError} />}\r\n                                            </div>\r\n                                            <br />\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                disabled={submitting}\r\n                                                className={classes.button}\r\n                                            >\r\n                                                {t('Confirm')}\r\n                                            </Button>\r\n                                            {authState.resetPassword.status === ActionStatus.Request &&\r\n                                                <div className={mainClasses.progress}>\r\n                                                    <CircularProgress />\r\n                                                </div>\r\n                                            }\r\n                                            {authState.resetPassword.status === ActionStatus.Failure &&\r\n                                                <div className={mainClasses.errorMessage}>\r\n                                                    {t(`ERROR_${authState.resetPassword.error}`)}\r\n                                                </div>\r\n                                            }\r\n                                        </form>\r\n                                    )}\r\n                                </Formik>\r\n                            </> :\r\n                            <>\r\n                                <Typography>\r\n                                    {t(\"Your password was successfully reset\")}\r\n                                </Typography>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        disabled={submitting}\r\n                                        className={classes.button}\r\n                                        onClick={handleLoginPageButton}\r\n                                    >\r\n                                        {t('Go to Login Page')}\r\n                                    </Button>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default PasswordResetForm;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\loginDialogStyles.ts",[],["694","695"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\facebookButtonStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\playerFormTextFieldStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\FacebookButton.tsx",[],["696","697"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleLogo.tsx",["698"],"import React from 'react'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst GoogleLogo = (props: Props) => {\r\n    return (\r\n        <SvgIcon>\r\n            <svg viewBox=\"0 0 256 262\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid\">\r\n                <path d=\"M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\" fill=\"#4285F4\" />\r\n                <path d=\"M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1\" fill=\"#34A853\" />\r\n                <path d=\"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782\" fill=\"#FBBC05\" />\r\n                <path d=\"M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251\" fill=\"#EB4335\" />\r\n            </svg>\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nexport default GoogleLogo\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListEnterScoreButton.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListRound.tsx",["699"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\store.ts",["700","701","702","703"],"import { createStore, applyMiddleware, combineReducers, AnyAction, Action, Reducer, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './user/reducer';\r\nimport authReducer from './auth/reducer';\r\nimport registerReducer from './register/reducer';\r\nimport entitiesReducer from './tournamentEntities/reducer';\r\nimport settingsReducer from './settings/reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    entities: entitiesReducer,\r\n    user: userReducer,\r\n    register: registerReducer,\r\n    settings: settingsReducer,\r\n});\r\n\r\nconst configureStore = () => {\r\n    return createStore(\r\n        rootReducer,\r\n        composeWithDevTools(applyMiddleware(thunk))\r\n    )\r\n};\r\n\r\nexport default configureStore;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\asyncWrapper.ts",["704"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\error.ts",[],["705","706"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\CreateTournamentDialog.tsx",["707"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\createTournamentDialogStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\Profile.tsx",["708","709","710"],"import React, { useEffect, useState } from 'react';\r\nimport { RootState } from '../../redux/store';\r\nimport clsx from 'clsx';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { authActions } from '../../redux/auth/actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { ActionStatus } from '../../types/main';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { userActions } from '../../redux/user/actions';\r\nimport { UserUpdateReqData } from '../../types/user';\r\nimport { useSnackbar } from 'notistack';\r\nimport Link from '@material-ui/core/Link';\r\nimport toast from '../IndependentSnackbar';\r\nimport profileStyles from './profileStyles';\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport DeleteAccountDialog from './DeleteAccountDialog';\r\nimport DeleteAccountSuccessDialog from './DeleteAccountSuccessDialog';\r\n\r\ninterface FormValues {\r\n  displayName?: string;\r\n  currentPassword?: string;\r\n  password?: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Profile = (props: Props) => {\r\n  const [submitting, setSubmitting] = useState<boolean>(false);\r\n  const [deleteAccountDialogOpen, setDeleteAccountDialogOpen] = useState<boolean>(false);\r\n  const classes = profileStyles();\r\n  const mainClasses = mainStyles();\r\n  const authState = useSelector((state: RootState) => state.auth);\r\n  const userState = useSelector((state: RootState) => state.user);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    setSubmitting(userState.update.status === ActionStatus.Request);\r\n  }, [userState.update.status]);\r\n\r\n  useEffect(() => {\r\n    if (userState.delete.status === ActionStatus.Success) {\r\n      history.push('/delete-account-success')\r\n    };\r\n  }, [userState.update.status]);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(authActions.logout());\r\n  }\r\n\r\n  const handleFormSubmit = (values: FormValues): void => {\r\n    const userUpdateData: UserUpdateReqData = {\r\n      id: authState.data!.id,\r\n      displayName: values.displayName,\r\n      currentPassword: values.currentPassword,\r\n      password: values.password,\r\n    }\r\n    userUpdateData.id && dispatch(userActions.updateUser(userUpdateData));\r\n    setSubmitting(true);\r\n  }\r\n\r\n  const openDeleteAccountDialog = () => {\r\n    setDeleteAccountDialogOpen(true);\r\n  }\r\n\r\n  const closeDeleteAccountDialog = () => {\r\n    setDeleteAccountDialogOpen(false);\r\n  }\r\n\r\n  const closeDeleteAccountSuccessDialog = () => {\r\n    dispatch(userActions.requestDeleteReset());\r\n  }\r\n\r\n  const handleDeleteConfirm = () => {\r\n    authState.data?.id && dispatch(userActions.deleteUserEmailRequest());\r\n    setDeleteAccountDialogOpen(false);\r\n  }\r\n\r\n  if (authState.status !== ActionStatus.Success) {\r\n    return (\r\n      <div>\r\n        {t('You are logged out')}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography>\r\n        {t(\"Your Profile\")}\r\n      </Typography>\r\n      <Formik\r\n        initialValues={{ displayName: '', currentPassword: '', password: '', confirmPassword: '' }}\r\n        validate={values => {\r\n          const errors: FormValues = {};\r\n          const { currentPassword, password, confirmPassword } = values;\r\n          if (!currentPassword && !password && !confirmPassword) {\r\n            return errors;\r\n          }\r\n          if (!values.currentPassword) {\r\n            errors.currentPassword = t('Please enter the Password');\r\n          }\r\n          if (!values.password) {\r\n            errors.password = t('Please enter the Password');\r\n          } else if (values.password !== values.confirmPassword) {\r\n            errors.confirmPassword = t('Passwords do not match');\r\n          } else if (\r\n            !/(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}/.test(values.password)\r\n          ) {\r\n            errors.password = t('password-validation-error');\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit\r\n        }) => (\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <TextField\r\n              size=\"small\"\r\n              defaultValue={authState.data?.displayName}\r\n              fullWidth\r\n              id=\"displayName\"\r\n              label={t('Display Name')}\r\n              name=\"displayName\"\r\n              autoComplete=\"displayName\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              className={classes.textField}\r\n            />\r\n            <TextField\r\n              size=\"small\"\r\n              disabled\r\n              value={authState.data?.email}\r\n              fullWidth\r\n              id=\"email\"\r\n              label={t('Email')}\r\n              className={classes.textField}\r\n            />\r\n            {!authState.data?.social &&\r\n              <>\r\n                <TextField\r\n                  error={!!errors.password && touched.password}\r\n                  fullWidth\r\n                  name=\"currentPassword\"\r\n                  label={t('Current Password')}\r\n                  type=\"password\"\r\n                  id=\"currentPassword\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={classes.textField}\r\n                />\r\n                <div className={mainClasses.formErrorContainer}>\r\n                  {errors.currentPassword && touched.currentPassword &&\r\n                    <ErrorMessage name=\"currentPassword\" component=\"div\" className={mainClasses.formError} />}\r\n                </div>\r\n                <TextField\r\n                  error={!!errors.password && touched.password}\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label={t('New Password')}\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={classes.textField}\r\n                />\r\n                <div className={mainClasses.formErrorContainer}>\r\n                  {errors.password && touched.password &&\r\n                    <ErrorMessage name=\"password\" component=\"div\" className={mainClasses.formError} />}\r\n                </div>\r\n                <TextField\r\n                  error={!!errors.password && touched.password}\r\n                  fullWidth\r\n                  name=\"confirmPassword\"\r\n                  label={t('Confirm Password')}\r\n                  type=\"password\"\r\n                  id=\"confirmPassword\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={classes.textField}\r\n                />\r\n                <div className={mainClasses.formErrorContainer}>\r\n                  {errors.confirmPassword && touched.confirmPassword &&\r\n                    <ErrorMessage name=\"confirmPassword\" component=\"div\" className={mainClasses.formError} />}\r\n                </div>\r\n              </>\r\n            }\r\n            <br />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={submitting}\r\n              className={classes.button}\r\n            //onClick={() => showSnackbars(errors)}\r\n            >\r\n              {t('Save')}\r\n            </Button>\r\n            {userState.update.status === ActionStatus.Request &&\r\n              <div className={mainClasses.progress}>\r\n                <CircularProgress />\r\n              </div>\r\n            }\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <Link href=\"\" style={{ color: 'red', textAlign: 'center', marginBottom: '12px' }} onClick={(e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        openDeleteAccountDialog()\r\n      }}>\r\n        {t(\"Delete Account\")}\r\n      </Link>\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={clsx(classes.button, classes.logoutBtn)}\r\n        onClick={handleLogout}\r\n      >\r\n        {t('Logout')}\r\n      </Button>\r\n      <DeleteAccountDialog\r\n        open={deleteAccountDialogOpen}\r\n        onClose={closeDeleteAccountDialog}\r\n        onConfirm={handleDeleteConfirm}\r\n      />\r\n      <DeleteAccountSuccessDialog\r\n        open={\r\n          userState.requestDelete.status === ActionStatus.Success ||\r\n          userState.requestDelete.status === ActionStatus.Failure\r\n        }\r\n        onClose={closeDeleteAccountSuccessDialog}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\user.ts",["711","712"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordReset.tsx",["713","714","715"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress, Link } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport resetPasswordStyles from './passwordResetStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport mainStyles from '../../styles/mainStyles';\r\ninterface IFormikValues {\r\n    email: string;\r\n}\r\n\r\ninterface IError {\r\n    email?: string;\r\n}\r\n\r\ninterface Props {\r\n    onSuccessCallback: () => void;\r\n}\r\n\r\nconst RequestPasswordReset = (props: Props) => {\r\n    const classes = resetPasswordStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.forgotPassword.status === ActionStatus.Request);\r\n        if (authState.forgotPassword.status === ActionStatus.Success) {\r\n            props.onSuccessCallback();\r\n        }\r\n    }, [authState.forgotPassword.status]);\r\n\r\n    const handleFormSubmit = (values: IFormikValues): void => {\r\n        setSubmitting(true);\r\n        dispatch(authActions.forgotPassword({ email: values.email }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography >\r\n                {t('Request new password')}\r\n            </Typography>\r\n            <Formik\r\n                initialValues={{ email: '' }}\r\n                validate={values => {\r\n                    const errors: IError = {};\r\n                    if (!values.email) {\r\n                        errors.email = t('Email is required');\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = t('Invalid Email Address');\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={handleFormSubmit}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit\r\n                }) => (\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label={t('Email')}\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        {errors.email && touched.email &&\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"form-error\" />}\r\n                        <br />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={submitting}\r\n                            className={classes.button}\r\n                        >\r\n                            {t('Confirm')}\r\n                        </Button>\r\n                        {authState.forgotPassword.status === ActionStatus.Request &&\r\n                            <div className={mainClasses.progress}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        }\r\n                        {/* {authState.forgotPassword.status === ActionStatus.Failure &&\r\n                            <div className={mainClasses.errorMessage}>\r\n                                {t(`ERROR_${authState.forgotPassword.error}`)}\r\n                            </div>\r\n                        } */}\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RequestPasswordReset;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreContent.tsx",["716","717","718","719","720","721","722","723"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreSelector.tsx",["724","725"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreScoresConainer.tsx",["726"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreDialog.tsx",["727","728"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\reducer.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\reducer.ts",["729"],"import { ActionStatus } from \"../../types/main\";\r\nimport AppState from \"../../types/redux\";\r\nimport { clearCookieAndStorage } from \"../../utils/authUtils\";\r\nimport { AuthActionParams, AuthReducerState } from \"./types\";\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGIN_RESET,\r\n  USER_UPDATE_SUCCESS,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAILURE,\r\n  FORGOT_PASSWORD_RESET,\r\n  RESET_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAILURE,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nconst forgotPasswordInitialState = {\r\n  status: ActionStatus.Initial,\r\n  error: ''\r\n}\r\n\r\nconst resetPasswordInitialState = {\r\n  status: ActionStatus.Initial,\r\n  error: ''\r\n}\r\n\r\nconst loginCheckInitialState = {\r\n  status: ActionStatus.Initial,\r\n  error: ''\r\n}\r\n\r\nconst initialState: AuthReducerState | null = {\r\n  status: ActionStatus.Initial,\r\n  data: {\r\n    id: null,\r\n    email: '',\r\n    displayName: '',\r\n    password: '',\r\n    social: null,\r\n  },\r\n  error: '',\r\n  forgotPassword: { ...forgotPasswordInitialState },\r\n  resetPassword: { ...resetPasswordInitialState },\r\n  loginCheck: { ...loginCheckInitialState },\r\n};\r\n\r\nconst reducer = (state: AuthReducerState = initialState, action: AuthActionParams): AuthReducerState => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        data: { ...initialState.data, ...action.payload?.data },\r\n        status: ActionStatus.Request,\r\n      };\r\n    }\r\n    case LOGIN_RESET: {\r\n      return {\r\n        ...state,\r\n        data: { ...initialState.data },\r\n        status: ActionStatus.Initial,\r\n      };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        status: ActionStatus.Success,\r\n        error: ''\r\n      };\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        status: ActionStatus.Failure,\r\n        ...action.payload\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          status: ActionStatus.Request,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          status: ActionStatus.Success,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_FAILURE: {\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          status: ActionStatus.Failure,\r\n          error: action.payload?.error\r\n        }\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_RESET: {\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          status: ActionStatus.Initial,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case RESET_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        resetPassword: {\r\n          status: ActionStatus.Request,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case RESET_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        resetPassword: {\r\n          status: ActionStatus.Success,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case RESET_PASSWORD_FAILURE: {\r\n      return {\r\n        ...state,\r\n        resetPassword: {\r\n          status: ActionStatus.Failure,\r\n          error: action.payload?.error\r\n        }\r\n      };\r\n    }\r\n    case USER_UPDATE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        data: { ...action.payload?.data!, social: state.data?.social },\r\n        //status: ActionStatus.Success,\r\n        //error: ''\r\n      };\r\n    }\r\n    case LOGOUT: {\r\n      clearCookieAndStorage();\r\n      return {\r\n        ...initialState\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PrivateRoute.tsx",["730","731","732"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { authActions } from '../../redux/auth/actions';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\n\r\ninterface Props {\r\n    children: React.ReactElement;\r\n    path: string;\r\n    exact?: boolean;\r\n}\r\n\r\nconst PrivateRoute = ({ children, ...rest }: Props) => {\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n\r\n    // useEffect(() => {\r\n    //     if (authState.status !== ActionStatus.Success) {\r\n    //         dispatch(authActions.loginCheck());\r\n    //     }\r\n    // }, [])\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() =>\r\n                authState.status === ActionStatus.Success ?\r\n                    children :\r\n                    <Redirect to=\"/login\" />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerTypeSelect.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\types.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\actions.ts",["733","734","735","736","737","738"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\config.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\profileStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\loginStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreItem.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\scoreUtils.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PublicRoute.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\types.ts",["739"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\DeleteAccount\\deleteAccountStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\DYPConfigForm.tsx",["740","741"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\LastManStandingPlayerStatsRow.tsx",["742"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { ReactComponent as DeadPlayerSkull } from '../../../resources/icons/lms.svg';\r\nimport KEKW from '../../../resources/icons/KEKW.png';\r\nimport lastManStandingStyles from './lastManStandingStyles';\r\nimport { LMSColOrderKeys, LMSTableProps } from '../../../types/entities';\r\n\r\ninterface Props extends LMSTableProps {\r\n    placement: number;\r\n    colOrderedKeys: LMSColOrderKeys[];\r\n    showName?: boolean;\r\n    showLives?: boolean;\r\n    showPoints?: boolean;\r\n    showNumberOfGames?: boolean;\r\n    easterEgg?: boolean;\r\n}\r\n\r\nconst LastManStandingPlayerStatsRow = (props: Props) => {\r\n    const classes = lastManStandingStyles();\r\n\r\n    return (\r\n        <tr className={classes.lmsStatsTr}>\r\n            <td className={clsx(classes.lmsStatsTd, classes.lmsStatsTdPlacement)}>{props.placement}</td>\r\n            {props.colOrderedKeys.map((key: LMSColOrderKeys) => {\r\n                if (key === 'lives' && props[key] === 0) {\r\n                    return <td className={classes.lmsStatsTd} style={{verticalAlign: 'bottom'}}>\r\n                        {!props.easterEgg ? <DeadPlayerSkull width={21} height={21} /> : <img width={21} height={21} src={KEKW} title='Dead KEKW' />}\r\n                    </td>\r\n                }\r\n                if (key === 'averagePoints') {\r\n                    return <td className={classes.lmsStatsTd}>\r\n                        {props[key]?.toFixed(2)}\r\n                    </td>\r\n                }\r\n                return (props[key] || typeof props[key] === 'number') &&\r\n                    <td className={clsx(classes.lmsStatsTd, { [classes.lmsStatsTdPlayer]: key === 'name' })}>\r\n                        {props[key]}\r\n                    </td>\r\n            })}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default LastManStandingPlayerStatsRow\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\LastManStandingPlayerStatsList.tsx",["743","744","745","746"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../../redux/store';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport clsx from 'clsx';\r\nimport LastManStandingPlayerStatsRow from './LastManStandingPlayerStatsRow';\r\nimport { Players } from '../../../pages/Tournaments/LastManStanding';\r\nimport toast from '../../IndependentSnackbar';\r\nimport TournamentStatsSettingsList from '../TournamentStatsSettingsList';\r\nimport { updateSettings } from '../../../redux/settings/actions';\r\nimport lastManStandingStyles from './lastManStandingStyles';\r\nimport { LMSColOrderKeys } from '../../../types/entities';\r\nimport { getNormalizedParticipants } from '../../../utils/arrayUtils';\r\n\r\ninterface Props {\r\n    playersData: Players\r\n}\r\n\r\nconst LastManStandingPlayerStatsList = (props: Props) => {\r\n    const [settingsOpen, setSettingsOpen] = useState<boolean>(false);\r\n    const [easterEgg, setEasterEgg] = useState<boolean>(false);\r\n    const entityState = useSelector((state: RootState) => state.entities);\r\n    const games = useSelector((state: RootState) => state.entities.games);\r\n    const lmsPlayers = useSelector((state: RootState) => state.entities.lmsPlayers);\r\n    const settingsState = useSelector((state: RootState) => state.settings);\r\n    const statsColOrder = useSelector((state: RootState) => state.settings.tournamentSidebarColumnOrder) || ['name', 'numberOfGames', 'lives'];\r\n    const statsEnabledColumns = useSelector((state: RootState) => state.settings.tournamentSidebarEnabledColumns) || ['name', 'numberOfGames', 'lives'];\r\n    const dispatch = useDispatch();\r\n    const classes = lastManStandingStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const normalizedParticipants =  getNormalizedParticipants(entityState.participants);\r\n\r\n\r\n    const statNames: { [key in LMSColOrderKeys]: string } = {\r\n        name: t('LMSStatsCol_Player'),\r\n        lives: t('LMSStatsCol_Lives'),\r\n        numberOfGames: t('LMSStatsCol_NumberOfGames'),\r\n        points: t('LMSStatsCol_Points'),\r\n        averagePoints: t('LMSStatsCol_AveragePoints'),\r\n        goals: t('LMSStatsCol_Goals'),\r\n        goalsIn: t('LMSStatsCol_GoalsIn'),\r\n        goalDiff: t('LMSStatsCol_GoalDiff'),\r\n        matchesWon: t('LMSStatsCol_MatchesWon'),\r\n        matchesLost: t('LMSStatsCol_MatchesLost'),\r\n        matchesDraw: t('LMSStatsCol_MatchesDraw'),\r\n    }\r\n\r\n    const handleSettingsButtonClick = (e: React.MouseEvent) => {\r\n        if (e.ctrlKey && e.shiftKey && e.altKey) {\r\n            !easterEgg && toast.success('KEKW mode activated.');\r\n            setEasterEgg(!easterEgg);\r\n            return;\r\n        }\r\n        setSettingsOpen(!settingsOpen);\r\n    }\r\n\r\n    const visibleOrderedColumns: LMSColOrderKeys[] = statsEnabledColumns.sort((a, b) => {\r\n        if (statsColOrder.indexOf(a) > statsColOrder.indexOf(b)) {\r\n            return 1;\r\n        }\r\n        return -1;\r\n    });\r\n\r\n    const renderPlayersWithStats = () => {\r\n\r\n        const playersArr = Object.values(props.playersData).sort((a, b) => {\r\n            if (a.lives < b.lives) {\r\n                return 1\r\n            }\r\n            return -1;\r\n        })\r\n\r\n        return playersArr.map((player, i) => {\r\n            const name = typeof player.id === 'number' ? player.id : `${player.id[0]} / ${player.id[1]}`;\r\n            return (\r\n                <LastManStandingPlayerStatsRow\r\n                    placement={i + 1}\r\n                    name={normalizedParticipants[player.id].name}\r\n                    lives={player.lives}\r\n                    goals={player.goals}\r\n                    goalsIn={player.goalsIn}\r\n                    goalDiff={player.goals - player.goalsIn}\r\n                    numberOfGames={player.numberOfGames}\r\n                    points={player.points}\r\n                    averagePoints={player.numberOfGames > 0 ? player.points / player.numberOfGames : 0}\r\n                    matchesWon={player.matchesWon}\r\n                    matchesLost={player.matchesLost}\r\n                    matchesDraw={player.numberOfGames - player.matchesWon - player.matchesLost}\r\n                    colOrderedKeys={visibleOrderedColumns}\r\n                    easterEgg={easterEgg}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    const handleColumnChange = (columns: LMSColOrderKeys[]) => {\r\n        dispatch(updateSettings({ tournamentSidebarColumnOrder: [...columns] }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.tournamentSidebarHeaderContainer}>\r\n                <div\r\n                    className={clsx(classes.tournamentSidebarHeader, { [classes.tournamentSidebarHeaderClosed]: !settingsOpen })}\r\n                    style={{ maxHeight: settingsOpen ? '416px' : '56px' }}\r\n                >\r\n                    <div className={classes.tournamentSidebarHeaderTitle}>\r\n                        {settingsOpen && <div className={classes.tournamentSidebarHeaderTitleText}>{t('Configure Table')}</div>}\r\n                        <IconButton\r\n                            onClick={handleSettingsButtonClick}\r\n                        >\r\n                            {settingsOpen ?\r\n                                <CloseIcon className={classes.icons} /> :\r\n                                <SettingsIcon className={classes.icons} />\r\n                            }\r\n                        </IconButton>\r\n                    </div>\r\n                    <div style={!settingsOpen ? { visibility: 'hidden' } : {}}>\r\n                        <TournamentStatsSettingsList orderedColumns={statsColOrder} enabledColumns={statsEnabledColumns} onChange={handleColumnChange} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <CardContent className={classes.cardContent}>\r\n                <div className={classes.statnsTableContainer}>\r\n\r\n                    <table className={classes.lmsStatsTable}>\r\n                        <thead className={classes.lmsStatsThead}>\r\n                            <td className={clsx(classes.lmsStatsTd, classes.lmsStatsTdPlacement)}>#</td>\r\n                            {visibleOrderedColumns.map((key: LMSColOrderKeys) => {\r\n                                return <td className={clsx(classes.lmsStatsHeaderTd, { [classes.lmsStatsTdPlayer]: key === 'name' })}>\r\n                                    {statNames[key]}\r\n                                </td>\r\n                            })}\r\n                        </thead>\r\n                        <tbody>\r\n                            {renderPlayersWithStats()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </CardContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LastManStandingPlayerStatsList\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\lastManStandingStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationSidebarItem.tsx",["747","748","749","750","751","752"],"import React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StateEliminationPlayer, StateEliminationPlayers, StateParticipant } from '../../../types/entities';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\r\nimport eliminationSidebarStyles from './eliminationSidebarStyles';\r\nimport { RootState } from '../../../redux/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { getNormalizedParticipants } from '../../../utils/arrayUtils';\r\n\r\ninterface Props {\r\n    player: StateEliminationPlayer,\r\n    index: number;\r\n}\r\n\r\nconst EliminationSidebarItem = (props: Props) => {\r\n    const storeParticipants = useSelector((state: RootState) => state.entities.participants);\r\n    const classes = eliminationSidebarStyles();\r\n    const { t } = useTranslation();\r\n    \r\n    const normalizedParticipants = getNormalizedParticipants(storeParticipants);\r\n    const playerId: string = typeof props.player.id === 'object' ? props.player.id.join('/') : props.player.id?.toString();\r\n    const playerName = typeof props.player.id === 'object' ? `${normalizedParticipants[props.player.id[0]]?.name} / ${normalizedParticipants[props.player.id[1]]?.name} ` : normalizedParticipants[props.player.id]?.name\r\n\r\n    const getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\r\n        background: isDragging ? \"#ffffff44\" : \"initial\",\r\n        boxShadow: isDragging ? \"0px 2px 12px #00000077\" : \"initial\",\r\n        ...draggableStyle,\r\n        cursor: 'move',\r\n        outline: 'none',\r\n    });\r\n\r\n    return (\r\n        <Draggable key={playerId + props.index} draggableId={playerId + props.index} index={props.index}>\r\n            {(provided, snapshot) => (\r\n                <div\r\n                    className={classes.eliminationSidebarItem}\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                    )}\r\n                >\r\n                    <div className={classes.eliminationSidebarItemNumber}>{props.index + 1}</div>\r\n                    {props.player && props.player.bye ?\r\n                        <div className={classes.eliminationSidebarItemPlayerBye}>{t('<Bye>')}</div> :\r\n                        <div className={classes.eliminationSidebarItemPlayer}>{playerName}</div>\r\n                    }\r\n                    <div className={classes.eliminationSidebarItemIcon}>\r\n                        <DragHandleIcon />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default EliminationSidebarItem\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationCard.tsx",["753","754","755","756","757"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationBracketCards.tsx",["758"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationCards.tsx",["759","760","761"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\main.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\IndependentSnackbar\\index.tsx",["762","763"],"import ReactDOM from 'react-dom';\r\nimport { SnackbarProvider, withSnackbar, VariantType, WithSnackbarProps  } from 'notistack';\r\nimport React, { Component, useEffect } from 'react';\r\n// import SnackbarDisplay from './SnackbarDisplay';\r\n\r\nconst mountPoint = document.getElementById('snackbarhelper');\r\n\r\nconst Display = withSnackbar<{ message: string, variant: VariantType, enqueueSnackbar: any, closeSnackbar: any }>(({ message, variant, enqueueSnackbar }) => {\r\n  useEffect(() => {\r\n    enqueueSnackbar(message, { variant });\r\n  })\r\n  return null;\r\n});\r\n\r\n\r\nconst toast = {\r\n  success: function (msg: string) {\r\n    this.toast(msg, 'success');\r\n  },\r\n  warning: function (msg: string) {\r\n    this.toast(msg, 'warning');\r\n  },\r\n  error: function (msg: string) {\r\n    this.toast(msg, 'error');\r\n  },\r\n  toast: (msg: string, variant: VariantType) => {\r\n    ReactDOM.render(\r\n      <SnackbarProvider maxSnack={3} anchorOrigin={{ horizontal: 'center', vertical: 'bottom' }}>\r\n        <Display message={msg} variant={variant} />\r\n      </SnackbarProvider>,\r\n      mountPoint)\r\n  }\r\n};\r\n\r\nexport default toast;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\Login.tsx",["764","765","766"],"import React, { useEffect, useState, FC } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress, Link } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport loginStyles from './loginStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport FacebookButton from '../../components/Buttons/FacebookLogin/FacebookButton';\r\nimport GoogleButton from '../../components/Buttons/GoogleLogin/GoogleButton';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { appName } from '../../utils/constants';\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport toast from '../../components/IndependentSnackbar';\r\n\r\ninterface FormikValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface IError {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\ninterface Props {\r\n    resetPasswordCallback: () => void\r\n}\r\n\r\nconst Login = (props: Props) => {\r\n    const classes = loginStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.status === ActionStatus.Request);\r\n        if (authState.status === ActionStatus.Failure) {\r\n            //authState.error && toast.error(t(`ERROR_${authState.error}`))\r\n        }\r\n    }, [authState.status]);\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.login(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleForgotPassword = (e: React.MouseEvent): void => {\r\n        e.preventDefault();\r\n        props.resetPasswordCallback();\r\n    }\r\n\r\n    const responseGoogle = (response: any) => {\r\n        dispatch(authActions.googleLogin(response.tokenId));\r\n    }\r\n\r\n    const responseGoogleFailure = (response: any) => {\r\n        toast.error(`${t('Google Login Error:')} ${response?.details}`);\r\n    }\r\n\r\n    const responseFacebook = (response: any) => {\r\n        dispatch(authActions.facebookLogin(response));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                {t(\"Login to app\", { appName })}\r\n            </Typography>\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                validate={values => {\r\n                    const errors: IError = {};\r\n                    if (!values.email) {\r\n                        errors.email = t('Email is required');\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = t('Invalid Email Address');\r\n                    }\r\n                    if (!values.password) {\r\n                        errors.password = t('Please enter the Password');\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={handleFormSubmit}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit\r\n                }) => (\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            error={!!errors.email && touched.email}\r\n                            size=\"small\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label={t('Email')}\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.email && touched.email &&\r\n                                <ErrorMessage name=\"email\" component=\"div\" className={mainClasses.formError} />}\r\n                        </div>\r\n                        <TextField\r\n                            error={!!errors.password && touched.password}\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label={t('Password')}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.password && touched.password &&\r\n                                <ErrorMessage name=\"password\" component=\"div\" className={mainClasses.formError} />}\r\n                        </div>\r\n                        <div className={classes.forgotPasswordLink}>\r\n                            <Link href=\"\" onClick={handleForgotPassword}>\r\n                                {t(\"Forgot Password?\")}\r\n                            </Link>\r\n                        </div>\r\n                        <br />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={submitting}\r\n                            className={classes.button}\r\n                        >\r\n                            {t('Login')}\r\n                        </Button>\r\n                        <GoogleLogin\r\n                            clientId=\"689539234040-ul5se7j4rnm8s7mkf04bn51suq67p1hg.apps.googleusercontent.com\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={responseGoogleFailure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                            render={(renderProps) => (\r\n                                <GoogleButton onClick={renderProps.onClick} />\r\n                            )}\r\n                        />\r\n                        <FacebookLogin\r\n                            appId=\"1360736550926562\"\r\n                            autoLoad={false}\r\n                            fields=\"name,email\"\r\n                            buttonStyle={\r\n                                { width: \"200px\", textTransform: \"none\" }\r\n                            }\r\n                            callback={responseFacebook}\r\n                            render={(renderProps) => (\r\n                                <FacebookButton onClick={renderProps.onClick} />\r\n                            )}\r\n                        />\r\n                        {authState.status === ActionStatus.Request &&\r\n                            <div className={mainClasses.progress}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        }\r\n                        {/* {authState.status === ActionStatus.Failure &&\r\n                            <div className={mainClasses.errorMessage}>\r\n                                {t(`ERROR_${authState.error}`)}\r\n                            </div>\r\n                        } */}\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\stringUtils.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\constants.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\googleButtonStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationSidebar.tsx",["767"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\DYPConfigFormItemPlayerSelect.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\DYPConfigFormItem.tsx",["768"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\DeleteAccountSuccessDialog.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\player.ts",["769","770","771","772","773","774","775","776"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\styles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationColumn.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\eliminationSidebarStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\tournament.ts",["777","778","779","780","781","782","783","784"],"import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\nimport { UserDeleteReqData, UserLoginCheckReqData, UserLoginReqData, UserPasswordResetReqData, UserRegisterReqData, UserUpdateReqData } from '../types/user';\r\nimport { endpoint } from './../config'\r\nimport { asyncWrapper } from '../utils/asyncWrapper';\r\nimport { ForgotPasswordReqData } from '../redux/auth/types';\r\nimport { updateAxiosLocale } from '../utils/i18n';\r\nimport { TournamentCreationReqData, TournamentUpdateReqData } from '../types/entities';\r\n\r\nupdateAxiosLocale();\r\n\r\nconst getTournaments = async (): Promise<AxiosResponse> => {\r\n    const response: AxiosResponse<AxiosRequestConfig> = await axios.get(`${endpoint}/tournament`, { withCredentials: true });\r\n    return response;\r\n}\r\n\r\nconst createTournament = async (data: TournamentCreationReqData): Promise<AxiosResponse> => {\r\n    const response: AxiosResponse<AxiosRequestConfig> = await axios.post(`${endpoint}/tournament`, data, { withCredentials: true });\r\n    return response;\r\n}\r\n\r\nconst updateTournament = async (data: TournamentUpdateReqData): Promise<AxiosResponse> => {\r\n    const response: AxiosResponse<AxiosRequestConfig> = await axios.put(`${endpoint}/tournament/${data.id}`, data, { withCredentials: true });\r\n    return response;\r\n}\r\n\r\nconst deleteTournament = async (id: number): Promise<AxiosResponse> => {\r\n    const response: AxiosResponse<AxiosRequestConfig> = await axios.delete(`${endpoint}/tournament/${id}`, { withCredentials: true });\r\n    return response;\r\n}\r\n\r\nexport const tournamentServices = {\r\n    getTournaments,\r\n    createTournament,\r\n    updateTournament,\r\n    deleteTournament,\r\n\r\n}","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\dypFormStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\HomeCard.tsx",["785","786","787","788","789"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\homeCardStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\enterScoresStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Generic\\Dialog.tsx",["790","791","792","793"],"import React, { ReactElement, useState } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Dialog as MUIDialog } from '@material-ui/core';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport dialogStyles from './dialogStyles';\r\ninterface Props {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onConfirm: () => void;\r\n    titleText: string;\r\n    bodyText: string;\r\n    /** @description Default value is `Confirm`. */\r\n    confirmButtonText?: string;    \r\n    /** @description Default value is `Cancel`. */\r\n    cancelButtonText?: string;\r\n    dialogType: 'warning' | 'error' | 'confirm'\r\n}\r\n\r\nconst Dialog = ({ open, onClose, onConfirm, titleText, bodyText, confirmButtonText, cancelButtonText, dialogType }: Props): ReactElement => {\r\n    const classes = dialogStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const renderHeader = () => {\r\n        switch (dialogType) {\r\n            case 'warning':\r\n                return (\r\n                    <div\r\n                        className={classes.dialogHeader}\r\n                        style={{ backgroundImage: 'linear-gradient(-180deg,#e89e67,#e16f3d)' }}\r\n                    >\r\n                        <WarningIcon style={{ fontSize: 100 }} />\r\n                    </div>\r\n                );\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MUIDialog open={open} onClose={onClose} classes={{ paper: classes.createTournamentDialog }}>\r\n            {renderHeader()}\r\n            <DialogTitle>\r\n                {titleText || t('Confirmation')}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {bodyText || t('Please Confirm Your Action.')}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\" size='small' className={classes.dialogButton}>\r\n                    {cancelButtonText || t('Cancel')}\r\n                </Button>\r\n                <Button onClick={onConfirm} color=\"default\" size='small' className={classes.dialogButton}>\r\n                    {confirmButtonText || t('Confirm')}\r\n                </Button>\r\n            </DialogActions>\r\n        </MUIDialog>\r\n    )\r\n}\r\n\r\nexport default Dialog\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\objectUtils.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\games\\types.ts",["794","795","796"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationBracketCard.tsx",["797","798","799","800","801","802","803","804","805","806","807","808"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\games\\reducer.ts",["809","810"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EliminationResult.tsx",["811"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\eliminationResultStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\TournamentStatsSettingsList.tsx",["812","813"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\TournamentStatsSettingsListItem.tsx",[],{"ruleId":"814","severity":1,"message":"815","line":8,"column":10,"nodeType":"816","messageId":"817","endLine":8,"endColumn":18},{"ruleId":"818","severity":1,"message":"819","line":30,"column":105,"nodeType":"820","messageId":"821","endLine":30,"endColumn":107},{"ruleId":"822","severity":1,"message":"823","line":33,"column":8,"nodeType":"824","endLine":33,"endColumn":99,"suggestions":"825"},{"ruleId":"822","severity":1,"message":"826","line":45,"column":8,"nodeType":"824","endLine":45,"endColumn":40,"suggestions":"827"},{"ruleId":"814","severity":1,"message":"828","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":26},{"ruleId":"822","severity":1,"message":"829","line":32,"column":8,"nodeType":"824","endLine":32,"endColumn":10,"suggestions":"830"},{"ruleId":"814","severity":1,"message":"831","line":36,"column":11,"nodeType":"816","messageId":"817","endLine":36,"endColumn":29},{"ruleId":"832","replacedBy":"833"},{"ruleId":"834","replacedBy":"835"},{"ruleId":"814","severity":1,"message":"836","line":1,"column":17,"nodeType":"816","messageId":"817","endLine":1,"endColumn":25},{"ruleId":"814","severity":1,"message":"837","line":9,"column":8,"nodeType":"816","messageId":"817","endLine":9,"endColumn":19},{"ruleId":"814","severity":1,"message":"838","line":10,"column":8,"nodeType":"816","messageId":"817","endLine":10,"endColumn":17},{"ruleId":"814","severity":1,"message":"839","line":13,"column":10,"nodeType":"816","messageId":"817","endLine":13,"endColumn":22},{"ruleId":"814","severity":1,"message":"840","line":13,"column":24,"nodeType":"816","messageId":"817","endLine":13,"endColumn":30},{"ruleId":"814","severity":1,"message":"841","line":15,"column":10,"nodeType":"816","messageId":"817","endLine":15,"endColumn":21},{"ruleId":"814","severity":1,"message":"842","line":19,"column":10,"nodeType":"816","messageId":"817","endLine":19,"endColumn":17},{"ruleId":"814","severity":1,"message":"843","line":22,"column":11,"nodeType":"816","messageId":"817","endLine":22,"endColumn":23},{"ruleId":"814","severity":1,"message":"844","line":27,"column":11,"nodeType":"816","messageId":"817","endLine":27,"endColumn":17},{"ruleId":"822","severity":1,"message":"845","line":51,"column":8,"nodeType":"824","endLine":51,"endColumn":42,"suggestions":"846"},{"ruleId":"832","replacedBy":"847"},{"ruleId":"834","replacedBy":"848"},{"ruleId":"814","severity":1,"message":"849","line":5,"column":42,"nodeType":"816","messageId":"817","endLine":5,"endColumn":64},{"ruleId":"814","severity":1,"message":"850","line":5,"column":66,"nodeType":"816","messageId":"817","endLine":5,"endColumn":89},{"ruleId":"814","severity":1,"message":"851","line":5,"column":109,"nodeType":"816","messageId":"817","endLine":5,"endColumn":126},{"ruleId":"814","severity":1,"message":"852","line":10,"column":8,"nodeType":"816","messageId":"817","endLine":10,"endColumn":23},{"ruleId":"814","severity":1,"message":"853","line":13,"column":8,"nodeType":"816","messageId":"817","endLine":13,"endColumn":17},{"ruleId":"814","severity":1,"message":"854","line":15,"column":10,"nodeType":"816","messageId":"817","endLine":15,"endColumn":20},{"ruleId":"855","severity":1,"message":"856","line":98,"column":25,"nodeType":"857","endLine":98,"endColumn":28},{"ruleId":"855","severity":1,"message":"856","line":108,"column":25,"nodeType":"857","endLine":108,"endColumn":45},{"ruleId":"855","severity":1,"message":"856","line":117,"column":25,"nodeType":"857","endLine":117,"endColumn":28},{"ruleId":"814","severity":1,"message":"858","line":1,"column":22,"nodeType":"816","messageId":"817","endLine":1,"endColumn":26},{"ruleId":"814","severity":1,"message":"859","line":2,"column":7,"nodeType":"816","messageId":"817","endLine":2,"endColumn":18},{"ruleId":"814","severity":1,"message":"844","line":20,"column":11,"nodeType":"816","messageId":"817","endLine":20,"endColumn":17},{"ruleId":"814","severity":1,"message":"860","line":43,"column":15,"nodeType":"816","messageId":"817","endLine":43,"endColumn":20},{"ruleId":"814","severity":1,"message":"861","line":48,"column":11,"nodeType":"816","messageId":"817","endLine":48,"endColumn":27},{"ruleId":"832","replacedBy":"862"},{"ruleId":"834","replacedBy":"863"},{"ruleId":"814","severity":1,"message":"864","line":3,"column":8,"nodeType":"816","messageId":"817","endLine":3,"endColumn":20},{"ruleId":"814","severity":1,"message":"865","line":1,"column":17,"nodeType":"816","messageId":"817","endLine":1,"endColumn":26},{"ruleId":"814","severity":1,"message":"866","line":35,"column":11,"nodeType":"816","messageId":"817","endLine":35,"endColumn":19},{"ruleId":"832","replacedBy":"867"},{"ruleId":"834","replacedBy":"868"},{"ruleId":"832","replacedBy":"869"},{"ruleId":"834","replacedBy":"870"},{"ruleId":"832","replacedBy":"871"},{"ruleId":"834","replacedBy":"872"},{"ruleId":"814","severity":1,"message":"873","line":2,"column":8,"nodeType":"816","messageId":"817","endLine":2,"endColumn":13},{"ruleId":"814","severity":1,"message":"874","line":7,"column":8,"nodeType":"816","messageId":"817","endLine":7,"endColumn":23},{"ruleId":"814","severity":1,"message":"875","line":8,"column":8,"nodeType":"816","messageId":"817","endLine":8,"endColumn":12},{"ruleId":"814","severity":1,"message":"876","line":11,"column":8,"nodeType":"816","messageId":"817","endLine":11,"endColumn":16},{"ruleId":"814","severity":1,"message":"877","line":12,"column":8,"nodeType":"816","messageId":"817","endLine":12,"endColumn":17},{"ruleId":"814","severity":1,"message":"878","line":13,"column":8,"nodeType":"816","messageId":"817","endLine":13,"endColumn":25},{"ruleId":"832","replacedBy":"879"},{"ruleId":"834","replacedBy":"880"},{"ruleId":"814","severity":1,"message":"881","line":1,"column":10,"nodeType":"816","messageId":"817","endLine":1,"endColumn":16},{"ruleId":"814","severity":1,"message":"882","line":3,"column":29,"nodeType":"816","messageId":"817","endLine":3,"endColumn":47},{"ruleId":"814","severity":1,"message":"883","line":4,"column":23,"nodeType":"816","messageId":"817","endLine":4,"endColumn":34},{"ruleId":"814","severity":1,"message":"884","line":7,"column":10,"nodeType":"816","messageId":"817","endLine":7,"endColumn":19},{"ruleId":"814","severity":1,"message":"885","line":9,"column":10,"nodeType":"816","messageId":"817","endLine":9,"endColumn":20},{"ruleId":"814","severity":1,"message":"886","line":18,"column":24,"nodeType":"816","messageId":"817","endLine":18,"endColumn":37},{"ruleId":"814","severity":1,"message":"887","line":1,"column":10,"nodeType":"816","messageId":"817","endLine":1,"endColumn":23},{"ruleId":"814","severity":1,"message":"888","line":1,"column":49,"nodeType":"816","messageId":"817","endLine":1,"endColumn":64},{"ruleId":"814","severity":1,"message":"889","line":5,"column":5,"nodeType":"816","messageId":"817","endLine":5,"endColumn":21},{"ruleId":"814","severity":1,"message":"890","line":5,"column":8,"nodeType":"816","messageId":"817","endLine":5,"endColumn":25},{"ruleId":"822","severity":1,"message":"891","line":28,"column":8,"nodeType":"824","endLine":28,"endColumn":33,"suggestions":"892"},{"ruleId":"814","severity":1,"message":"893","line":1,"column":8,"nodeType":"816","messageId":"817","endLine":1,"endColumn":13},{"ruleId":"814","severity":1,"message":"894","line":2,"column":22,"nodeType":"816","messageId":"817","endLine":2,"endColumn":32},{"ruleId":"814","severity":1,"message":"895","line":2,"column":34,"nodeType":"816","messageId":"817","endLine":2,"endColumn":39},{"ruleId":"814","severity":1,"message":"896","line":2,"column":41,"nodeType":"816","messageId":"817","endLine":2,"endColumn":53},{"ruleId":"832","replacedBy":"897"},{"ruleId":"834","replacedBy":"898"},{"ruleId":"814","severity":1,"message":"899","line":49,"column":12,"nodeType":"816","messageId":"817","endLine":49,"endColumn":16},{"ruleId":"822","severity":1,"message":"900","line":60,"column":5,"nodeType":"816","endLine":60,"endColumn":14,"suggestions":"901"},{"ruleId":"822","severity":1,"message":"902","line":93,"column":36,"nodeType":"816","endLine":93,"endColumn":47},{"ruleId":"814","severity":1,"message":"903","line":142,"column":19,"nodeType":"816","messageId":"817","endLine":142,"endColumn":23},{"ruleId":"814","severity":1,"message":"885","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":20},{"ruleId":"814","severity":1,"message":"904","line":15,"column":28,"nodeType":"816","messageId":"817","endLine":15,"endColumn":42},{"ruleId":"814","severity":1,"message":"858","line":1,"column":36,"nodeType":"816","messageId":"817","endLine":1,"endColumn":40},{"ruleId":"814","severity":1,"message":"905","line":3,"column":7,"nodeType":"816","messageId":"817","endLine":3,"endColumn":17},{"ruleId":"814","severity":1,"message":"906","line":2,"column":10,"nodeType":"816","messageId":"817","endLine":2,"endColumn":32},{"ruleId":"814","severity":1,"message":"907","line":43,"column":20,"nodeType":"816","messageId":"817","endLine":43,"endColumn":41},{"ruleId":"814","severity":1,"message":"908","line":2,"column":10,"nodeType":"816","messageId":"817","endLine":2,"endColumn":25},{"ruleId":"832","replacedBy":"909"},{"ruleId":"834","replacedBy":"910"},{"ruleId":"814","severity":1,"message":"885","line":12,"column":10,"nodeType":"816","messageId":"817","endLine":12,"endColumn":20},{"ruleId":"814","severity":1,"message":"860","line":39,"column":15,"nodeType":"816","messageId":"817","endLine":39,"endColumn":20},{"ruleId":"814","severity":1,"message":"861","line":44,"column":11,"nodeType":"816","messageId":"817","endLine":44,"endColumn":27},{"ruleId":"832","replacedBy":"911"},{"ruleId":"834","replacedBy":"912"},{"ruleId":"814","severity":1,"message":"907","line":26,"column":20,"nodeType":"816","messageId":"817","endLine":26,"endColumn":41},{"ruleId":"814","severity":1,"message":"838","line":2,"column":8,"nodeType":"816","messageId":"817","endLine":2,"endColumn":17},{"ruleId":"814","severity":1,"message":"890","line":6,"column":8,"nodeType":"816","messageId":"817","endLine":6,"endColumn":25},{"ruleId":"814","severity":1,"message":"850","line":14,"column":29,"nodeType":"816","messageId":"817","endLine":14,"endColumn":52},{"ruleId":"814","severity":1,"message":"913","line":20,"column":7,"nodeType":"816","messageId":"817","endLine":20,"endColumn":20},{"ruleId":"822","severity":1,"message":"914","line":65,"column":8,"nodeType":"824","endLine":65,"endColumn":10,"suggestions":"915"},{"ruleId":"822","severity":1,"message":"902","line":76,"column":46,"nodeType":"816","endLine":76,"endColumn":57},{"ruleId":"916","severity":1,"message":"917","line":334,"column":17,"nodeType":"918","messageId":"919","endLine":334,"endColumn":23},{"ruleId":"814","severity":1,"message":"815","line":2,"column":25,"nodeType":"816","messageId":"817","endLine":2,"endColumn":33},{"ruleId":"814","severity":1,"message":"920","line":27,"column":10,"nodeType":"816","messageId":"817","endLine":27,"endColumn":19},{"ruleId":"822","severity":1,"message":"921","line":65,"column":6,"nodeType":"824","endLine":65,"endColumn":8,"suggestions":"922"},{"ruleId":"814","severity":1,"message":"923","line":32,"column":6,"nodeType":"816","messageId":"817","endLine":32,"endColumn":26},{"ruleId":"814","severity":1,"message":"924","line":38,"column":11,"nodeType":"816","messageId":"817","endLine":38,"endColumn":25},{"ruleId":"822","severity":1,"message":"914","line":35,"column":8,"nodeType":"824","endLine":35,"endColumn":18,"suggestions":"925"},{"ruleId":"814","severity":1,"message":"926","line":19,"column":3,"nodeType":"816","messageId":"817","endLine":19,"endColumn":24},{"ruleId":"814","severity":1,"message":"927","line":19,"column":26,"nodeType":"816","messageId":"817","endLine":19,"endColumn":47},{"ruleId":"814","severity":1,"message":"928","line":19,"column":49,"nodeType":"816","messageId":"817","endLine":19,"endColumn":70},{"ruleId":"814","severity":1,"message":"929","line":6,"column":17,"nodeType":"816","messageId":"817","endLine":6,"endColumn":35},{"ruleId":"814","severity":1,"message":"930","line":6,"column":37,"nodeType":"816","messageId":"817","endLine":6,"endColumn":50},{"ruleId":"814","severity":1,"message":"836","line":1,"column":17,"nodeType":"816","messageId":"817","endLine":1,"endColumn":25},{"ruleId":"814","severity":1,"message":"885","line":6,"column":10,"nodeType":"816","messageId":"817","endLine":6,"endColumn":20},{"ruleId":"822","severity":1,"message":"845","line":30,"column":8,"nodeType":"824","endLine":30,"endColumn":33,"suggestions":"931"},{"ruleId":"822","severity":1,"message":"932","line":52,"column":8,"nodeType":"824","endLine":52,"endColumn":30,"suggestions":"933"},{"ruleId":"822","severity":1,"message":"902","line":73,"column":36,"nodeType":"816","endLine":73,"endColumn":47},{"ruleId":"814","severity":1,"message":"934","line":51,"column":11,"nodeType":"816","messageId":"817","endLine":51,"endColumn":33},{"ruleId":"822","severity":1,"message":"829","line":60,"column":8,"nodeType":"824","endLine":60,"endColumn":10,"suggestions":"935"},{"ruleId":"822","severity":1,"message":"936","line":67,"column":8,"nodeType":"824","endLine":67,"endColumn":44,"suggestions":"937"},{"ruleId":"822","severity":1,"message":"938","line":71,"column":8,"nodeType":"824","endLine":71,"endColumn":15,"suggestions":"939"},{"ruleId":"822","severity":1,"message":"902","line":73,"column":36,"nodeType":"816","endLine":73,"endColumn":47},{"ruleId":"814","severity":1,"message":"940","line":256,"column":11,"nodeType":"816","messageId":"817","endLine":256,"endColumn":36},{"ruleId":"814","severity":1,"message":"941","line":7,"column":10,"nodeType":"816","messageId":"817","endLine":7,"endColumn":20},{"ruleId":"814","severity":1,"message":"942","line":7,"column":22,"nodeType":"816","messageId":"817","endLine":7,"endColumn":33},{"ruleId":"814","severity":1,"message":"943","line":23,"column":19,"nodeType":"816","messageId":"817","endLine":23,"endColumn":27},{"ruleId":"814","severity":1,"message":"944","line":30,"column":11,"nodeType":"816","messageId":"817","endLine":30,"endColumn":24},{"ruleId":"814","severity":1,"message":"945","line":33,"column":11,"nodeType":"816","messageId":"817","endLine":33,"endColumn":31},{"ruleId":"814","severity":1,"message":"946","line":36,"column":11,"nodeType":"816","messageId":"817","endLine":36,"endColumn":19},{"ruleId":"814","severity":1,"message":"947","line":37,"column":11,"nodeType":"816","messageId":"817","endLine":37,"endColumn":18},{"ruleId":"814","severity":1,"message":"948","line":39,"column":13,"nodeType":"816","messageId":"817","endLine":39,"endColumn":14},{"ruleId":"814","severity":1,"message":"949","line":97,"column":17,"nodeType":"816","messageId":"817","endLine":97,"endColumn":23},{"ruleId":"814","severity":1,"message":"950","line":97,"column":25,"nodeType":"816","messageId":"817","endLine":97,"endColumn":31},{"ruleId":"814","severity":1,"message":"951","line":98,"column":15,"nodeType":"816","messageId":"817","endLine":98,"endColumn":20},{"ruleId":"832","replacedBy":"952"},{"ruleId":"834","replacedBy":"953"},{"ruleId":"814","severity":1,"message":"837","line":9,"column":8,"nodeType":"816","messageId":"817","endLine":9,"endColumn":19},{"ruleId":"832","replacedBy":"954"},{"ruleId":"834","replacedBy":"955"},{"ruleId":"832","replacedBy":"956"},{"ruleId":"834","replacedBy":"957"},{"ruleId":"814","severity":1,"message":"958","line":3,"column":8,"nodeType":"816","messageId":"817","endLine":3,"endColumn":18},{"ruleId":"814","severity":1,"message":"959","line":8,"column":10,"nodeType":"816","messageId":"817","endLine":8,"endColumn":22},{"ruleId":"814","severity":1,"message":"960","line":1,"column":57,"nodeType":"816","messageId":"817","endLine":1,"endColumn":66},{"ruleId":"814","severity":1,"message":"881","line":1,"column":68,"nodeType":"816","messageId":"817","endLine":1,"endColumn":74},{"ruleId":"814","severity":1,"message":"961","line":1,"column":76,"nodeType":"816","messageId":"817","endLine":1,"endColumn":83},{"ruleId":"814","severity":1,"message":"962","line":1,"column":85,"nodeType":"816","messageId":"817","endLine":1,"endColumn":92},{"ruleId":"814","severity":1,"message":"854","line":3,"column":10,"nodeType":"816","messageId":"817","endLine":3,"endColumn":20},{"ruleId":"832","replacedBy":"963"},{"ruleId":"834","replacedBy":"964"},{"ruleId":"814","severity":1,"message":"890","line":6,"column":8,"nodeType":"816","messageId":"817","endLine":6,"endColumn":25},{"ruleId":"814","severity":1,"message":"965","line":16,"column":10,"nodeType":"816","messageId":"817","endLine":16,"endColumn":21},{"ruleId":"814","severity":1,"message":"966","line":18,"column":8,"nodeType":"816","messageId":"817","endLine":18,"endColumn":13},{"ruleId":"822","severity":1,"message":"967","line":53,"column":6,"nodeType":"824","endLine":53,"endColumn":31,"suggestions":"968"},{"ruleId":"814","severity":1,"message":"969","line":2,"column":10,"nodeType":"816","messageId":"817","endLine":2,"endColumn":27},{"ruleId":"814","severity":1,"message":"970","line":67,"column":13,"nodeType":"816","messageId":"817","endLine":67,"endColumn":15},{"ruleId":"814","severity":1,"message":"971","line":5,"column":28,"nodeType":"816","messageId":"817","endLine":5,"endColumn":32},{"ruleId":"814","severity":1,"message":"885","line":13,"column":10,"nodeType":"816","messageId":"817","endLine":13,"endColumn":20},{"ruleId":"822","severity":1,"message":"972","line":40,"column":8,"nodeType":"824","endLine":40,"endColumn":41,"suggestions":"973"},{"ruleId":"814","severity":1,"message":"883","line":5,"column":10,"nodeType":"816","messageId":"817","endLine":5,"endColumn":21},{"ruleId":"814","severity":1,"message":"884","line":6,"column":10,"nodeType":"816","messageId":"817","endLine":6,"endColumn":19},{"ruleId":"814","severity":1,"message":"974","line":8,"column":10,"nodeType":"816","messageId":"817","endLine":8,"endColumn":15},{"ruleId":"814","severity":1,"message":"828","line":8,"column":17,"nodeType":"816","messageId":"817","endLine":8,"endColumn":33},{"ruleId":"814","severity":1,"message":"959","line":13,"column":10,"nodeType":"816","messageId":"817","endLine":13,"endColumn":22},{"ruleId":"822","severity":1,"message":"975","line":42,"column":27,"nodeType":"816","endLine":42,"endColumn":34},{"ruleId":"822","severity":1,"message":"976","line":44,"column":8,"nodeType":"824","endLine":44,"endColumn":10,"suggestions":"977"},{"ruleId":"822","severity":1,"message":"978","line":72,"column":8,"nodeType":"824","endLine":72,"endColumn":14,"suggestions":"979"},{"ruleId":"814","severity":1,"message":"948","line":41,"column":13,"nodeType":"816","messageId":"817","endLine":41,"endColumn":14},{"ruleId":"822","severity":1,"message":"980","line":81,"column":8,"nodeType":"824","endLine":81,"endColumn":24,"suggestions":"981"},{"ruleId":"814","severity":1,"message":"948","line":18,"column":13,"nodeType":"816","messageId":"817","endLine":18,"endColumn":14},{"ruleId":"814","severity":1,"message":"828","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":26},{"ruleId":"814","severity":1,"message":"974","line":4,"column":45,"nodeType":"816","messageId":"817","endLine":4,"endColumn":50},{"ruleId":"814","severity":1,"message":"982","line":2,"column":8,"nodeType":"816","messageId":"817","endLine":2,"endColumn":16},{"ruleId":"814","severity":1,"message":"865","line":1,"column":17,"nodeType":"816","messageId":"817","endLine":1,"endColumn":26},{"ruleId":"814","severity":1,"message":"841","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":21},{"ruleId":"814","severity":1,"message":"946","line":15,"column":11,"nodeType":"816","messageId":"817","endLine":15,"endColumn":19},{"ruleId":"814","severity":1,"message":"888","line":1,"column":49,"nodeType":"816","messageId":"817","endLine":1,"endColumn":64},{"ruleId":"814","severity":1,"message":"983","line":5,"column":10,"nodeType":"816","messageId":"817","endLine":5,"endColumn":31},{"ruleId":"814","severity":1,"message":"889","line":28,"column":5,"nodeType":"816","messageId":"817","endLine":28,"endColumn":21},{"ruleId":"814","severity":1,"message":"969","line":31,"column":10,"nodeType":"816","messageId":"817","endLine":31,"endColumn":27},{"ruleId":"814","severity":1,"message":"984","line":31,"column":29,"nodeType":"816","messageId":"817","endLine":31,"endColumn":48},{"ruleId":"814","severity":1,"message":"985","line":35,"column":10,"nodeType":"816","messageId":"817","endLine":35,"endColumn":16},{"ruleId":"814","severity":1,"message":"986","line":2,"column":10,"nodeType":"816","messageId":"817","endLine":2,"endColumn":22},{"ruleId":"814","severity":1,"message":"913","line":22,"column":7,"nodeType":"816","messageId":"817","endLine":22,"endColumn":20},{"ruleId":"822","severity":1,"message":"987","line":64,"column":8,"nodeType":"824","endLine":64,"endColumn":10,"suggestions":"988"},{"ruleId":"989","severity":1,"message":"990","line":27,"column":90,"nodeType":"857","endLine":27,"endColumn":149},{"ruleId":"814","severity":1,"message":"991","line":27,"column":11,"nodeType":"816","messageId":"817","endLine":27,"endColumn":16},{"ruleId":"814","severity":1,"message":"992","line":28,"column":11,"nodeType":"816","messageId":"817","endLine":28,"endColumn":21},{"ruleId":"814","severity":1,"message":"944","line":29,"column":11,"nodeType":"816","messageId":"817","endLine":29,"endColumn":24},{"ruleId":"814","severity":1,"message":"993","line":79,"column":19,"nodeType":"816","messageId":"817","endLine":79,"endColumn":23},{"ruleId":"814","severity":1,"message":"865","line":1,"column":17,"nodeType":"816","messageId":"817","endLine":1,"endColumn":26},{"ruleId":"814","severity":1,"message":"836","line":1,"column":28,"nodeType":"816","messageId":"817","endLine":1,"endColumn":36},{"ruleId":"814","severity":1,"message":"850","line":3,"column":34,"nodeType":"816","messageId":"817","endLine":3,"endColumn":57},{"ruleId":"814","severity":1,"message":"994","line":3,"column":59,"nodeType":"816","messageId":"817","endLine":3,"endColumn":75},{"ruleId":"814","severity":1,"message":"995","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":25},{"ruleId":"814","severity":1,"message":"996","line":4,"column":27,"nodeType":"816","messageId":"817","endLine":4,"endColumn":36},{"ruleId":"814","severity":1,"message":"997","line":5,"column":61,"nodeType":"816","messageId":"817","endLine":5,"endColumn":81},{"ruleId":"814","severity":1,"message":"998","line":6,"column":10,"nodeType":"816","messageId":"817","endLine":6,"endColumn":23},{"ruleId":"814","severity":1,"message":"999","line":6,"column":25,"nodeType":"816","messageId":"817","endLine":6,"endColumn":47},{"ruleId":"814","severity":1,"message":"1000","line":30,"column":11,"nodeType":"816","messageId":"817","endLine":30,"endColumn":21},{"ruleId":"822","severity":1,"message":"1001","line":54,"column":8,"nodeType":"824","endLine":54,"endColumn":50,"suggestions":"1002"},{"ruleId":"814","severity":1,"message":"994","line":5,"column":50,"nodeType":"816","messageId":"817","endLine":5,"endColumn":66},{"ruleId":"814","severity":1,"message":"1003","line":5,"column":27,"nodeType":"816","messageId":"817","endLine":5,"endColumn":39},{"ruleId":"814","severity":1,"message":"1004","line":6,"column":10,"nodeType":"816","messageId":"817","endLine":6,"endColumn":28},{"ruleId":"814","severity":1,"message":"1005","line":20,"column":11,"nodeType":"816","messageId":"817","endLine":20,"endColumn":26},{"ruleId":"814","severity":1,"message":"1006","line":2,"column":55,"nodeType":"816","messageId":"817","endLine":2,"endColumn":72},{"ruleId":"814","severity":1,"message":"1007","line":3,"column":17,"nodeType":"816","messageId":"817","endLine":3,"endColumn":26},{"ruleId":"814","severity":1,"message":"1008","line":1,"column":38,"nodeType":"816","messageId":"817","endLine":1,"endColumn":40},{"ruleId":"814","severity":1,"message":"837","line":3,"column":8,"nodeType":"816","messageId":"817","endLine":3,"endColumn":19},{"ruleId":"814","severity":1,"message":"1009","line":43,"column":11,"nodeType":"816","messageId":"817","endLine":43,"endColumn":18},{"ruleId":"814","severity":1,"message":"1010","line":4,"column":38,"nodeType":"816","messageId":"817","endLine":4,"endColumn":47},{"ruleId":"814","severity":1,"message":"948","line":18,"column":13,"nodeType":"816","messageId":"817","endLine":18,"endColumn":14},{"ruleId":"814","severity":1,"message":"969","line":2,"column":10,"nodeType":"816","messageId":"817","endLine":2,"endColumn":27},{"ruleId":"814","severity":1,"message":"1011","line":2,"column":29,"nodeType":"816","messageId":"817","endLine":2,"endColumn":50},{"ruleId":"814","severity":1,"message":"1012","line":2,"column":52,"nodeType":"816","messageId":"817","endLine":2,"endColumn":68},{"ruleId":"814","severity":1,"message":"1013","line":2,"column":70,"nodeType":"816","messageId":"817","endLine":2,"endColumn":94},{"ruleId":"814","severity":1,"message":"1014","line":2,"column":96,"nodeType":"816","messageId":"817","endLine":2,"endColumn":115},{"ruleId":"814","severity":1,"message":"1015","line":2,"column":117,"nodeType":"816","messageId":"817","endLine":2,"endColumn":134},{"ruleId":"814","severity":1,"message":"1016","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":22},{"ruleId":"814","severity":1,"message":"983","line":5,"column":10,"nodeType":"816","messageId":"817","endLine":5,"endColumn":31},{"ruleId":"814","severity":1,"message":"969","line":2,"column":10,"nodeType":"816","messageId":"817","endLine":2,"endColumn":27},{"ruleId":"814","severity":1,"message":"1011","line":2,"column":29,"nodeType":"816","messageId":"817","endLine":2,"endColumn":50},{"ruleId":"814","severity":1,"message":"1012","line":2,"column":52,"nodeType":"816","messageId":"817","endLine":2,"endColumn":68},{"ruleId":"814","severity":1,"message":"1013","line":2,"column":70,"nodeType":"816","messageId":"817","endLine":2,"endColumn":94},{"ruleId":"814","severity":1,"message":"1014","line":2,"column":96,"nodeType":"816","messageId":"817","endLine":2,"endColumn":115},{"ruleId":"814","severity":1,"message":"1015","line":2,"column":117,"nodeType":"816","messageId":"817","endLine":2,"endColumn":134},{"ruleId":"814","severity":1,"message":"1016","line":4,"column":10,"nodeType":"816","messageId":"817","endLine":4,"endColumn":22},{"ruleId":"814","severity":1,"message":"983","line":5,"column":10,"nodeType":"816","messageId":"817","endLine":5,"endColumn":31},{"ruleId":"814","severity":1,"message":"873","line":2,"column":8,"nodeType":"816","messageId":"817","endLine":2,"endColumn":13},{"ruleId":"814","severity":1,"message":"875","line":7,"column":8,"nodeType":"816","messageId":"817","endLine":7,"endColumn":12},{"ruleId":"814","severity":1,"message":"876","line":11,"column":8,"nodeType":"816","messageId":"817","endLine":11,"endColumn":16},{"ruleId":"814","severity":1,"message":"877","line":13,"column":8,"nodeType":"816","messageId":"817","endLine":13,"endColumn":17},{"ruleId":"814","severity":1,"message":"878","line":14,"column":8,"nodeType":"816","messageId":"817","endLine":14,"endColumn":25},{"ruleId":"814","severity":1,"message":"836","line":1,"column":31,"nodeType":"816","messageId":"817","endLine":1,"endColumn":39},{"ruleId":"814","severity":1,"message":"838","line":2,"column":8,"nodeType":"816","messageId":"817","endLine":2,"endColumn":17},{"ruleId":"814","severity":1,"message":"890","line":6,"column":8,"nodeType":"816","messageId":"817","endLine":6,"endColumn":25},{"ruleId":"814","severity":1,"message":"1017","line":9,"column":8,"nodeType":"816","messageId":"817","endLine":9,"endColumn":28},{"ruleId":"814","severity":1,"message":"1018","line":2,"column":10,"nodeType":"816","messageId":"817","endLine":2,"endColumn":22},{"ruleId":"814","severity":1,"message":"982","line":4,"column":8,"nodeType":"816","messageId":"817","endLine":4,"endColumn":16},{"ruleId":"814","severity":1,"message":"1019","line":4,"column":20,"nodeType":"816","messageId":"817","endLine":4,"endColumn":33},{"ruleId":"814","severity":1,"message":"1020","line":5,"column":47,"nodeType":"816","messageId":"817","endLine":5,"endColumn":57},{"ruleId":"814","severity":1,"message":"999","line":6,"column":10,"nodeType":"816","messageId":"817","endLine":6,"endColumn":32},{"ruleId":"814","severity":1,"message":"1021","line":7,"column":8,"nodeType":"816","messageId":"817","endLine":7,"endColumn":24},{"ruleId":"814","severity":1,"message":"1022","line":8,"column":10,"nodeType":"816","messageId":"817","endLine":8,"endColumn":24},{"ruleId":"814","severity":1,"message":"959","line":8,"column":26,"nodeType":"816","messageId":"817","endLine":8,"endColumn":38},{"ruleId":"814","severity":1,"message":"1023","line":9,"column":10,"nodeType":"816","messageId":"817","endLine":9,"endColumn":30},{"ruleId":"814","severity":1,"message":"1024","line":11,"column":10,"nodeType":"816","messageId":"817","endLine":11,"endColumn":18},{"ruleId":"814","severity":1,"message":"946","line":23,"column":11,"nodeType":"816","messageId":"817","endLine":23,"endColumn":19},{"ruleId":"814","severity":1,"message":"948","line":25,"column":13,"nodeType":"816","messageId":"817","endLine":25,"endColumn":14},{"ruleId":"822","severity":1,"message":"1025","line":43,"column":8,"nodeType":"824","endLine":43,"endColumn":52,"suggestions":"1026"},{"ruleId":"822","severity":1,"message":"1027","line":43,"column":9,"nodeType":"1028","endLine":43,"endColumn":51},{"ruleId":"814","severity":1,"message":"1029","line":50,"column":9,"nodeType":"816","messageId":"817","endLine":50,"endColumn":15},{"ruleId":"814","severity":1,"message":"882","line":1,"column":24,"nodeType":"816","messageId":"817","endLine":1,"endColumn":42},{"ruleId":"814","severity":1,"message":"1030","line":6,"column":3,"nodeType":"816","messageId":"817","endLine":6,"endColumn":20},{"ruleId":"822","severity":1,"message":"1031","line":141,"column":8,"nodeType":"824","endLine":141,"endColumn":25,"suggestions":"1032"},{"ruleId":"814","severity":1,"message":"1010","line":3,"column":38,"nodeType":"816","messageId":"817","endLine":3,"endColumn":47},{"ruleId":"814","severity":1,"message":"948","line":23,"column":13,"nodeType":"816","messageId":"817","endLine":23,"endColumn":14},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["1033"],"React Hook useEffect has missing dependencies: 'byePlayerNumber', 'insertByePlayers', and 'numberOfPlayers'. Either include them or remove the dependency array.",["1034"],"'EliminationGames' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'tournamentId'. Either include them or remove the dependency array.",["1035"],"'fetchedTournaments' is assigned a value but never used.","no-native-reassign",["1036"],"no-negated-in-lhs",["1037"],"'useState' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'ErrorMessage' is defined but never used.","'Formik' is defined but never used.","'authActions' is defined but never used.","'appName' is defined but never used.","'FormikValues' is defined but never used.","'IError' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["1038"],["1036"],["1037"],"'StateEliminationPlayer' is defined but never used.","'StateEliminationPlayers' is defined but never used.","'StateParticipants' is defined but never used.","'CheckCircleIcon' is defined but never used.","'ErrorIcon' is defined but never used.","'ErrorNames' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'fade' is defined but never used.","'drawerWidth' is assigned a value but never used.","'timer' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.",["1036"],["1037"],"'FacebookIcon' is defined but never used.","'useEffect' is defined but never used.","'loggedIn' is assigned a value but never used.",["1036"],["1037"],["1036"],["1037"],["1036"],["1037"],"'Paper' is defined but never used.","'EliminationForm' is defined but never used.","'clsx' is defined but never used.","'Whatshot' is defined but never used.","'StarsIcon' is defined but never used.","'CompareArrowsIcon' is defined but never used.",["1036"],["1037"],"'Action' is defined but never used.","'FetchedTournaments' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'useHistory' is defined but never used.","'setSubmitting' is assigned a value but never used.","'actionCreator' is defined but never used.","'PayloadedAction' is defined but never used.","'UserActionParams' is defined but never used.","'DialogContentText' is defined but never used.","React Hook useEffect has a missing dependency: 'userState.delete.error'. Either include it or remove the dependency array.",["1039"],"'React' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.",["1036"],["1037"],"'path' is assigned a value but never used.","React Hook useEffect contains a call to 'setPath'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [history.location.pathname] as a second argument to the useEffect Hook.",["1040"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'Icon' is assigned a value but never used.","'RoundRobinIcon' is defined but never used.","'loginCheck' is assigned a value but never used.","'UserGoogleLoginReqData' is defined but never used.","'DispatchWithoutAction' is defined but never used.","'EntityStateData' is defined but never used.",["1036"],["1037"],["1036"],["1037"],"'initialPlayer' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1041"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'HttpError' is defined but never used.","React Hook useEffect has missing dependencies: 'authState.status' and 'dispatch'. Either include them or remove the dependency array.",["1042"],"'SubheaderStateValues' is defined but never used.","'SubheaderState' is defined but never used.",["1043"],"'CREATE_PLAYER_REQUEST' is defined but never used.","'CREATE_PLAYER_SUCCESS' is defined but never used.","'CREATE_PLAYER_FAILURE' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.",["1044"],"React Hook useEffect has missing dependencies: 'formValues' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1045"],"'normalizedParticipants' is assigned a value but never used.",["1046"],"React Hook useEffect has a missing dependency: 'getPlayersDataWithStats'. Either include it or remove the dependency array.",["1047"],"React Hook useEffect has a missing dependency: 'delayedUpdateMaxScores'. Either include it or remove the dependency array.",["1048"],"'submitInitialGamesToStore' is assigned a value but never used.","'resetGames' is defined but never used.","'updateGames' is defined but never used.","'setGames' is assigned a value but never used.","'settingsState' is assigned a value but never used.","'scoreToggleButtonRef' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'columns' is assigned a value but never used.","'t' is assigned a value but never used.","'score1' is assigned a value but never used.","'score2' is assigned a value but never used.","'round' is assigned a value but never used.",["1036"],["1037"],["1036"],["1037"],["1036"],["1037"],"'IconButton' is defined but never used.","'splitGameKey' is defined but never used.","'AnyAction' is defined but never used.","'Reducer' is defined but never used.","'compose' is defined but never used.",["1036"],["1037"],"'useSnackbar' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userState.delete.status'. Either include them or remove the dependency array.",["1049"],"'UserDeleteReqData' is defined but never used.","'id' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1050"],"'Games' is defined but never used.","The ref value 'forwardedRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'forwardedRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has missing dependencies: 'forwardedRef', 'handleKeyDown', and 'tournament.sets'. Either include them or remove the dependency array.",["1051"],"React Hook useEffect has a missing dependency: 'numberOfGames'. Either include it or remove the dependency array.",["1052"],"React Hook useEffect has missing dependencies: 'lastVisibleScore', 'numberOfGoals', and 'visibleScores'. Either include them or remove the dependency array. If 'setInitiallyLastVisibleScore' needs the current value of 'visibleScores', you can also switch to useReducer instead of useState and read 'visibleScores' in the reducer.",["1053"],"'AppState' is defined but never used.","'ForgotPasswordReqData' is defined but never used.","'UserRegisterResData' is defined but never used.","'logout' is defined but never used.","'ActionStatus' is defined but never used.","React Hook useEffect has a missing dependency: 'getInitialTeams'. Either include it or remove the dependency array.",["1054"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'games' is assigned a value but never used.","'lmsPlayers' is assigned a value but never used.","'name' is assigned a value but never used.","'StateParticipant' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","'StateEliminationGame' is defined but never used.","'entityActions' is defined but never used.","'updateEliminationGames' is defined but never used.","'gamesState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'game.scores1' and 'game.scores2'. Either include them or remove the dependency array.",["1055"],"'FetchedGames' is defined but never used.","'getNormalizedGames' is defined but never used.","'numberOfPlayers' is assigned a value but never used.","'WithSnackbarProps' is defined but never used.","'Component' is defined but never used.","'FC' is defined but never used.","'history' is assigned a value but never used.","'Draggable' is defined but never used.","'UserLoginCheckReqData' is defined but never used.","'UserLoginReqData' is defined but never used.","'UserPasswordResetReqData' is defined but never used.","'UserRegisterReqData' is defined but never used.","'UserUpdateReqData' is defined but never used.","'asyncWrapper' is defined but never used.","'PlayCircleFilledIcon' is defined but never used.","'ResponseData' is defined but never used.","'DatalessState' is defined but never used.","'StateScore' is defined but never used.","'EnterScoreDialog' is defined but never used.","'getNextGameKey' is defined but never used.","'getMultipleSetScores' is defined but never used.","'Nullable' is defined but never used.","React Hook useEffect has missing dependencies: 'gamesState' and 'props.gameKey'. Either include them or remove the dependency array. If 'setGame' needs the current value of 'props.gameKey', you can also switch to useReducer instead of useState and read 'props.gameKey' in the reducer.",["1056"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'winner' is assigned a value but never used.","'GamesReducerState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchedTournamentsData', and 'tournamentId'. Either include them or remove the dependency array.",["1057"],{"desc":"1058","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},"no-global-assign","no-unsafe-negation",{"desc":"1064","fix":"1065"},{"desc":"1066","fix":"1067"},{"desc":"1068","fix":"1069"},{"desc":"1070","fix":"1071"},{"desc":"1072","fix":"1073"},{"desc":"1074","fix":"1075"},{"desc":"1076","fix":"1077"},{"desc":"1078","fix":"1079"},{"desc":"1062","fix":"1080"},{"desc":"1081","fix":"1082"},{"desc":"1083","fix":"1084"},{"desc":"1085","fix":"1086"},{"desc":"1087","fix":"1088"},{"desc":"1089","fix":"1090"},{"desc":"1091","fix":"1092"},{"desc":"1093","fix":"1094"},{"desc":"1095","fix":"1096"},{"desc":"1097","fix":"1098"},{"desc":"1099","fix":"1100"},{"desc":"1101","fix":"1102"},"Update the dependencies array to be: [entityState.fetchedTournaments.status, entityState.fetchedTournaments.createdTournamentId, history]",{"range":"1103","text":"1104"},"Update the dependencies array to be: [byePlayerNumber, entityState.eliminationPlayers, insertByePlayers, numberOfPlayers]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [dispatch, tournamentId]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [dispatch, registerState.verifyEmail.status, token]",{"range":"1109","text":"1110"},"Update the dependencies array to be: [userState.delete.error, userState.delete.status]",{"range":"1111","text":"1112"},"Add dependencies array: [history.location.pathname]",{"range":"1113","text":"1114"},"Update the dependencies array to be: [dispatch]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [authState.status, dispatch]",{"range":"1117","text":"1118"},"Update the dependencies array to be: [dispatch, loggedIn]",{"range":"1119","text":"1120"},"Update the dependencies array to be: [dispatch, token, userState.delete.status]",{"range":"1121","text":"1122"},"Update the dependencies array to be: [formValues, props, registerState.status]",{"range":"1123","text":"1124"},{"range":"1125","text":"1108"},"Update the dependencies array to be: [storeGames, entityState.tournament, getPlayersDataWithStats]",{"range":"1126","text":"1127"},"Update the dependencies array to be: [delayedUpdateMaxScores, width]",{"range":"1128","text":"1129"},"Update the dependencies array to be: [history, userState.delete.status, userState.update.status]",{"range":"1130","text":"1131"},"Update the dependencies array to be: [authState.forgotPassword.status, props]",{"range":"1132","text":"1133"},"Update the dependencies array to be: [forwardedRef, handleKeyDown, tournament.sets]",{"range":"1134","text":"1135"},"Update the dependencies array to be: [game, numberOfGames]",{"range":"1136","text":"1137"},"Update the dependencies array to be: [lastVisibleScore, numberOfGoals, selectedNumber, visibleScores]",{"range":"1138","text":"1139"},"Update the dependencies array to be: [getInitialTeams]",{"range":"1140","text":"1141"},"Update the dependencies array to be: [game.scores1, game.scores2, props.game.scores1, props.game.scores2]",{"range":"1142","text":"1143"},"Update the dependencies array to be: [gamesState, props.gameKey]",{"range":"1144","text":"1145"},"Update the dependencies array to be: [dispatch, fetchedTournamentsData, tournamentGames, tournamentId]",{"range":"1146","text":"1147"},[2080,2171],"[entityState.fetchedTournaments.status, entityState.fetchedTournaments.createdTournamentId, history]",[2638,2670],"[byePlayerNumber, entityState.eliminationPlayers, insertByePlayers, numberOfPlayers]",[1677,1679],"[dispatch, tournamentId]",[1909,1943],"[dispatch, registerState.verifyEmail.status, token]",[1122,1147],"[userState.delete.error, userState.delete.status]",[2842,2842],", [history.location.pathname]",[3305,3307],"[dispatch]",[2688,2690],"[authState.status, dispatch]",[1758,1768],"[dispatch, loggedIn]",[1340,1365],"[dispatch, token, userState.delete.status]",[2294,2316],"[formValues, props, registerState.status]",[2688,2690],[2820,2856],"[storeGames, entityState.tournament, getPlayersDataWithStats]",[2940,2947],"[delayedUpdateMaxScores, width]",[2068,2093],"[history, userState.delete.status, userState.update.status]",[1477,1510],"[authState.forgotPassword.status, props]",[1999,2001],"[forwardedRef, handleKeyDown, tournament.sets]",[3315,3321],"[game, numberOfGames]",[3255,3271],"[lastVisibleScore, numberOfGoals, selectedNumber, visibleScores]",[2740,2742],"[getInitialTeams]",[2665,2707],"[game.scores1, game.scores2, props.game.scores1, props.game.scores2]",[2066,2110],"[gamesState, props.gameKey]",[6693,6710],"[dispatch, fetchedTournamentsData, tournamentGames, tournamentId]"]