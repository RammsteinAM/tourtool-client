[{"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\EliminationBracket.tsx":"1","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\Elimination.tsx":"2","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\actions.ts":"3","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\tournamentStyles.ts":"4","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\index.tsx":"5","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\theme.ts":"6","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\EmailVerificationResult.tsx":"7","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\types.ts":"8","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\passwordResetStyles.ts":"9","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\PlayerFormTextField.tsx":"10","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\homeStyles.ts":"11","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\RegisterSuccess.tsx":"12","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Main.tsx":"13","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleButton.tsx":"14","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderHome.tsx":"15","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\importParticipantsDialogStyles.ts":"16","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\arrayUtils.ts":"17","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\reportWebVitals.ts":"18","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\reducer.ts":"19","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentTypeSelect.tsx":"20","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\types.ts":"21","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\index.tsx":"22","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordResetSuccess.tsx":"23","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\headerStyles.ts":"24","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\actions.ts":"25","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\DeleteAccountDialog.tsx":"26","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\languageSelectStyles.ts":"27","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Slider\\index.tsx":"28","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderGeneric.tsx":"29","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\index.tsx":"30","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\layoutStyles.ts":"31","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\reducer.ts":"32","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\authUtils.ts":"33","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\actions.ts":"34","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\helpers.ts":"35","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\NotVerified.tsx":"36","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\actions.ts":"37","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Settings\\Settings.tsx":"38","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\ImportParticipantsDialog.tsx":"39","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\localization.ts":"40","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerForm.tsx":"41","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\App.tsx":"42","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\FormSubheader.tsx":"43","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\index.tsx":"44","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\mainStyles.ts":"45","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentForm.tsx":"46","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\index.tsx":"47","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\reducer.ts":"48","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\i18n.ts":"49","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\DeleteAccount\\DeleteAccountResult.tsx":"50","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\types.ts":"51","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\error.ts":"52","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\Register.tsx":"53","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\registerStyles.ts":"54","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\LastManStanding.tsx":"55","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\lastManStandingStyles.ts":"56","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListRow.tsx":"57","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\gameListRowStyles.ts":"58","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\PasswordResetForm.tsx":"59","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\loginDialogStyles.ts":"60","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\facebookButtonStyles.ts":"61","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\playerFormTextFieldStyles.ts":"62","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\FacebookButton.tsx":"63","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleLogo.tsx":"64","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListEnterScoreButton.tsx":"65","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListRound.tsx":"66","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\store.ts":"67","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\asyncWrapper.ts":"68","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\error.ts":"69","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\CreateTournamentDialog.tsx":"70","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\createTournamentDialogStyles.ts":"71","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\Profile.tsx":"72","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\user.ts":"73","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordReset.tsx":"74","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStatsSettingsListItem.tsx":"75","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\tournamentStatsSettingsListStyles.ts":"76","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStatsSettingsList.tsx":"77","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreContent.tsx":"78","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreSelector.tsx":"79","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreScoresConainer.tsx":"80","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreDialog.tsx":"81","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\reducer.ts":"82","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\reducer.ts":"83","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PrivateRoute.tsx":"84","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerTypeSelect.tsx":"85","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\types.ts":"86","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\actions.ts":"87","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\config.ts":"88","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\profileStyles.ts":"89","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\loginStyles.ts":"90","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreItem.tsx":"91","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\scoreUtils.ts":"92","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PublicRoute.tsx":"93","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\types.ts":"94","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\DeleteAccount\\deleteAccountStyles.ts":"95","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\DYPConfigForm.tsx":"96","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\LastManStandingPlayerStatsRow.tsx":"97","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\LastManStandingPlayerStatsList.tsx":"98","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\lastManStandingStyles.ts":"99","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationSidebarItem.tsx":"100","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationCard.tsx":"101","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationBracketCards.tsx":"102","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationCards.tsx":"103","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\main.ts":"104","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\IndependentSnackbar\\index.tsx":"105"},{"size":8181,"mtime":1615678366952,"results":"106","hashOfConfig":"107"},{"size":2204,"mtime":1615678348966,"results":"108","hashOfConfig":"107"},{"size":3088,"mtime":1614640288601,"results":"109","hashOfConfig":"107"},{"size":5827,"mtime":1615644096713,"results":"110","hashOfConfig":"107"},{"size":842,"mtime":1613473639642,"results":"111","hashOfConfig":"107"},{"size":572,"mtime":1613378631889,"results":"112","hashOfConfig":"107"},{"size":4670,"mtime":1615545648737,"results":"113","hashOfConfig":"107"},{"size":3281,"mtime":1613938707164,"results":"114","hashOfConfig":"107"},{"size":1799,"mtime":1611836357722,"results":"115","hashOfConfig":"107"},{"size":3805,"mtime":1614588455251,"results":"116","hashOfConfig":"107"},{"size":1338,"mtime":1612136932760,"results":"117","hashOfConfig":"107"},{"size":3338,"mtime":1613550531977,"results":"118","hashOfConfig":"107"},{"size":1103,"mtime":1614785018641,"results":"119","hashOfConfig":"107"},{"size":711,"mtime":1610694471474,"results":"120","hashOfConfig":"107"},{"size":1698,"mtime":1615544764486,"results":"121","hashOfConfig":"107"},{"size":1072,"mtime":1613397758184,"results":"122","hashOfConfig":"107"},{"size":1921,"mtime":1615246668770,"results":"123","hashOfConfig":"107"},{"size":425,"mtime":1609635969166,"results":"124","hashOfConfig":"107"},{"size":731,"mtime":1615470124764,"results":"125","hashOfConfig":"107"},{"size":4143,"mtime":1613409711305,"results":"126","hashOfConfig":"107"},{"size":909,"mtime":1615634223392,"results":"127","hashOfConfig":"107"},{"size":7589,"mtime":1615544787152,"results":"128","hashOfConfig":"107"},{"size":1621,"mtime":1615545648737,"results":"129","hashOfConfig":"107"},{"size":3230,"mtime":1615290114616,"results":"130","hashOfConfig":"107"},{"size":297,"mtime":1613975807360,"results":"131","hashOfConfig":"107"},{"size":2254,"mtime":1615544805438,"results":"132","hashOfConfig":"107"},{"size":322,"mtime":1610633123636,"results":"133","hashOfConfig":"107"},{"size":707,"mtime":1614253851768,"results":"134","hashOfConfig":"107"},{"size":8625,"mtime":1615445384896,"results":"135","hashOfConfig":"107"},{"size":5780,"mtime":1615667105730,"results":"136","hashOfConfig":"107"},{"size":2716,"mtime":1614638682417,"results":"137","hashOfConfig":"107"},{"size":2946,"mtime":1613939423826,"results":"138","hashOfConfig":"107"},{"size":325,"mtime":1613561150261,"results":"139","hashOfConfig":"107"},{"size":7538,"mtime":1613940635594,"results":"140","hashOfConfig":"107"},{"size":1226,"mtime":1612764630390,"results":"141","hashOfConfig":"107"},{"size":3176,"mtime":1615545648737,"results":"142","hashOfConfig":"107"},{"size":3872,"mtime":1613542283059,"results":"143","hashOfConfig":"107"},{"size":231,"mtime":1611642817858,"results":"144","hashOfConfig":"107"},{"size":5214,"mtime":1614588455190,"results":"145","hashOfConfig":"107"},{"size":41943,"mtime":1615462829478,"results":"146","hashOfConfig":"107"},{"size":13375,"mtime":1615631132315,"results":"147","hashOfConfig":"107"},{"size":3366,"mtime":1614787976662,"results":"148","hashOfConfig":"107"},{"size":1766,"mtime":1614339128442,"results":"149","hashOfConfig":"107"},{"size":1729,"mtime":1614358945364,"results":"150","hashOfConfig":"107"},{"size":1652,"mtime":1614358973510,"results":"151","hashOfConfig":"107"},{"size":12136,"mtime":1615552104028,"results":"152","hashOfConfig":"107"},{"size":1261,"mtime":1615545300478,"results":"153","hashOfConfig":"107"},{"size":2699,"mtime":1615551918552,"results":"154","hashOfConfig":"107"},{"size":1169,"mtime":1615396903725,"results":"155","hashOfConfig":"107"},{"size":4625,"mtime":1613741573987,"results":"156","hashOfConfig":"107"},{"size":3203,"mtime":1614640288601,"results":"157","hashOfConfig":"107"},{"size":776,"mtime":1612162500036,"results":"158","hashOfConfig":"107"},{"size":9538,"mtime":1615545648737,"results":"159","hashOfConfig":"107"},{"size":1109,"mtime":1611836196552,"results":"160","hashOfConfig":"107"},{"size":11802,"mtime":1615643323521,"results":"161","hashOfConfig":"107"},{"size":4396,"mtime":1615552575158,"results":"162","hashOfConfig":"107"},{"size":5506,"mtime":1615569708576,"results":"163","hashOfConfig":"107"},{"size":4454,"mtime":1615358177901,"results":"164","hashOfConfig":"107"},{"size":9860,"mtime":1612690736459,"results":"165","hashOfConfig":"107"},{"size":1000,"mtime":1612164946847,"results":"166","hashOfConfig":"107"},{"size":549,"mtime":1611146916965,"results":"167","hashOfConfig":"107"},{"size":1795,"mtime":1613399375323,"results":"168","hashOfConfig":"107"},{"size":689,"mtime":1610694471474,"results":"169","hashOfConfig":"107"},{"size":1386,"mtime":1610694471474,"results":"170","hashOfConfig":"107"},{"size":1192,"mtime":1615545269983,"results":"171","hashOfConfig":"107"},{"size":1148,"mtime":1615545269983,"results":"172","hashOfConfig":"107"},{"size":889,"mtime":1613975694055,"results":"173","hashOfConfig":"107"},{"size":699,"mtime":1613130243066,"results":"174","hashOfConfig":"107"},{"size":243,"mtime":1611751297698,"results":"175","hashOfConfig":"107"},{"size":3189,"mtime":1613397734405,"results":"176","hashOfConfig":"107"},{"size":673,"mtime":1613397734731,"results":"177","hashOfConfig":"107"},{"size":9003,"mtime":1613939329193,"results":"178","hashOfConfig":"107"},{"size":4652,"mtime":1613937812249,"results":"179","hashOfConfig":"107"},{"size":4554,"mtime":1615545353127,"results":"180","hashOfConfig":"107"},{"size":3372,"mtime":1615634169883,"results":"181","hashOfConfig":"107"},{"size":1186,"mtime":1615478626733,"results":"182","hashOfConfig":"107"},{"size":2445,"mtime":1615634233137,"results":"183","hashOfConfig":"107"},{"size":25312,"mtime":1615624399812,"results":"184","hashOfConfig":"107"},{"size":9341,"mtime":1615545269992,"results":"185","hashOfConfig":"107"},{"size":1971,"mtime":1615545270101,"results":"186","hashOfConfig":"107"},{"size":1761,"mtime":1615544889403,"results":"187","hashOfConfig":"107"},{"size":3143,"mtime":1611565848868,"results":"188","hashOfConfig":"107"},{"size":3542,"mtime":1613560426848,"results":"189","hashOfConfig":"107"},{"size":1016,"mtime":1613939740075,"results":"190","hashOfConfig":"107"},{"size":4368,"mtime":1615545648737,"results":"191","hashOfConfig":"107"},{"size":2990,"mtime":1611748471617,"results":"192","hashOfConfig":"107"},{"size":4426,"mtime":1614254263432,"results":"193","hashOfConfig":"107"},{"size":51,"mtime":1610346617372,"results":"194","hashOfConfig":"107"},{"size":1563,"mtime":1613736886053,"results":"195","hashOfConfig":"107"},{"size":851,"mtime":1611836196552,"results":"196","hashOfConfig":"107"},{"size":768,"mtime":1615530699955,"results":"197","hashOfConfig":"107"},{"size":714,"mtime":1615552155718,"results":"198","hashOfConfig":"107"},{"size":722,"mtime":1612260090406,"results":"199","hashOfConfig":"107"},{"size":3249,"mtime":1613551591358,"results":"200","hashOfConfig":"107"},{"size":1109,"mtime":1613723185895,"results":"201","hashOfConfig":"107"},{"size":8007,"mtime":1615631226360,"results":"202","hashOfConfig":"107"},{"size":1790,"mtime":1615633938509,"results":"203","hashOfConfig":"107"},{"size":6163,"mtime":1615633105430,"results":"204","hashOfConfig":"107"},{"size":4594,"mtime":1615633816138,"results":"205","hashOfConfig":"107"},{"size":2260,"mtime":1615643550307,"results":"206","hashOfConfig":"107"},{"size":6663,"mtime":1615644508044,"results":"207","hashOfConfig":"107"},{"size":2275,"mtime":1615658769679,"results":"208","hashOfConfig":"107"},{"size":3425,"mtime":1615659366040,"results":"209","hashOfConfig":"107"},{"size":370,"mtime":1611750698023,"results":"210","hashOfConfig":"107"},{"size":1104,"mtime":1613735950828,"results":"211","hashOfConfig":"107"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},"x7fxt9",{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"215"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"215"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"215"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"215"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"215"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"235"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"222"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"222"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"215"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"296"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"296"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"288"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"215"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"215"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"296"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"215"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"215"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"215"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\EliminationBracket.tsx",["452","453","454","455"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { EliminationGames, StateEliminationPlayers } from '../../types/entities';\r\nimport EliminationSidebar from '../../components/Tournament/Elimination/EliminationSidebar';\r\nimport { resetEliminationGames, resetGames, updateEliminationGames } from '../../redux/tournamentEntities/actions';\r\nimport CreateTournamentDialog from '../../components/Tournament/CreateTournamentDialog';\r\nimport { useHistory } from 'react-router-dom';\r\nimport EliminationColumn from '../../components/Tournament/Elimination/EliminationColumn';\r\nimport tournamentStyles from './tournamentStyles';\r\nimport EliminationBracketCards from '../../components/Tournament/Elimination/EliminationBracketCards';\r\n\r\nconst EliminationBracket = () => {\r\n    const [players, setPlayers] = useState<StateEliminationPlayers>([]);\r\n    const [dialogOpen, setDialogOpen] = useState<boolean>(false);\r\n    const entityState = useSelector((state: RootState) => state.entities);\r\n    const dispatch = useDispatch();\r\n    const numberOfPlayers = entityState.eliminationPlayers.length;\r\n    const firstRoundGameNumber: number = 2 ** Math.ceil((Math.log(numberOfPlayers) / Math.log(2)) - 1);\r\n    const byePlayerNumber: number = 2 ** Math.ceil(Math.log(numberOfPlayers) / Math.log(2)) - numberOfPlayers;\r\n    const numberOfColumns = Math.ceil((Math.log(numberOfPlayers) / Math.log(2)));\r\n    const classes = tournamentStyles();\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        const newPlayers: StateEliminationPlayers = [];\r\n        const tempPlayers: StateEliminationPlayers = [...entityState.eliminationPlayers];\r\n        insertByePlayers(newPlayers);\r\n        for (let i = 0; i < numberOfPlayers + byePlayerNumber; i++) {\r\n            if (newPlayers[i]?.bye) continue;\r\n            newPlayers[i] = tempPlayers[0];\r\n            tempPlayers.shift();\r\n        }\r\n        setPlayers([...newPlayers])\r\n    }, [entityState.eliminationPlayers])\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const handleStartTournament = (e: React.FormEvent, name: string) => {\r\n        e.preventDefault();\r\n        submitGamesToStore();\r\n        history.push('/elimination');\r\n    };\r\n\r\n    const getByeIndexes = (n: number) => {\r\n        if (Math.log(32) / Math.log(2) % 1 !== 0) return null;\r\n        return [\r\n            2, n,\r\n            n / 2, n / 2 + 2,\r\n            n / 4, 3 * n / 4, n / 4 + 2, 3 * n / 4 + 2,\r\n            n / 8, 5 * n / 8, 3 * n / 8, 7 * n / 8, n / 8 + 2, 5 * n / 8 + 2, 3 * n / 8 + 2, 7 * n / 8 + 2,\r\n            n / 16, 9 * n / 16, 5 * n / 16, 13 * n / 16, 3 * n / 16, 11 * n / 16, 7 * n / 16, 15 * n / 16, n / 16 + 2, 9 * n / 16 + 2, 5 * n / 16 + 2, 13 * n / 16 + 2, 3 * n / 16 + 2, 11 * n / 16 + 2, 7 * n / 16 + 2,\r\n            n / 32, 17 * n / 32, 9 * n / 32, 25 * n / 32, 5 * n / 32\r\n        ]\r\n    }\r\n\r\n    const submitGamesToStore = () => {\r\n        const storeGames: EliminationGames = {};\r\n        for (let col = 1; col <= numberOfColumns; col++) {\r\n            const prevCol = col - 1;\r\n            for (let i = 0, j = 1; i < players.length / (2 ** prevCol); i = i + 2, j++) {\r\n                const gameKey: string = col === numberOfColumns ? 'final' : `${col}-${j}`;\r\n                storeGames[gameKey] = { player1: '', player2: '', index: gameKey }\r\n                if (col === 1) {\r\n                    storeGames[gameKey].player1 = players[i].name;\r\n                    storeGames[gameKey].player2 = players[i + 1].name;\r\n                    if (players[i].bye || players[i + 1].bye) {\r\n                        storeGames[gameKey].hasByePlayer = true;\r\n                    }\r\n                    continue;\r\n                }\r\n\r\n                // parent X player Y\r\n                const { p1p1, p1p2, parent1HasByePlayer } = { p1p1: storeGames[`${prevCol}-${j * 2 - 1}`].player1, p1p2: storeGames[`${prevCol}-${j * 2 - 1}`].player2, parent1HasByePlayer: storeGames[`${prevCol}-${j * 2 - 1}`].hasByePlayer };\r\n                const { p2p1, p2p2, parent2HasByePlayer } = { p2p1: storeGames[`${prevCol}-${j * 2}`].player1, p2p2: storeGames[`${prevCol}-${j * 2}`].player2, parent2HasByePlayer: storeGames[`${prevCol}-${j * 2}`].hasByePlayer };\r\n                const parent1HasNoPlayer = !p1p1 && !p1p2;\r\n                const parent1HasOnePlayer = (p1p1 && !p1p2) || (p1p2 && !p1p1);\r\n                const parent2HasNoPlayer = !p2p1 && !p2p2;\r\n                const parent2HasOnePlayer = (p2p1 && !p2p2) || (p2p2 && !p2p1);\r\n                if ((parent2HasNoPlayer || parent1HasNoPlayer) && ((parent1HasByePlayer && parent2HasOnePlayer) || (parent2HasByePlayer && parent1HasOnePlayer))) {\r\n                    storeGames[gameKey].hasByePlayer = true;\r\n                }\r\n                if (!parent1HasByePlayer && !parent2HasByePlayer) {\r\n                    continue;\r\n                }\r\n                if (parent1HasOnePlayer) {\r\n                    storeGames[gameKey].player1 = p1p1 || p1p2;\r\n                }\r\n                if (parent2HasOnePlayer) {\r\n                    storeGames[gameKey].player2 = p2p1 || p2p2;\r\n                }\r\n            }\r\n\r\n        }\r\n        // players.forEach(player => {\r\n        //     storeGame\r\n        // })\r\n        dispatch(resetEliminationGames());\r\n        dispatch(updateEliminationGames(storeGames));\r\n    }\r\n\r\n    const insertByePlayers = (players: StateEliminationPlayers) => {\r\n        let byePlayers = byePlayerNumber;\r\n        const byeI = getByeIndexes(numberOfPlayers + byePlayerNumber);\r\n\r\n        for (let i = 0; i < byePlayerNumber; i++) {\r\n            if (byePlayers <= 0) break;\r\n            if (byeI![i]) {\r\n                players[byeI![i] - 1] = { name: \"\", category: null, bye: true }\r\n            }\r\n            else {\r\n                const q = players.findIndex((x, i) => i % 2 !== 0 && !x?.bye && !players[i + 1]?.bye)\r\n                players[q] = { name: \"\", category: null, bye: true }\r\n            }\r\n            byePlayers--;\r\n        }\r\n    }\r\n\r\n    const handleSidebarChange = (players: StateEliminationPlayers) => {\r\n        setPlayers([...players])\r\n    }\r\n\r\n    const handleSubmit = (e: React.FormEvent): void => {\r\n        e.preventDefault()\r\n        handleDialogOpen();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form className={classes.form} onSubmit={handleSubmit} id='elimination-form'>\r\n                <EliminationSidebar\r\n                    players={players}\r\n                    onChange={handleSidebarChange}\r\n                />\r\n                <div className={classes.eliminationBracketCardsContainer}>\r\n                    {[...Array(numberOfColumns).keys()].map(key => {\r\n                        const colNumber = key + 1;\r\n                        const roundNumberDenominator: number = 2 ** (numberOfColumns - colNumber);\r\n                        const numberOfGames = firstRoundGameNumber / (2 ** (colNumber - 1));\r\n                        return (\r\n                            <EliminationColumn\r\n                                numberOfColumns={numberOfColumns}\r\n                                firstRoundGameNumber={firstRoundGameNumber}\r\n                                colNumber={colNumber}\r\n                            >\r\n                                <EliminationBracketCards\r\n                                    players={players}\r\n                                    columnNumber={colNumber}\r\n                                    numberOfGames={numberOfGames}\r\n                                />\r\n                            </EliminationColumn>\r\n                        )\r\n                    }\r\n                    )}\r\n                </div>\r\n            </form>\r\n            <CreateTournamentDialog\r\n                open={dialogOpen}\r\n                onClose={handleDialogClose}\r\n                onSubmit={handleStartTournament}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EliminationBracket\r\n",["456","457"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\Elimination.tsx",["458","459"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { EliminationGames } from '../../types/entities';\r\nimport { splitGameKey } from '../../utils/stringUtils';\r\nimport EliminationColumn from '../../components/Tournament/Elimination/EliminationColumn';\r\nimport EliminationCards from '../../components/Tournament/Elimination/EliminationCards';\r\nimport tournamentStyles from './tournamentStyles';\r\n\r\nconst Elimination = () => {\r\n    const [games, setGames] = useState<EliminationGames>({});\r\n    const entityState = useSelector((state: RootState) => state.entities);\r\n    const settingsState = useSelector((state: RootState) => state.settings);\r\n    const firstRoundGameNumber = Object.keys(games).length === 1 ? 1 : Object.keys(games).filter(gameKey => splitGameKey(gameKey).round === 1).length;\r\n    const numberOfColumns = Math.log(Object.keys(games).length + 1) / Math.log(2);\r\n    const classes = tournamentStyles();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n\r\n        setGames({ ...entityState.eliminationGames })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className={classes.eliminationCardsContainer}\r\n            style={{ transform: `scale(${settingsState.eliminationScale || '1'})`, transformOrigin: 'top left', }}\r\n        >\r\n            {[...Array(numberOfColumns).keys()].map(key => {\r\n                const colNumber = key + 1;\r\n                const numberOfGames = firstRoundGameNumber / (2 ** (colNumber - 1));\r\n                return (\r\n                    <EliminationColumn\r\n                        numberOfColumns={numberOfColumns}\r\n                        firstRoundGameNumber={firstRoundGameNumber}\r\n                        colNumber={colNumber}\r\n                    >\r\n                        <EliminationCards\r\n                            columnNumber={colNumber}\r\n                            numberOfGames={numberOfGames}\r\n                        />\r\n                    </EliminationColumn>\r\n                )\r\n            }\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Elimination\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\actions.ts",["460","461","462","463"],"import { actionCreator, payloadedActionCreator, PayloadedAction } from \"../helpers\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport { userServices } from \"../../services/user\";\r\nimport { ForgotPasswordReqData } from \"../auth/types\";\r\nimport {\r\n    UPDATE_TOURNAMENT,\r\n    UPDATE_PARTICIPANTS,\r\n    UPDATE_ELIMINATION_PLAYERS,\r\n    UPDATE_LMS_PLAYERS,\r\n    UPDATE_GAMES,\r\n    UPDATE_ELIMINATION_GAMES,\r\n    RESET_GAMES,\r\n    RESET_ELIMINATION_GAMES,\r\n    UPDATE_PLAYERS_REQUEST,\r\n    UPDATE_PLAYERS_SUCCESS,\r\n    UPDATE_PLAYERS_FAILURE,\r\n    UpdateTournamentActionParams,\r\n    UpdateParticipantsActionParams,\r\n    UpdateEliminationPlayersActionParams,\r\n    UpdateLMSPlayersActionParams,\r\n    ResetGamesActionParams,\r\n    ResetEliminationGamesActionParams,\r\n    UpdateGamesActionParams,\r\n    UpdateEliminationGamesActionParams,\r\n    UpdatePlayersRequestActionParams,\r\n    UpdatePlayersSuccessActionParams,\r\n    UpdatePlayersFailureActionParams,\r\n    UserActionParams,\r\n} from \"./types\"\r\nimport { UserRegisterResData, UserStateData, UserUpdateReqData } from \"../../types/user\";\r\nimport { loginSuccess } from \"../auth/actions\";\r\nimport { ResponseData } from \"../../types/main\";\r\n\r\nexport const updateTournament = payloadedActionCreator<UpdateTournamentActionParams>(UPDATE_TOURNAMENT);\r\n\r\nexport const updateEliminationPlayers = payloadedActionCreator<UpdateEliminationPlayersActionParams>(UPDATE_ELIMINATION_PLAYERS);\r\n\r\nexport const updateLMSPlayers = payloadedActionCreator<UpdateLMSPlayersActionParams>(UPDATE_LMS_PLAYERS);\r\n\r\nexport const updateParticipants = payloadedActionCreator<UpdateParticipantsActionParams>(UPDATE_PARTICIPANTS);\r\n\r\nexport const updateGames = payloadedActionCreator<UpdateGamesActionParams>(UPDATE_GAMES);\r\n\r\nexport const updateEliminationGames = payloadedActionCreator<UpdateEliminationGamesActionParams>(UPDATE_ELIMINATION_GAMES);\r\n\r\nexport const resetGames = actionCreator<ResetGamesActionParams>(RESET_GAMES);\r\n\r\nexport const resetEliminationGames = actionCreator<ResetEliminationGamesActionParams>(RESET_ELIMINATION_GAMES);\r\n\r\nexport const updatePlayersRequest = actionCreator<UpdatePlayersRequestActionParams>(UPDATE_PLAYERS_REQUEST);\r\n\r\nexport const updatePlayersSuccess = payloadedActionCreator<UpdatePlayersSuccessActionParams>(UPDATE_PLAYERS_SUCCESS);\r\n\r\nexport const updatePlayersFailure = payloadedActionCreator<UpdatePlayersFailureActionParams>(UPDATE_PLAYERS_FAILURE);\r\n\r\nconst update = (data: UserUpdateReqData) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(updatePlayersRequest());\r\n\r\n        userServices.update(data)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserStateData>>) => {\r\n                    dispatch(loginSuccess(res.data));\r\n                    dispatch(updatePlayersSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(updatePlayersFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nexport const userActions = {\r\n    update\r\n};",["464","465"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\tournamentStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\theme.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\EmailVerificationResult.tsx",["466","467","468","469","470","471","472","473","474","475"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\types.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\passwordResetStyles.ts",[],["476","477"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\PlayerFormTextField.tsx",["478","479","480","481"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\homeStyles.ts",["482","483"],"import { makeStyles, fade } from '@material-ui/core/styles';\r\nconst drawerWidth = 220;\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(3, 2, 2),\r\n        //height: '35px',\r\n        minWidth: '100px',\r\n        borderRadius: '2px',\r\n        '&:hover': {\r\n        },\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n        },\r\n    },\r\n    textField: {\r\n        '& .MuiFormLabel-asterisk': {\r\n            display: 'none',\r\n        },\r\n        '& .MuiInput-underline:hover:before': {\r\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\r\n        }\r\n\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        height: '500px',\r\n    },\r\n    leftPart: {\r\n        backgroundColor: '#333333',\r\n        width: '40%',\r\n        color: '#ffffff',\r\n        padding: '90px 38px'\r\n    },\r\n    mainPart: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        width: '60%',\r\n    },\r\n    mainContent: {\r\n        height: '100%',\r\n        padding: '0px 72px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n\r\n    },\r\n}));\r\n\r\nexport default styles;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\RegisterSuccess.tsx",["484","485","486","487","488"],"import React, { useEffect, useState, FC } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions';\r\nimport registerStyles from './registerStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport { registerActions } from '../../redux/register/actions';\r\n\r\ninterface FormikValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface IError {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\ninterface Props {\r\n}\r\n\r\nconst RegisterSuccess = (props: Props) => {\r\n    const classes = registerStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [timeLeft, setTimeLeft] = useState<number>(60);\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const registerState = useSelector((state: RootState) => state.register);\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.status === ActionStatus.Request);\r\n    }, [authState.status]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (timeLeft > 0) setTimeLeft(timeLeft - 1);\r\n        }, 1000);\r\n    });\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.login(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleResendEmail = (e: React.MouseEvent): void => {\r\n        //e.preventDefault();\r\n        registerState.data && dispatch(registerActions.resendVerificationEmail(registerState.data));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Typography>\r\n                {t(\"Registration success\")}\r\n            </Typography>\r\n            <div>\r\n                {t(\"registration-success-body\")}\r\n                {timeLeft > 0 ?\r\n                    t(\"registration-success-body-end1\", { sec: timeLeft }) :\r\n                    t(\"registration-success-body-end2\")\r\n                }\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={submitting || timeLeft > 0}\r\n                    className={classes.button}\r\n                    onClick={handleResendEmail}\r\n                >\r\n                    {t('Resend Verification Email')}\r\n                </Button>\r\n            </div>\r\n            {registerState.resendVerificationEmail.status === ActionStatus.Request &&\r\n                <div className={mainClasses.progress}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n            {registerState.resendVerificationEmail.status === ActionStatus.Failure &&\r\n                <div className={mainClasses.errorMessage}>{registerState.resendVerificationEmail.error}</div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegisterSuccess;",["489","490"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Main.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleButton.tsx",["491"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport FacebookIcon from '@material-ui/icons/Facebook'; \r\nimport googleButtonStyles from './googleButtonStyles';\r\nimport GoogleLogo from './GoogleLogo';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n  onClick: Function\r\n}\r\n\r\nconst GoogleButton = (props: Props) => {\r\n  const classes = googleButtonStyles();\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"default\"\r\n      className={classes.button}\r\n      startIcon={<GoogleLogo />}\r\n      onClick={() => props.onClick()}\r\n    >\r\n      {t('Google Login')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default GoogleButton","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderHome.tsx",["492","493"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\importParticipantsDialogStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\arrayUtils.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\reportWebVitals.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\reducer.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentTypeSelect.tsx",["494","495","496","497","498","499"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EliminationForm from './TournamentForm';\r\nimport clsx from 'clsx';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport Whatshot from '@material-ui/icons/Whatshot';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ReactComponent as RoundRobinIcon } from '../../resources/icons/roundRobin.svg';\r\nimport { ReactComponent as LastManStandingIcon } from '../../resources/icons/lms.svg';\r\nimport { ReactComponent as Elimination } from '../../resources/icons/elimination.svg';\r\n\r\nimport tournamentStyles from './tournamentStyles';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst TournamentTypeSelect = (props: Props) => {\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    const handleCardClick = (type: string) => {\r\n        history.push(`/tournament-form/${type}`)\r\n    }\r\n\r\n    const classes = tournamentStyles();\r\n    return (\r\n        <div className={classes.cardListContainer}>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#00b8d4' }}\r\n                    onClick={() => handleCardClick('round-robin')}\r\n                >\r\n                    <RoundRobinIcon className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Round Robin')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton aria-label=\"info\">\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handleCardClick('round-robin')} >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#9c27b0' }}\r\n                    onClick={() => handleCardClick('lms')}\r\n                >\r\n                    <LastManStandingIcon className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Last Man Standing')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton aria-label=\"info\">\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handleCardClick('lms')} >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#8dbb5e' }}\r\n                    onClick={() => handleCardClick('elimination')}\r\n                >\r\n\r\n                    <Elimination className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Elimination')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton aria-label=\"info\">\r\n                        <MoreHorizIcon />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => handleCardClick('elimination')} >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TournamentTypeSelect\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\types.ts",["500","501"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordResetSuccess.tsx",["502","503","504","505"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport resetPasswordStyles from './passwordResetStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    onSuccessCallback: () => void;\r\n}\r\n\r\nconst RequestPasswordResetSuccess = (props: Props) => {\r\n    const classes = resetPasswordStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(authActions.forgotPasswordStateReset())\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                {t(\"Check your Email\")}\r\n            </Typography>\r\n            <div>\r\n                <p>\r\n                    {t(\"password-reset-success-body\")}\r\n                </p>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={submitting}\r\n                    className={classes.button}\r\n                    onClick={() => props.onSuccessCallback()}\r\n                >\r\n                    {t('Go to Login Page')}\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RequestPasswordResetSuccess;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\headerStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\settings\\actions.ts",["506","507","508"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\DeleteAccountDialog.tsx",["509","510"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\languageSelectStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Slider\\index.tsx",["511","512","513","514"],"import React from 'react';\r\nimport { withStyles, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nexport const HeaderSlider = withStyles({\r\n    root: {\r\n      color: '#8ebd5e',\r\n      width: '128px',\r\n      margin: '0 18px',\r\n    },\r\n    thumb: {\r\n      height: 14,\r\n      width: 14,\r\n      marginTop: -6,\r\n      marginLeft: -8,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n      '&:focus, &$active': {\r\n        marginTop: -8,        \r\n      marginLeft: -12,\r\n        height: 20,\r\n        width: 20,\r\n      },\r\n    },\r\n    active: {},\r\n    rail: {\r\n      backgroundColor: '#000',\r\n    },\r\n  })(Slider);","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderGeneric.tsx",["515","516","517","518","519","520","521","522","523","524","525","526","527"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\index.tsx",["528","529"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\layoutStyles.ts",["530"],"import { createStyles, makeStyles, fade } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst styles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    paper: {\r\n      justifyContent: 'space-between',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(['width', 'transform'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      backgroundColor: '#333333',\r\n    },\r\n    drawerSettingsOpen: {\r\n      //left: '200px',\r\n      transform: 'translateX(362px)',\r\n    },\r\n    drawerSettingsClose: {\r\n      transform: 'translateX(0px)',\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(['width', 'transform'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      backgroundColor: '#333333',\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7),\r\n    },\r\n    sidePanelOpen: {\r\n      width: '364px',\r\n      transition: theme.transitions.create('width', {\r\n        duration: '0.2s',\r\n      }),\r\n      overflowX: 'hidden',\r\n    },\r\n    sidePanelClose: {\r\n      width: 0,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      minHeight: 66,\r\n      // necessary for content to be below app bar\r\n      //...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: '12px',\r\n      //height: 'calc(100vh - 64px)',\r\n    },\r\n    listItems: {\r\n      color: '#c5c8cb',\r\n    },\r\n    listItemText: {\r\n      fontSize: '14px',\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n    },\r\n    icons: {\r\n      color: '#c5c8cb',\r\n    },\r\n    settingsHeader: {\r\n      backgroundColor: '#333333',\r\n      height: '66px',\r\n      color: '#c5c8cb',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingLeft: '4px',\r\n    },\r\n    settingsBody: {\r\n      height: '100%',\r\n      backgroundColor: '#ffffff',\r\n      padding: '20px',\r\n    },\r\n    fullScreen: {\r\n      width: 0,\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer - 1,\r\n    },\r\n\r\n  }),\r\n);\r\n\r\n\r\nexport default styles;",["531","532"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\reducer.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\authUtils.ts",["533"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\actions.ts",["534","535"],"import { actionCreator, payloadedActionCreator } from \"../helpers\";\r\nimport { UserGoogleLoginReqData, UserLoginCheckResData, UserLoginReqData, UserLoginResData, UserPasswordResetReqData } from \"../../types/user\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {\r\n    AuthActionParams,\r\n    LoginFailureActionParams,\r\n    LoginRequestActionParams,\r\n    LoginSuccessActionParams,\r\n    // LoginCheckFailureActionParams,\r\n    // LoginCheckRequestActionParams,\r\n    // LoginCheckSuccessActionParams,\r\n    ForgotPasswordRequestActionParams,\r\n    ForgotPasswordSuccessActionParams,\r\n    ForgotPasswordFailureActionParams,\r\n    ResetPasswordRequestActionParams,\r\n    ResetPasswordSuccessActionParams,\r\n    ResetPasswordFailureActionParams,\r\n    UserUpdateSuccessActionParams,\r\n    LogoutActionParams,\r\n    LOGIN_REQUEST,\r\n    LOGIN_FAILURE,\r\n    LOGIN_SUCCESS,\r\n    // LOGIN_CHECK_REQUEST,\r\n    // LOGIN_CHECK_FAILURE,\r\n    // LOGIN_CHECK_SUCCESS,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAILURE,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILURE,\r\n    FORGOT_PASSWORD_RESET,\r\n    USER_UPDATE_SUCCESS,\r\n    LOGOUT,\r\n    ForgotPasswordReqData,\r\n    ForgotPasswordResetActionParams,\r\n} from \"./types\"\r\nimport { userServices } from \"../../services/user\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport { Dispatch, DispatchWithoutAction } from \"react\";\r\nimport { ResponseData } from \"../../types/main\";\r\n\r\nexport const loginRequest = payloadedActionCreator<LoginRequestActionParams>(LOGIN_REQUEST);\r\n\r\nexport const loginSuccess = payloadedActionCreator<LoginSuccessActionParams>(LOGIN_SUCCESS);\r\n\r\nexport const loginFailure = payloadedActionCreator<LoginFailureActionParams>(LOGIN_FAILURE);\r\n\r\nexport const forgotPasswordRequest = actionCreator<ForgotPasswordRequestActionParams>(FORGOT_PASSWORD_REQUEST);\r\n\r\nexport const forgotPasswordSuccess = payloadedActionCreator<ForgotPasswordSuccessActionParams>(FORGOT_PASSWORD_SUCCESS);\r\n\r\nexport const forgotPasswordFailure = payloadedActionCreator<ForgotPasswordFailureActionParams>(FORGOT_PASSWORD_FAILURE);\r\n\r\nexport const resetPasswordRequest = actionCreator<ResetPasswordRequestActionParams>(RESET_PASSWORD_REQUEST);\r\n\r\nexport const resetPasswordSuccess = payloadedActionCreator<ResetPasswordSuccessActionParams>(RESET_PASSWORD_SUCCESS);\r\n\r\nexport const resetPasswordFailure = payloadedActionCreator<ResetPasswordFailureActionParams>(RESET_PASSWORD_FAILURE);\r\n\r\nexport const forgotPasswordStateReset = actionCreator<ForgotPasswordResetActionParams>(FORGOT_PASSWORD_RESET);\r\n\r\nexport const userUpdateSuccess = payloadedActionCreator<UserUpdateSuccessActionParams>(USER_UPDATE_SUCCESS);\r\n\r\nexport const logout = actionCreator<LogoutActionParams>(LOGOUT);\r\n\r\nconst login = (data: UserLoginReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest({ data: { ...data } }));\r\n\r\n        userServices.login(data)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    if (cookies.get('x-auth-token')) {\r\n                        cookies.remove('x-auth-token');\r\n                    }\r\n                    cookies.set('x-auth-token', res.data.data!.accessToken, { path: '/' });\r\n                    localStorage.setItem('refreshToken', res.data.data!.refreshToken!);\r\n                    dispatch(loginSuccess(res.data));\r\n\r\n                    //history.push(from);\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst loginCheck = () => {\r\n    const refreshToken = localStorage.getItem('refreshToken')\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest(null));\r\n\r\n        userServices.loginCheck({ refreshToken })\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginCheckResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    if (res.data.data?.accessToken) {\r\n                        cookies.set('x-auth-token', res.data.data!.accessToken, { path: '/' });\r\n                    }\r\n                    dispatch(loginSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: '', message: '' }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst googleLogin = (token: string) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest(null));\r\n\r\n        userServices.googleLogin(token)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    cookies.set('x-auth-token', res.data.data!.accessToken, { path: '/' });\r\n                    localStorage.setItem('refreshToken', res.data.data!.refreshToken!);\r\n                    dispatch(loginSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst facebookLogin = (token: string) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest(null));\r\n\r\n        userServices.facebookLogin(token)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    cookies.set('x-auth-token', res.data.data!.accessToken, { path: '/' });\r\n                    localStorage.setItem('refreshToken', res.data.data!.refreshToken!);\r\n                    dispatch(loginSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                    //dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst forgotPassword = (data: ForgotPasswordReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(forgotPasswordRequest());\r\n\r\n        userServices.forgotPassword(data)\r\n            .then(\r\n                (res: AxiosResponse) => {\r\n                    dispatch(forgotPasswordSuccess(res.data));\r\n                    //history.push(from);\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(forgotPasswordFailure({ error: error.name, message: error.message }));\r\n                    //dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst resetPassword = (data: UserPasswordResetReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(resetPasswordRequest());\r\n\r\n        userServices.resetPassword(data)\r\n            .then(\r\n                (res: AxiosResponse) => {\r\n                    dispatch(resetPasswordSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(resetPasswordFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nexport const authActions = {\r\n    login,\r\n    loginCheck,\r\n    googleLogin,\r\n    facebookLogin,\r\n    forgotPassword,\r\n    forgotPasswordStateReset,\r\n    resetPassword,\r\n    logout,\r\n};",["536","537"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\helpers.ts",["538"],"import { Action } from \"redux\";\r\nimport { EntityStateData } from \"../types/entities\";\r\n\r\nexport interface PayloadedAction<T, P> extends Action<T> {\r\n    payload: P;\r\n}\r\n\r\nexport const actionCreator = <T extends Action<T[\"type\"]>>(type: T[\"type\"]): () => Action<T[\"type\"]> => {\r\n    return () => ({\r\n        type\r\n    })\r\n}\r\n\r\nexport const payloadedActionCreator = <T extends PayloadedAction<T[\"type\"], T[\"payload\"]>>(type: T[\"type\"]): (payload: T[\"payload\"]) => PayloadedAction<T[\"type\"], T[\"payload\"]> => {\r\n    return (payload: T[\"payload\"]) => ({\r\n        type,\r\n        payload\r\n    })\r\n}\r\n\r\nexport const arrayGroupBy = <T>(objectArray: any[], property: string): T => {\r\n    return objectArray.reduce(function (acc, obj, i) {\r\n      //let key = obj[property]\r\n      if (!acc[i]) {\r\n        acc[i] = {}\r\n      }\r\n      acc[i] = {...obj}\r\n      return acc\r\n    }, {})\r\n  }\r\n\r\n\r\n// export function payloadedActionCreator<TAction extends PayloadedAction<TAction['type'], TAction['payload']>>(\r\n//     type: TAction['type'],\r\n// ): (payload: TAction['payload']) => PayloadedAction<TAction['type'], TAction['payload']> {\r\n//     return (payload: TAction['payload']) => ({\r\n//         payload,\r\n//         type,\r\n//     });\r\n// }","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\NotVerified.tsx",["539","540","541"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\actions.ts",["542","543","544"],"import { actionCreator, payloadedActionCreator } from \"../helpers\";\r\nimport { UserLoginReqData, UserRegisterReqData } from \"../../types/user\";\r\nimport {\r\n    RegisterActionParams,\r\n    RegisterFailureActionParams,\r\n    RegisterRequestActionParams,\r\n    RegisterSuccessActionParams,\r\n    VerifyEmailRequestActionParams,\r\n    VerifyEmailSuccessActionParams,\r\n    VerifyEmailFailureActionParams,\r\n    ResendVericationEmailRequestActionParams,\r\n    ResendVericationEmailSuccessActionParams,\r\n    ResendVericationEmailFailureActionParams,\r\n    REGISTER_REQUEST,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE,\r\n    VERIFY_EMAIL_REQUEST,\r\n    VERIFY_EMAIL_SUCCESS,\r\n    VERIFY_EMAIL_FAILURE,\r\n    RESEND_VERIFICATION_EMAIL_REQUEST,\r\n    RESEND_VERIFICATION_EMAIL_SUCCESS,\r\n    RESEND_VERIFICATION_EMAIL_FAILURE,\r\n} from \"./types\"\r\nimport { userServices } from \"../../services/user\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport { Dispatch, DispatchWithoutAction } from \"react\";\r\nimport toast from \"../../components/IndependentSnackbar\";\r\nimport i18n from \"../../utils/i18n\";\r\n\r\nexport const registerRequest = payloadedActionCreator<RegisterRequestActionParams>(REGISTER_REQUEST);\r\n\r\nexport const registerSuccess = actionCreator<RegisterSuccessActionParams>(REGISTER_SUCCESS);\r\n\r\nexport const registerFailure = payloadedActionCreator<RegisterFailureActionParams>(REGISTER_FAILURE);\r\n\r\nexport const verifyEmailRequest = actionCreator<VerifyEmailRequestActionParams>(VERIFY_EMAIL_REQUEST);\r\n\r\nexport const verifyEmailSuccess = payloadedActionCreator<VerifyEmailSuccessActionParams>(VERIFY_EMAIL_SUCCESS);\r\n\r\nexport const verifyEmailFailure = payloadedActionCreator<VerifyEmailFailureActionParams>(VERIFY_EMAIL_FAILURE);\r\n\r\nexport const resendVericationEmailRequest = actionCreator<ResendVericationEmailRequestActionParams>(RESEND_VERIFICATION_EMAIL_REQUEST);\r\n\r\nexport const resendVericationEmailSuccess = payloadedActionCreator<ResendVericationEmailSuccessActionParams>(RESEND_VERIFICATION_EMAIL_SUCCESS);\r\n\r\nexport const resendVericationEmailFailure = payloadedActionCreator<ResendVericationEmailFailureActionParams>(RESEND_VERIFICATION_EMAIL_FAILURE);\r\n\r\nconst register = (data: UserRegisterReqData) => {\r\n    return (dispatch: Dispatch<RegisterActionParams>) => {\r\n        dispatch(registerRequest(data));\r\n\r\n        userServices.register(data)\r\n            .then(\r\n                (res: AxiosResponse) => {\r\n                    dispatch(registerSuccess());\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(registerFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst verifyEmail = (token: string) => {\r\n    return (dispatch: Dispatch<RegisterActionParams>) => {\r\n        dispatch(verifyEmailRequest());\r\n\r\n        userServices.verifyUser(token)\r\n            .then(\r\n                (user: AxiosResponse) => {\r\n                    dispatch(verifyEmailSuccess(user.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(verifyEmailFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst resendVerificationEmail = (data: UserLoginReqData) => {\r\n    return (dispatch: Dispatch<RegisterActionParams>) => {\r\n        dispatch(resendVericationEmailRequest());\r\n\r\n        userServices.resendVerificationEmail(data)\r\n            .then(\r\n                (user: AxiosResponse) => {\r\n                    dispatch(resendVericationEmailSuccess(user.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(resendVericationEmailFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nexport const registerActions = {\r\n    register,\r\n    verifyEmail,\r\n    resendVerificationEmail,\r\n};","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Settings\\Settings.tsx",[],["545","546"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\ImportParticipantsDialog.tsx",["547","548","549","550"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\localization.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerForm.tsx",["551","552","553"],"import React, { createRef, useEffect, useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useParams } from 'react-router-dom';\r\nimport FormSubheader from '../../components/FormComponents/FormSubheader';\r\nimport { ReactComponent as Teams } from '../../resources/icons/teams.svg';\r\nimport { ReactComponent as Single } from '../../resources/icons/single.svg';\r\nimport { ReactComponent as DrawYourPartner } from '../../resources/icons/drawYourPartner.svg';\r\nimport { ReactComponent as MonsterDYP } from '../../resources/icons/monsterDYP.svg';\r\nimport { PlayerCategory, StateParticipants } from '../../types/entities';\r\nimport toast from '../../components/IndependentSnackbar';\r\nimport { updateParticipants, updateEliminationPlayers, updateTournament, updateLMSPlayers } from '../../redux/tournamentEntities/actions';\r\nimport PlayerFormTextField from '../../components/Tournament/PlayerFormTextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport tournamentStyles from './tournamentStyles';\r\nimport DYPConfigForm from '../../components/Tournament/DYPConfigForm/DYPConfigForm';\r\nimport CreateTournamentDialog from '../../components/Tournament/CreateTournamentDialog';\r\n\r\ninterface Duplicate {\r\n    player: string;\r\n    index: number;\r\n}\r\n\r\nconst initialParticipants = { name: '', category: null };\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst PlayerForm = (props: Props) => {\r\n    const [participants, setParticipants] = useState<StateParticipants>([{ ...initialParticipants }]);\r\n    const [checkboxSetPlayers, setCheckboxSetPlayers] = useState<boolean>(false);\r\n    const [fieldRefs, setFieldRefs] = useState<React.RefObject<HTMLInputElement>[]>([]);\r\n    const [dialogOpen, setDialogOpen] = useState<boolean>(false);\r\n    const entityState = useSelector((state: RootState) => state.entities);\r\n    const classes = tournamentStyles();\r\n    const dispatch = useDispatch();\r\n    const mainClasses = mainStyles();\r\n    const history = useHistory();\r\n    const { tournamentType, playerType, config } = useParams\r\n        <{\r\n            tournamentType: 'elimination' | 'lms' | 'round-robin',\r\n            playerType: 'single' | 'teams' | 'dyp' | 'monster-dyp',\r\n            config?: 'config'\r\n        }>();\r\n    const { t } = useTranslation();\r\n\r\n    const dyp = playerType === 'dyp';\r\n    const dypConfig = dyp && config === 'config';\r\n\r\n    useEffect(() => {\r\n        setFieldRefs(fieldRefs => (\r\n            Array(participants.length).fill(null).map((_, i) => fieldRefs[i] || createRef())\r\n        ));\r\n    }, [participants.length]);\r\n\r\n    useEffect(() => {\r\n        const storeParticipants = entityState.participants;\r\n        setParticipants([...storeParticipants, { ...initialParticipants }])\r\n    }, [entityState.participants]);\r\n\r\n    useEffect(() => {\r\n        const storeParticipants = entityState.participants;\r\n        if (storeParticipants.length === participants.length - 1) {\r\n            setParticipants([...storeParticipants, { ...initialParticipants }])\r\n        }\r\n    }, [entityState.participants]);\r\n\r\n    const handleCheckboxChange = () => {\r\n        setCheckboxSetPlayers(!checkboxSetPlayers);\r\n    };\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const handleStartTournament = (e: React.FormEvent, name: string) => {\r\n        e.preventDefault();\r\n        //submitGamesToStore();\r\n        dispatch(updateTournament({ name }));\r\n        history.push(`/${tournamentType}/${playerType}`)\r\n    };\r\n\r\n    const handleSubmit = (e: React.FormEvent): void => {\r\n        e.preventDefault();\r\n        const minPlayers = (playerType === 'dyp' || playerType === 'monster-dyp') ? 4 : 2;\r\n        const duplicate = getDuplicate();\r\n        if (duplicate) {\r\n            toast.warning(t('player-form-duplicate-name', { name: duplicate.player }));\r\n            fieldRefs[duplicate.index]?.current?.focus();\r\n            fieldRefs[duplicate.index]?.current?.select();\r\n            return;\r\n        }\r\n        if (participants.length - 1 < minPlayers) {\r\n            toast.warning(t('player-form-few-players', { number: minPlayers }));\r\n            return;\r\n        }\r\n        submitParticipantsToStore([...participants]);\r\n        if (playerType === 'dyp') {\r\n            if ((participants.length - 1) % 2 === 1) {\r\n                toast.warning(t('player-form-odd-players-error'));\r\n                return;\r\n            }\r\n            history.push(`/tournament/player-form/${tournamentType}/dyp/config`);\r\n            return;\r\n        }\r\n        if (tournamentType === 'elimination') {\r\n            dispatch(updateEliminationPlayers(participants.filter(x => !!x.name)));\r\n            history.push('/tournament/elimination-bracket');\r\n            return;\r\n        }\r\n        dispatch(updateLMSPlayers(participants.filter(x => !!x.name)));\r\n        handleDialogOpen();\r\n    }\r\n\r\n    const getDuplicate = (index?: number, name?: string): Duplicate => {\r\n        const duplicates: Duplicate[] = [];\r\n        const newPlayers = [...participants];\r\n        if (index && name) {\r\n            newPlayers[index].name = name;\r\n        }\r\n        const playerNames = participants.map(player => player.name);\r\n        playerNames.forEach((name, index) => {\r\n            if (name && playerNames.indexOf(name) !== index) {\r\n                duplicates.push({ player: name as string, index })\r\n            }\r\n        })\r\n        return duplicates[0];\r\n    }\r\n\r\n    const handlePlayerChange = (index: number/*, name: string */) => {\r\n        // let newPlayers = [...players];\r\n        // newPlayers[index].name = name;\r\n        // if (newPlayers[newPlayers.length - 1].name) {\r\n        //     newPlayers.push({ ...initialPlayer });\r\n        // }\r\n        // setPlayers([...newPlayers]);\r\n        if (participants[participants.length - 1].name || index === participants.length - 1) {\r\n            setParticipants([...participants, { ...initialParticipants }]);\r\n            //players.push({ ...initialPlayer });\r\n        }\r\n    };\r\n\r\n    const handleCategoryChange = (index: number, category: PlayerCategory) => {\r\n        let newPlayers = [...participants];\r\n        newPlayers[index].category = category;\r\n        setParticipants([...newPlayers]);\r\n        submitParticipantsToStore([...newPlayers]);\r\n    };\r\n\r\n    const insertMiddleRow = (index: number) => {\r\n        const newPlayers = [...participants];\r\n        if (participants[index - 1]) {\r\n            newPlayers.splice(index, 0, { ...initialParticipants })\r\n            setParticipants([...newPlayers]);\r\n        }\r\n    }\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent, index: number, name: string) => {\r\n        if (e.key === \"Enter\" || e.key === \"ArrowDown\") {\r\n            e.preventDefault();\r\n            const duplicate = getDuplicate(index, name);\r\n            if (duplicate && index >= participants.length - 2) {\r\n                toast.warning(t('player-form-duplicate-name', { name: duplicate.player }));\r\n                fieldRefs[duplicate.index]?.current?.focus();\r\n                fieldRefs[duplicate.index]?.current?.select();\r\n            }\r\n            else {\r\n                fieldRefs[index + 1]?.current?.focus();\r\n                if (e.key === \"Enter\") {\r\n                    if (e.ctrlKey) insertMiddleRow(index + 1);\r\n                    else fieldRefs[participants.length - 1]?.current?.focus();\r\n                }\r\n            }\r\n        }\r\n        if (e.key === \"ArrowUp\") {\r\n            e.preventDefault();\r\n            fieldRefs[index - 1]?.current?.focus()\r\n        }\r\n        if (e.key === \"Backspace\" && !name) {\r\n            fieldRefs[index - 1]?.current?.focus();\r\n        }\r\n    }\r\n\r\n    const handleBlur = (e: React.FocusEvent, index: number, name: string) => {\r\n        let newPlayers = [...participants];\r\n        newPlayers[index].name = name;\r\n        newPlayers = newPlayers.filter((val, i, arr) => {\r\n            return (!!val.name || i === arr.length - 1);\r\n        });\r\n        const duplicate = getDuplicate(index, name);\r\n        if (duplicate) {\r\n            toast.warning(t('player-form-duplicate-name', { name: duplicate.player }));\r\n            fieldRefs[duplicate.index]?.current?.focus();\r\n            fieldRefs[duplicate.index]?.current?.select();\r\n            return;\r\n        }\r\n        setParticipants([...newPlayers]);\r\n        submitParticipantsToStore([...newPlayers]);\r\n    }\r\n\r\n    const submitParticipantsToStore = (newPlayers: StateParticipants) => {\r\n        const storeParticipants: StateParticipants = newPlayers\r\n            .filter(player => !!player.name)\r\n            .map((player, i) => {\r\n                return checkboxSetPlayers ?\r\n                    { name: player.name, category: player.category } :\r\n                    { name: player.name, category: null };\r\n            })\r\n\r\n        dispatch(updateParticipants(storeParticipants));\r\n        // dispatch(updateEliminationPlayers(storeParticipants));\r\n    }\r\n\r\n    const renderHeader = () => {\r\n        switch (playerType) {\r\n            case 'single':\r\n                return (\r\n                    <div\r\n                        className={classes.playerFormHeader}\r\n                        style={{ backgroundImage: 'linear-gradient(-180deg,#e89e67,#e16f3d)' }}\r\n                    >\r\n                        <Single />\r\n                        <div>{t('Single')}</div>\r\n                    </div>\r\n                )\r\n            case 'teams':\r\n                return (\r\n                    <div\r\n                        className={classes.playerFormHeader}\r\n                        style={{ backgroundImage: 'linear-gradient(-180deg,#b0d275,#8dc44c)' }}\r\n                    >\r\n                        <Teams />\r\n                        <div>{t('Teams')}</div>\r\n                    </div>\r\n                )\r\n            case 'dyp':\r\n                return (\r\n                    <div\r\n                        className={classes.playerFormHeader}\r\n                        style={{ backgroundImage: 'linear-gradient(-180deg,#58e0f5,#00b8d4)' }}\r\n                    >\r\n                        <DrawYourPartner />\r\n                        <div>{t('Draw Your Partner')}</div>\r\n                    </div>\r\n                )\r\n            case 'monster-dyp':\r\n                return (\r\n                    <div\r\n                        className={classes.playerFormHeader}\r\n                        style={{ backgroundImage: 'linear-gradient(-180deg,#efdb63,#f6c832)' }}\r\n                    >\r\n                        <MonsterDYP />\r\n                        <div>{t('MonsterDYP')}</div>\r\n                    </div>\r\n                )\r\n            default:\r\n                return null;\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (dypConfig) {\r\n        return <DYPConfigForm tournamentType={tournamentType} />\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.playerFormPaper}>\r\n            <form className={classes.form} onSubmit={handleSubmit} id='player-form'>\r\n                {renderHeader()}\r\n                <FormSubheader title={t('Names')} text={dyp ? t('form-subheader-names-dyp-text') : t('form-subheader-names-text')} descriptionWidth={366} />\r\n                {dyp &&\r\n                    <FormControl>\r\n                        <FormControlLabel\r\n                            className={classes.playerFormCheckbox}\r\n                            control={\r\n                                <Checkbox\r\n                                    size='small'\r\n                                    checked={checkboxSetPlayers}\r\n                                    onChange={handleCheckboxChange}\r\n                                    name=\"setPlayers\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label={t('Set Players')}\r\n                        /></FormControl>\r\n                }\r\n                <div>\r\n                    {participants.map((player, index) => {\r\n                        return (\r\n                            <PlayerFormTextField\r\n                                key={index}\r\n                                index={index}\r\n                                inputRef={fieldRefs}\r\n                                player={player}\r\n                                showCategories={dyp && checkboxSetPlayers}\r\n                                onChange={handlePlayerChange}\r\n                                onBlur={handleBlur}\r\n                                onCategoryChange={handleCategoryChange}\r\n                                onKeyDown={handleKeyDown}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </form>\r\n            <CreateTournamentDialog\r\n                open={dialogOpen}\r\n                onClose={handleDialogClose}\r\n                onSubmit={handleStartTournament}\r\n            />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default PlayerForm\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\App.tsx",["554","555","556","557","558","559","560"],"import React, { useEffect } from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport Layout from './components/Layout';\nimport PublicRoute from './components/Routes/PublicRoute';\nimport LoginDialog from './components/Dialogs/Login';\nimport ResetPasswordForm from './pages/PasswordReset/PasswordResetForm';\nimport EmailVerificationResult from './pages/Register/EmailVerificationResult';\nimport Home from './pages/Home';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from './redux/store';\nimport { authActions } from './redux/auth/actions';\nimport { ActionStatus } from './types/main';\nimport TournamentTypeSelect from './pages/Tournaments/TournamentTypeSelect';\nimport TournamentForm from './pages/Tournaments/TournamentForm';\nimport PlayerTypeSelect from './pages/Tournaments/PlayerTypeSelect';\nimport PlayerForm from './pages/Tournaments/PlayerForm';\nimport EliminationBracket from './pages/Tournaments/EliminationBracket';\nimport DeleteAccountResult from './pages/DeleteAccount/DeleteAccountResult';\nimport Elimination from './pages/Tournaments/Elimination';\nimport LastManStanding from './pages/Tournaments/LastManStanding';\n\nfunction App() {\n\n\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          {/* <PrivateRoute exact path=\"/\">\n            <Tournaments />\n          </PrivateRoute> */}\n          <PrivateRoute exact path=\"/tournament/new\">\n            <TournamentTypeSelect />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/tournament-form/:tournamentType\">\n            <TournamentForm />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/tournament/elimination-bracket\">\n            <EliminationBracket />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/elimination\">\n            <Elimination />\n          </PrivateRoute>\n          {/* <PrivateRoute exact path=\"/:tournamentType/:playerType\">\n            <Elimination />\n          </PrivateRoute> */}\n          <PrivateRoute exact path=\"/lms/:playerType\">\n            <LastManStanding />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/tournament/player-type-select/:tournamentType\">\n            <PlayerTypeSelect />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/tournament/player-form/:tournamentType/:playerType/:config?\">\n            <PlayerForm />\n          </PrivateRoute>\n          <PrivateRoute exact path=\"/tournaments/\">\n            <div>KEKW</div>\n          </PrivateRoute>\n          <PublicRoute exact path=\"/login\">\n            <LoginDialog />\n          </PublicRoute>\n          <PublicRoute exact path=\"/reset-password/:token\">\n            <ResetPasswordForm />\n          </PublicRoute>\n          <PublicRoute exact path=\"/verify-email/:token\">\n            <EmailVerificationResult />\n          </PublicRoute>\n          <PublicRoute exact path=\"/delete-account/:token\">\n            <DeleteAccountResult />\n          </PublicRoute>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n          {/* <Route path=\"/\">\n            <Redirect to=\"/tournaments\" />\n          </Route> */}\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n    // <div className=\"App\">\n    //   <LanguageSelect />\n    //   <Login />\n    // </div>\n  );\n}\n\nexport default App;\n",["561","562"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\FormSubheader.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\index.tsx",["563","564","565","566"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport languageSelectStyles from './languageSelectStyles';\r\nimport i18n, { updateAxiosLocale } from '../../utils/i18n';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport mainStyles from '../../styles/mainStyles';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nexport type AppLanguages = 'en' | 'hy' | 'ru';\r\n\r\nexport enum AppLanguageNames {\r\n    English = 'en',\r\n    Armenian = 'hy',\r\n    Russian = 'ru'\r\n}\r\n\r\nconst LanguageSelect = (props: Props) => {\r\n    const mainClasses = mainStyles();\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        //console.log()\r\n        i18n.changeLanguage(event.target.value as string);\r\n        localStorage.setItem('i18nextLng', event.target.value as string);\r\n        updateAxiosLocale();\r\n    };\r\n\r\n    const { t } = useTranslation();\r\n    const currentLanguage: string = i18n.language.substring(0, 2);\r\n    return (\r\n        <div>\r\n            <InputLabel id=\"demo-simple-select-label\">{t('Language')}</InputLabel>\r\n            <Select\r\n                fullWidth\r\n                value={currentLanguage}\r\n                onChange={handleChange}                \r\n                className={mainClasses.select}\r\n            >\r\n                <MenuItem value={'en'}>{t('English')}</MenuItem>\r\n                <MenuItem value={'hy'}>{t('Armenian')}</MenuItem>\r\n                <MenuItem value={'ru'}>{t('Russian')}</MenuItem>\r\n            </Select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageSelect\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\mainStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentForm.tsx",["567","568"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\reducer.ts",["569","570","571","572","573","574"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\i18n.ts",["575","576"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\DeleteAccount\\DeleteAccountResult.tsx",["577","578","579","580","581","582"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\types.ts",["583","584","585","586","587","588","589"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\error.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\Register.tsx",["590","591"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\registerStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\LastManStanding.tsx",["592","593","594","595","596"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\lastManStandingStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListRow.tsx",["597","598","599","600","601","602","603","604","605"],"import React, { useState, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Games, StateScore } from '../../types/entities';\r\nimport { splitGameKey } from '../../utils/stringUtils';\r\nimport { resetGames, updateGames } from '../../redux/tournamentEntities/actions';\r\nimport EnterScoreContent from './EnterScore/EnterScoreContent';\r\nimport gameListRowStyles from './gameListRowStyles';\r\nimport clsx from 'clsx';\r\nimport { getMultipleSetScores } from '../../utils/scoreUtils';\r\nimport GameListEnterScoreButton from './GameListEnterScoreButton';\r\n\r\ninterface Props {\r\n    gameKey: string;\r\n    maxScores?: number;\r\n    tabIndex: number;\r\n}\r\n\r\nconst GameListRow = ({ gameKey, tabIndex, maxScores = 10 }: Props) => {\r\n    const [games, setGames] = useState<Games>({});\r\n    const [scoresOpen, setScoresOpen] = useState<boolean>(false);\r\n    const [stateChanged, setStateChanged] = useState<boolean>(false);\r\n    const [numberOfAdditionalGames, setNumberOfAdditionalGames] = useState<number>(0);\r\n    const entityState = useSelector((state: RootState) => state.entities);\r\n    const gamesState = useSelector((state: RootState) => state.entities.games);\r\n    const settingsState = useSelector((state: RootState) => state.settings);\r\n    const scoresRef = useRef<any>();\r\n    const enterScoreContentRef = useRef<any>(null);\r\n    const scoreToggleButtonRef = useRef<any>(null);\r\n    // const winningSets = entityState.tournament.sets || 1;\r\n    const firstRoundGameNumber = Object.keys(games).filter(gameKey => splitGameKey(gameKey).round === 1).length;\r\n    const dispatch = useDispatch();\r\n    const columns = Math.log(Object.keys(games).length + 1) / Math.log(2);\r\n    const classes = gameListRowStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const toggleScoresOpen = () => {\r\n        if (scoresOpen) {\r\n            setScoresOpen(false);\r\n            enterScoreContentRef.current?.blur();\r\n        }\r\n        else {\r\n            setScoresOpen(true);\r\n            enterScoreContentRef.current?.focus();\r\n        }\r\n        setStateChanged(true);\r\n    }\r\n\r\n    const closeScores = () => {\r\n        setScoresOpen(false);\r\n        const nextPossibleKeyOfTheRound = `${splitGameKey(gameKey).round}-${splitGameKey(gameKey).gameNumber + 1}`;\r\n        const nextRoundFirstKey = `${splitGameKey(gameKey).round + 1}-1`;\r\n        const nextPossibleRoundToggleButton = document.getElementById(`toggle-score-button-${nextPossibleKeyOfTheRound}`);\r\n        const nextRoundToggleButton = document.getElementById(`toggle-score-button-${nextRoundFirstKey}`);\r\n        debugger\r\n        enterScoreContentRef.current?.blur();\r\n        nextPossibleRoundToggleButton ? nextPossibleRoundToggleButton?.focus() : nextRoundToggleButton?.focus();\r\n        setStateChanged(true);\r\n    }\r\n\r\n    const handleAdditionalGameCount = (n: number) => {\r\n        setNumberOfAdditionalGames(n);\r\n    }\r\n\r\n    const handleScoreConfirm = (scores1: StateScore, scores2: StateScore) => {\r\n        const { score1, score2 } = getMultipleSetScores(scores1, scores2, Object.keys(scores1).length)\r\n        const round = splitGameKey(gameKey).round;\r\n\r\n        dispatch(updateGames({ [gameKey]: { ...gamesState[gameKey], score1, score2, scores1: Object.values(scores1), scores2: Object.values(scores2) } }));\r\n        closeScores();\r\n    }\r\n\r\n    const visibleScores = entityState.tournament.numberOfGoals && entityState.tournament.numberOfGoals < maxScores ? entityState.tournament.numberOfGoals + 1 : maxScores;\r\n\r\n    return (\r\n        <div className={classes.gameRowContainer}>\r\n            <div className={classes.gameRow}>\r\n                <div className={classes.gameRowP1}>{gamesState[gameKey]?.player1}</div>\r\n                <button className={classes.scoreContainer} onClick={toggleScoresOpen} type='button' tabIndex={tabIndex} id={`toggle-score-button-${gameKey}`}>\r\n                    <GameListEnterScoreButton\r\n                        scoresOpen={scoresOpen}\r\n                        score1={gamesState[gameKey]?.score1}\r\n                        score2={gamesState[gameKey]?.score2}\r\n                    />\r\n                </button>\r\n                <div className={classes.gameRowP2}>{gamesState[gameKey]?.player2}</div>\r\n            </div>\r\n            <div\r\n                className={classes.gameListRowEnterScoreContainer}\r\n                style={\r\n                    (scoresOpen ?\r\n                        { maxHeight: `${scoresRef.current?.offsetHeight + numberOfAdditionalGames * 40}px` } :\r\n                        (stateChanged ?\r\n                            { maxHeight: `0px` } :\r\n                            { position: 'fixed', maxHeight: `0px` }\r\n                        )\r\n                    )\r\n                }\r\n            >\r\n                <div ref={scoresRef} className={classes.enterScoreContentContainer}>\r\n                    <EnterScoreContent\r\n                        forwardedRef={enterScoreContentRef}\r\n                        onClose={closeScores}\r\n                        onConfirm={handleScoreConfirm}\r\n                        gameKey={gameKey}\r\n                        games={entityState.eliminationGames}\r\n                        visibleScores={visibleScores}\r\n                        getNumberOfAdditionalGames={handleAdditionalGameCount}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameListRow\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\gameListRowStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\PasswordResetForm.tsx",["606"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport resetPasswordStyles from './passwordResetStyles';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport mainStyles from '../../styles/mainStyles';\r\n\r\ninterface FormikValues {\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IError {\r\n    password?: string;\r\n    confirmPassword?: string;\r\n}\r\n\r\nconst PasswordResetForm = () => {\r\n    const [success, setSuccess] = useState<boolean>(false);\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const history = useHistory();\r\n    const classes = resetPasswordStyles();\r\n    const mainClasses = mainStyles();\r\n    const { token } = useParams<{ token: string }>();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.resetPassword.status === ActionStatus.Request);\r\n        if (authState.resetPassword.status === ActionStatus.Success) {\r\n            setSuccess(true);\r\n        }\r\n    }, [authState.resetPassword.status]);\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.resetPassword({ password: values.password, token }));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleLoginPageButton = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth={false}\r\n            fullScreen={fullScreen}\r\n            open\r\n            classes={{\r\n                paper:\r\n                    classes.paper\r\n            }}\r\n        >\r\n            <div className={classes.content}>\r\n                <div className={classes.leftPart}>\r\n                    (Lorem Ipsum)\r\n                        </div>\r\n                <div className={classes.mainPart}>\r\n\r\n                    <div className={classes.mainContent}>\r\n                        {!success ?\r\n                            <>\r\n                                <Typography>\r\n                                    {t('Please enter a new Password')}\r\n                                </Typography>\r\n                                <Formik\r\n                                    initialValues={{ password: '', confirmPassword: '' }}\r\n                                    validate={values => {\r\n                                        const errors: IError = {};\r\n                                        if (!values.password) {\r\n                                            errors.password = t('Please enter a Password');\r\n                                        } else if (\r\n                                            !/(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}/.test(values.password)\r\n                                        ) {\r\n                                            errors.password = t('password-validation-error');\r\n                                        } else if (values.password !== values.confirmPassword) {\r\n                                            errors.confirmPassword = t('Passwords do not match');\r\n                                        }\r\n                                        if (!values.confirmPassword) {\r\n                                            errors.confirmPassword = t('Please confirm the Password');\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={handleFormSubmit}\r\n                                >\r\n                                    {({\r\n                                        values,\r\n                                        errors,\r\n                                        touched,\r\n                                        handleChange,\r\n                                        handleBlur,\r\n                                        handleSubmit\r\n                                    }) => (\r\n                                        <form className={classes.form} onSubmit={handleSubmit}>\r\n                                            <TextField\r\n                                                error={!!errors.password && touched.password}\r\n                                                required\r\n                                                fullWidth\r\n                                                name=\"password\"\r\n                                                label={t('Password')}\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={classes.textField}\r\n                                            />\r\n                                            <div className={mainClasses.formErrorContainer}>\r\n                                                {errors.password && touched.password &&\r\n                                                    <ErrorMessage name=\"password\" component=\"div\" className={mainClasses.formError} />}\r\n                                            </div>\r\n                                            <TextField\r\n                                                error={!!errors.confirmPassword && touched.confirmPassword}\r\n                                                required\r\n                                                fullWidth\r\n                                                name=\"confirmPassword\"\r\n                                                label={t('Confirm Password')}\r\n                                                type=\"password\"\r\n                                                id=\"confirmPassword\"\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={classes.textField}\r\n                                            />\r\n                                            <div className={mainClasses.formErrorContainer}>\r\n                                                {errors.confirmPassword && touched.confirmPassword &&\r\n                                                    <ErrorMessage name=\"confirmPassword\" component=\"div\" className={mainClasses.formError} />}\r\n                                            </div>\r\n                                            <br />\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                disabled={submitting}\r\n                                                className={classes.button}\r\n                                            >\r\n                                                {t('Confirm')}\r\n                                            </Button>\r\n                                            {authState.resetPassword.status === ActionStatus.Request &&\r\n                                                <div className={mainClasses.progress}>\r\n                                                    <CircularProgress />\r\n                                                </div>\r\n                                            }\r\n                                            {authState.resetPassword.status === ActionStatus.Failure &&\r\n                                                <div className={mainClasses.errorMessage}>\r\n                                                    {t(`ERROR_${authState.resetPassword.error}`)}\r\n                                                </div>\r\n                                            }\r\n                                        </form>\r\n                                    )}\r\n                                </Formik>\r\n                            </> :\r\n                            <>\r\n                                <Typography>\r\n                                    {t(\"Your password was successfully reset\")}\r\n                                </Typography>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        disabled={submitting}\r\n                                        className={classes.button}\r\n                                        onClick={handleLoginPageButton}\r\n                                    >\r\n                                        {t('Go to Login Page')}\r\n                                    </Button>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default PasswordResetForm;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\loginDialogStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\facebookButtonStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\playerFormTextFieldStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\FacebookButton.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleLogo.tsx",["607"],"import React from 'react'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst GoogleLogo = (props: Props) => {\r\n    return (\r\n        <SvgIcon>\r\n            <svg viewBox=\"0 0 256 262\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid\">\r\n                <path d=\"M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\" fill=\"#4285F4\" />\r\n                <path d=\"M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1\" fill=\"#34A853\" />\r\n                <path d=\"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782\" fill=\"#FBBC05\" />\r\n                <path d=\"M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251\" fill=\"#EB4335\" />\r\n            </svg>\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nexport default GoogleLogo\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListEnterScoreButton.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\GameListRound.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\store.ts",["608","609","610","611"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\asyncWrapper.ts",["612"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\error.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\CreateTournamentDialog.tsx",["613"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\createTournamentDialogStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\Profile.tsx",["614","615","616"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\user.ts",["617","618"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordReset.tsx",["619","620","621"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStatsSettingsListItem.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\tournamentStatsSettingsListStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStatsSettingsList.tsx",["622","623"],"import React from 'react'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport TournamentStatsSettingsListItem from './TournamentStatsSettingsListItem';\r\nimport { LMSColOrderKeys } from '../../types/entities';\r\nimport tournamentStatsSettingsListStyles from './tournamentStatsSettingsListStyles';\r\n\r\nconst reorder = (list: LMSColOrderKeys[], startIndex: number, endIndex: number) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};\r\n\r\ninterface Props {\r\n    orderedColumns: LMSColOrderKeys[],\r\n    enabledColumns: LMSColOrderKeys[],\r\n    onChange: (players: LMSColOrderKeys[]) => void\r\n}\r\n\r\nconst TournamentStatsSettingsList = (props: Props) => {\r\n    const classes = tournamentStatsSettingsListStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const onDragEnd = (result: any) => {\r\n        // dropped outside the list\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const items = reorder(\r\n            props.orderedColumns,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n\r\n        props.onChange(items);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.eliminationSidebar}>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                            style={{ cursor: 'move' }}\r\n                        >\r\n                            {props.orderedColumns && props.orderedColumns.map((columnName, i) => (\r\n                                <TournamentStatsSettingsListItem\r\n                                    key={i}\r\n                                    keyName={columnName}\r\n                                    index={i}\r\n                                    enabled={props.enabledColumns.indexOf(columnName) >= 0}\r\n                                />\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TournamentStatsSettingsList\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreContent.tsx",["624","625","626","627","628","629","630","631"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreSelector.tsx",["632","633"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreScoresConainer.tsx",["634"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreDialog.tsx",["635","636","637","638"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\reducer.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\reducer.ts",["639"],"import { ActionStatus } from \"../../types/main\";\r\nimport AppState from \"../../types/redux\";\r\nimport { clearCookieAndStorage } from \"../../utils/authUtils\";\r\nimport { AuthActionParams, AuthReducerState } from \"./types\";\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  USER_UPDATE_SUCCESS,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAILURE,\r\n  FORGOT_PASSWORD_RESET,\r\n  RESET_PASSWORD_REQUEST,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_FAILURE,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nconst forgotPasswordInitialState = {\r\n  status: ActionStatus.Initial,\r\n  error: ''\r\n}\r\n\r\nconst resetPasswordInitialState = {\r\n  status: ActionStatus.Initial,\r\n  error: ''\r\n}\r\n\r\nconst loginCheckInitialState = {\r\n  status: ActionStatus.Initial,\r\n  error: ''\r\n}\r\n\r\nconst initialState: AuthReducerState | null = {\r\n  status: ActionStatus.Initial,\r\n  data: {\r\n    id: null,\r\n    email: '',\r\n    displayName: '',\r\n    password: '',\r\n    social: null,\r\n  },\r\n  error: '',\r\n  forgotPassword: { ...forgotPasswordInitialState },\r\n  resetPassword: { ...resetPasswordInitialState },\r\n  loginCheck: { ...loginCheckInitialState },\r\n};\r\n\r\nconst reducer = (state: AuthReducerState = initialState, action: AuthActionParams): AuthReducerState => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        data: { ...initialState.data!, ...action.payload?.data },\r\n        status: ActionStatus.Request,\r\n      };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        status: ActionStatus.Success,\r\n        error: ''\r\n      };\r\n    }\r\n    case LOGIN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        status: ActionStatus.Failure,\r\n        ...action.payload\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          status: ActionStatus.Request,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          status: ActionStatus.Success,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_FAILURE: {\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          status: ActionStatus.Failure,\r\n          error: action.payload?.error\r\n        }\r\n      };\r\n    }\r\n    case FORGOT_PASSWORD_RESET: {\r\n      return {\r\n        ...state,\r\n        forgotPassword: {\r\n          status: ActionStatus.Initial,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case RESET_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        resetPassword: {\r\n          status: ActionStatus.Request,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case RESET_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        resetPassword: {\r\n          status: ActionStatus.Success,\r\n          error: ''\r\n        }\r\n      };\r\n    }\r\n    case RESET_PASSWORD_FAILURE: {\r\n      return {\r\n        ...state,\r\n        resetPassword: {\r\n          status: ActionStatus.Failure,\r\n          error: action.payload?.error\r\n        }\r\n      };\r\n    }\r\n    case USER_UPDATE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        data: { ...action.payload?.data!, social: state.data?.social },\r\n        //status: ActionStatus.Success,\r\n        //error: ''\r\n      };\r\n    }\r\n    case LOGOUT: {\r\n      clearCookieAndStorage();\r\n      return {\r\n        ...initialState\r\n      };\r\n    }\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PrivateRoute.tsx",["640"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { authActions } from '../../redux/auth/actions';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\n\r\ninterface Props {\r\n    children: React.ReactElement;\r\n    path: string;\r\n    exact?: boolean;\r\n}\r\n\r\nconst PrivateRoute = ({ children, ...rest }: Props) => {\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n\r\n    useEffect(() => {\r\n        if (authState.status === ActionStatus.Initial) {\r\n            dispatch(authActions.loginCheck());\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() =>\r\n                authState.status === ActionStatus.Success ?\r\n                    children :\r\n                    <Redirect to=\"/login\" />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerTypeSelect.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\types.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\actions.ts",["641","642","643","644","645","646"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\config.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\profileStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\loginStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\EnterScore\\EnterScoreItem.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\scoreUtils.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PublicRoute.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\types.ts",["647"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\DeleteAccount\\deleteAccountStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\DYPConfigForm\\DYPConfigForm.tsx",["648","649","650"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\LastManStandingPlayerStatsRow.tsx",["651"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\LastManStandingPlayerStatsList.tsx",["652","653","654","655","656","657"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\TournamentStats\\lastManStandingStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationSidebarItem.tsx",["658","659","660","661","662"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationCard.tsx",["663","664","665","666","667","668"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationBracketCards.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Tournament\\Elimination\\EliminationCards.tsx",["669"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\main.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\IndependentSnackbar\\index.tsx",["670","671"],{"ruleId":"672","severity":1,"message":"673","line":7,"column":33,"nodeType":"674","messageId":"675","endLine":7,"endColumn":43},{"ruleId":"672","severity":1,"message":"676","line":25,"column":13,"nodeType":"674","messageId":"675","endLine":25,"endColumn":14},{"ruleId":"677","severity":1,"message":"678","line":37,"column":8,"nodeType":"679","endLine":37,"endColumn":40,"suggestions":"680"},{"ruleId":"672","severity":1,"message":"681","line":146,"column":31,"nodeType":"674","messageId":"675","endLine":146,"endColumn":61},{"ruleId":"682","replacedBy":"683"},{"ruleId":"684","replacedBy":"685"},{"ruleId":"672","severity":1,"message":"676","line":18,"column":13,"nodeType":"674","messageId":"675","endLine":18,"endColumn":14},{"ruleId":"677","severity":1,"message":"686","line":24,"column":8,"nodeType":"679","endLine":24,"endColumn":10,"suggestions":"687"},{"ruleId":"672","severity":1,"message":"688","line":1,"column":49,"nodeType":"674","messageId":"675","endLine":1,"endColumn":64},{"ruleId":"672","severity":1,"message":"689","line":5,"column":10,"nodeType":"674","messageId":"675","endLine":5,"endColumn":31},{"ruleId":"672","severity":1,"message":"690","line":29,"column":5,"nodeType":"674","messageId":"675","endLine":29,"endColumn":21},{"ruleId":"672","severity":1,"message":"691","line":31,"column":10,"nodeType":"674","messageId":"675","endLine":31,"endColumn":29},{"ruleId":"682","replacedBy":"692"},{"ruleId":"684","replacedBy":"693"},{"ruleId":"672","severity":1,"message":"694","line":1,"column":17,"nodeType":"674","messageId":"675","endLine":1,"endColumn":25},{"ruleId":"672","severity":1,"message":"695","line":9,"column":8,"nodeType":"674","messageId":"675","endLine":9,"endColumn":19},{"ruleId":"672","severity":1,"message":"696","line":10,"column":8,"nodeType":"674","messageId":"675","endLine":10,"endColumn":17},{"ruleId":"672","severity":1,"message":"697","line":13,"column":10,"nodeType":"674","messageId":"675","endLine":13,"endColumn":22},{"ruleId":"672","severity":1,"message":"698","line":13,"column":24,"nodeType":"674","messageId":"675","endLine":13,"endColumn":30},{"ruleId":"672","severity":1,"message":"699","line":15,"column":10,"nodeType":"674","messageId":"675","endLine":15,"endColumn":21},{"ruleId":"672","severity":1,"message":"700","line":19,"column":10,"nodeType":"674","messageId":"675","endLine":19,"endColumn":17},{"ruleId":"672","severity":1,"message":"701","line":22,"column":11,"nodeType":"674","messageId":"675","endLine":22,"endColumn":23},{"ruleId":"672","severity":1,"message":"702","line":27,"column":11,"nodeType":"674","messageId":"675","endLine":27,"endColumn":17},{"ruleId":"677","severity":1,"message":"703","line":51,"column":8,"nodeType":"679","endLine":51,"endColumn":42,"suggestions":"704"},{"ruleId":"682","replacedBy":"705"},{"ruleId":"684","replacedBy":"706"},{"ruleId":"672","severity":1,"message":"707","line":5,"column":50,"nodeType":"674","messageId":"675","endLine":5,"endColumn":73},{"ruleId":"708","severity":1,"message":"709","line":67,"column":25,"nodeType":"710","endLine":67,"endColumn":28},{"ruleId":"708","severity":1,"message":"709","line":77,"column":25,"nodeType":"710","endLine":77,"endColumn":45},{"ruleId":"708","severity":1,"message":"709","line":86,"column":25,"nodeType":"710","endLine":86,"endColumn":28},{"ruleId":"672","severity":1,"message":"711","line":1,"column":22,"nodeType":"674","messageId":"675","endLine":1,"endColumn":26},{"ruleId":"672","severity":1,"message":"712","line":2,"column":7,"nodeType":"674","messageId":"675","endLine":2,"endColumn":18},{"ruleId":"672","severity":1,"message":"713","line":1,"column":38,"nodeType":"674","messageId":"675","endLine":1,"endColumn":40},{"ruleId":"672","severity":1,"message":"714","line":12,"column":10,"nodeType":"674","messageId":"675","endLine":12,"endColumn":20},{"ruleId":"672","severity":1,"message":"702","line":21,"column":11,"nodeType":"674","messageId":"675","endLine":21,"endColumn":17},{"ruleId":"672","severity":1,"message":"715","line":44,"column":15,"nodeType":"674","messageId":"675","endLine":44,"endColumn":20},{"ruleId":"672","severity":1,"message":"716","line":49,"column":11,"nodeType":"674","messageId":"675","endLine":49,"endColumn":27},{"ruleId":"682","replacedBy":"717"},{"ruleId":"684","replacedBy":"718"},{"ruleId":"672","severity":1,"message":"719","line":3,"column":8,"nodeType":"674","messageId":"675","endLine":3,"endColumn":20},{"ruleId":"672","severity":1,"message":"720","line":19,"column":12,"nodeType":"674","messageId":"675","endLine":19,"endColumn":16},{"ruleId":"677","severity":1,"message":"721","line":22,"column":5,"nodeType":"674","endLine":22,"endColumn":14,"suggestions":"722"},{"ruleId":"672","severity":1,"message":"723","line":2,"column":8,"nodeType":"674","messageId":"675","endLine":2,"endColumn":13},{"ruleId":"672","severity":1,"message":"724","line":7,"column":8,"nodeType":"674","messageId":"675","endLine":7,"endColumn":23},{"ruleId":"672","severity":1,"message":"725","line":8,"column":8,"nodeType":"674","messageId":"675","endLine":8,"endColumn":12},{"ruleId":"672","severity":1,"message":"726","line":11,"column":8,"nodeType":"674","messageId":"675","endLine":11,"endColumn":16},{"ruleId":"672","severity":1,"message":"727","line":12,"column":8,"nodeType":"674","messageId":"675","endLine":12,"endColumn":17},{"ruleId":"672","severity":1,"message":"728","line":13,"column":8,"nodeType":"674","messageId":"675","endLine":13,"endColumn":25},{"ruleId":"672","severity":1,"message":"729","line":1,"column":10,"nodeType":"674","messageId":"675","endLine":1,"endColumn":16},{"ruleId":"672","severity":1,"message":"730","line":2,"column":27,"nodeType":"674","messageId":"675","endLine":2,"endColumn":42},{"ruleId":"672","severity":1,"message":"731","line":4,"column":23,"nodeType":"674","messageId":"675","endLine":4,"endColumn":34},{"ruleId":"672","severity":1,"message":"732","line":7,"column":10,"nodeType":"674","messageId":"675","endLine":7,"endColumn":19},{"ruleId":"672","severity":1,"message":"714","line":9,"column":10,"nodeType":"674","messageId":"675","endLine":9,"endColumn":20},{"ruleId":"672","severity":1,"message":"733","line":18,"column":24,"nodeType":"674","messageId":"675","endLine":18,"endColumn":37},{"ruleId":"672","severity":1,"message":"734","line":1,"column":10,"nodeType":"674","messageId":"675","endLine":1,"endColumn":23},{"ruleId":"672","severity":1,"message":"688","line":1,"column":49,"nodeType":"674","messageId":"675","endLine":1,"endColumn":64},{"ruleId":"672","severity":1,"message":"690","line":5,"column":5,"nodeType":"674","messageId":"675","endLine":5,"endColumn":21},{"ruleId":"672","severity":1,"message":"735","line":5,"column":8,"nodeType":"674","messageId":"675","endLine":5,"endColumn":25},{"ruleId":"677","severity":1,"message":"736","line":28,"column":8,"nodeType":"679","endLine":28,"endColumn":33,"suggestions":"737"},{"ruleId":"672","severity":1,"message":"738","line":1,"column":8,"nodeType":"674","messageId":"675","endLine":1,"endColumn":13},{"ruleId":"672","severity":1,"message":"739","line":2,"column":22,"nodeType":"674","messageId":"675","endLine":2,"endColumn":32},{"ruleId":"672","severity":1,"message":"740","line":2,"column":34,"nodeType":"674","messageId":"675","endLine":2,"endColumn":39},{"ruleId":"672","severity":1,"message":"741","line":2,"column":41,"nodeType":"674","messageId":"675","endLine":2,"endColumn":53},{"ruleId":"672","severity":1,"message":"742","line":1,"column":17,"nodeType":"674","messageId":"675","endLine":1,"endColumn":29},{"ruleId":"672","severity":1,"message":"743","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":23},{"ruleId":"672","severity":1,"message":"744","line":2,"column":25,"nodeType":"674","messageId":"675","endLine":2,"endColumn":33},{"ruleId":"672","severity":1,"message":"745","line":2,"column":35,"nodeType":"674","messageId":"675","endLine":2,"endColumn":40},{"ruleId":"672","severity":1,"message":"746","line":2,"column":42,"nodeType":"674","messageId":"675","endLine":2,"endColumn":48},{"ruleId":"672","severity":1,"message":"747","line":7,"column":8,"nodeType":"674","messageId":"675","endLine":7,"endColumn":17},{"ruleId":"672","severity":1,"message":"748","line":9,"column":8,"nodeType":"674","messageId":"675","endLine":9,"endColumn":19},{"ruleId":"672","severity":1,"message":"749","line":10,"column":8,"nodeType":"674","messageId":"675","endLine":10,"endColumn":17},{"ruleId":"672","severity":1,"message":"750","line":26,"column":20,"nodeType":"674","messageId":"675","endLine":26,"endColumn":28},{"ruleId":"672","severity":1,"message":"720","line":50,"column":12,"nodeType":"674","messageId":"675","endLine":50,"endColumn":16},{"ruleId":"677","severity":1,"message":"721","line":57,"column":5,"nodeType":"674","endLine":57,"endColumn":14,"suggestions":"751"},{"ruleId":"677","severity":1,"message":"752","line":91,"column":36,"nodeType":"674","endLine":91,"endColumn":47},{"ruleId":"672","severity":1,"message":"753","line":109,"column":19,"nodeType":"674","messageId":"675","endLine":109,"endColumn":23},{"ruleId":"672","severity":1,"message":"754","line":15,"column":28,"nodeType":"674","messageId":"675","endLine":15,"endColumn":42},{"ruleId":"672","severity":1,"message":"755","line":27,"column":11,"nodeType":"674","messageId":"675","endLine":27,"endColumn":18},{"ruleId":"672","severity":1,"message":"711","line":1,"column":36,"nodeType":"674","messageId":"675","endLine":1,"endColumn":40},{"ruleId":"682","replacedBy":"756"},{"ruleId":"684","replacedBy":"757"},{"ruleId":"672","severity":1,"message":"758","line":3,"column":7,"nodeType":"674","messageId":"675","endLine":3,"endColumn":17},{"ruleId":"672","severity":1,"message":"759","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":32},{"ruleId":"672","severity":1,"message":"760","line":41,"column":20,"nodeType":"674","messageId":"675","endLine":41,"endColumn":41},{"ruleId":"682","replacedBy":"761"},{"ruleId":"684","replacedBy":"762"},{"ruleId":"672","severity":1,"message":"763","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":25},{"ruleId":"672","severity":1,"message":"714","line":12,"column":10,"nodeType":"674","messageId":"675","endLine":12,"endColumn":20},{"ruleId":"672","severity":1,"message":"715","line":39,"column":15,"nodeType":"674","messageId":"675","endLine":39,"endColumn":20},{"ruleId":"672","severity":1,"message":"716","line":44,"column":11,"nodeType":"674","messageId":"675","endLine":44,"endColumn":27},{"ruleId":"672","severity":1,"message":"760","line":26,"column":20,"nodeType":"674","messageId":"675","endLine":26,"endColumn":41},{"ruleId":"672","severity":1,"message":"764","line":27,"column":8,"nodeType":"674","messageId":"675","endLine":27,"endColumn":13},{"ruleId":"672","severity":1,"message":"765","line":28,"column":8,"nodeType":"674","messageId":"675","endLine":28,"endColumn":12},{"ruleId":"682","replacedBy":"766"},{"ruleId":"684","replacedBy":"767"},{"ruleId":"672","severity":1,"message":"696","line":2,"column":8,"nodeType":"674","messageId":"675","endLine":2,"endColumn":17},{"ruleId":"672","severity":1,"message":"735","line":6,"column":8,"nodeType":"674","messageId":"675","endLine":6,"endColumn":25},{"ruleId":"672","severity":1,"message":"707","line":14,"column":29,"nodeType":"674","messageId":"675","endLine":14,"endColumn":52},{"ruleId":"672","severity":1,"message":"768","line":19,"column":7,"nodeType":"674","messageId":"675","endLine":19,"endColumn":20},{"ruleId":"672","severity":1,"message":"769","line":44,"column":11,"nodeType":"674","messageId":"675","endLine":44,"endColumn":22},{"ruleId":"677","severity":1,"message":"770","line":73,"column":8,"nodeType":"679","endLine":73,"endColumn":34,"suggestions":"771"},{"ruleId":"772","severity":1,"message":"773","line":269,"column":17,"nodeType":"774","messageId":"775","endLine":269,"endColumn":23},{"ruleId":"672","severity":1,"message":"776","line":1,"column":17,"nodeType":"674","messageId":"675","endLine":1,"endColumn":26},{"ruleId":"672","severity":1,"message":"744","line":2,"column":25,"nodeType":"674","messageId":"675","endLine":2,"endColumn":33},{"ruleId":"672","severity":1,"message":"777","line":10,"column":10,"nodeType":"674","messageId":"675","endLine":10,"endColumn":21},{"ruleId":"672","severity":1,"message":"731","line":10,"column":23,"nodeType":"674","messageId":"675","endLine":10,"endColumn":34},{"ruleId":"672","severity":1,"message":"732","line":11,"column":10,"nodeType":"674","messageId":"675","endLine":11,"endColumn":19},{"ruleId":"672","severity":1,"message":"699","line":12,"column":10,"nodeType":"674","messageId":"675","endLine":12,"endColumn":21},{"ruleId":"672","severity":1,"message":"778","line":13,"column":10,"nodeType":"674","messageId":"675","endLine":13,"endColumn":22},{"ruleId":"682","replacedBy":"779"},{"ruleId":"684","replacedBy":"780"},{"ruleId":"672","severity":1,"message":"741","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":22},{"ruleId":"672","severity":1,"message":"739","line":2,"column":24,"nodeType":"674","messageId":"675","endLine":2,"endColumn":34},{"ruleId":"672","severity":1,"message":"740","line":2,"column":36,"nodeType":"674","messageId":"675","endLine":2,"endColumn":41},{"ruleId":"672","severity":1,"message":"781","line":6,"column":8,"nodeType":"674","messageId":"675","endLine":6,"endColumn":28},{"ruleId":"672","severity":1,"message":"782","line":31,"column":6,"nodeType":"674","messageId":"675","endLine":31,"endColumn":26},{"ruleId":"672","severity":1,"message":"783","line":37,"column":11,"nodeType":"674","messageId":"675","endLine":37,"endColumn":25},{"ruleId":"672","severity":1,"message":"784","line":1,"column":10,"nodeType":"674","messageId":"675","endLine":1,"endColumn":20},{"ruleId":"672","severity":1,"message":"763","line":1,"column":22,"nodeType":"674","messageId":"675","endLine":1,"endColumn":37},{"ruleId":"672","severity":1,"message":"785","line":1,"column":39,"nodeType":"674","messageId":"675","endLine":1,"endColumn":61},{"ruleId":"672","severity":1,"message":"707","line":1,"column":63,"nodeType":"674","messageId":"675","endLine":1,"endColumn":86},{"ruleId":"672","severity":1,"message":"778","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":22},{"ruleId":"672","severity":1,"message":"786","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":22},{"ruleId":"672","severity":1,"message":"787","line":6,"column":17,"nodeType":"674","messageId":"675","endLine":6,"endColumn":35},{"ruleId":"672","severity":1,"message":"788","line":6,"column":37,"nodeType":"674","messageId":"675","endLine":6,"endColumn":50},{"ruleId":"672","severity":1,"message":"694","line":1,"column":17,"nodeType":"674","messageId":"675","endLine":1,"endColumn":25},{"ruleId":"672","severity":1,"message":"789","line":2,"column":8,"nodeType":"674","messageId":"675","endLine":2,"endColumn":14},{"ruleId":"672","severity":1,"message":"699","line":11,"column":10,"nodeType":"674","messageId":"675","endLine":11,"endColumn":21},{"ruleId":"672","severity":1,"message":"790","line":12,"column":10,"nodeType":"674","messageId":"675","endLine":12,"endColumn":25},{"ruleId":"672","severity":1,"message":"755","line":24,"column":11,"nodeType":"674","messageId":"675","endLine":24,"endColumn":18},{"ruleId":"677","severity":1,"message":"703","line":35,"column":8,"nodeType":"679","endLine":35,"endColumn":33,"suggestions":"791"},{"ruleId":"672","severity":1,"message":"763","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":25},{"ruleId":"672","severity":1,"message":"785","line":3,"column":27,"nodeType":"674","messageId":"675","endLine":3,"endColumn":49},{"ruleId":"672","severity":1,"message":"792","line":3,"column":51,"nodeType":"674","messageId":"675","endLine":3,"endColumn":71},{"ruleId":"672","severity":1,"message":"793","line":3,"column":115,"nodeType":"674","messageId":"675","endLine":3,"endColumn":125},{"ruleId":"672","severity":1,"message":"794","line":3,"column":171,"nodeType":"674","messageId":"675","endLine":3,"endColumn":185},{"ruleId":"672","severity":1,"message":"795","line":4,"column":8,"nodeType":"674","messageId":"675","endLine":4,"endColumn":16},{"ruleId":"672","severity":1,"message":"796","line":5,"column":10,"nodeType":"674","messageId":"675","endLine":5,"endColumn":23},{"ruleId":"677","severity":1,"message":"797","line":52,"column":8,"nodeType":"679","endLine":52,"endColumn":30,"suggestions":"798"},{"ruleId":"677","severity":1,"message":"752","line":73,"column":36,"nodeType":"674","endLine":73,"endColumn":47},{"ruleId":"672","severity":1,"message":"799","line":34,"column":20,"nodeType":"674","messageId":"675","endLine":34,"endColumn":26},{"ruleId":"677","severity":1,"message":"800","line":45,"column":8,"nodeType":"679","endLine":45,"endColumn":10,"suggestions":"801"},{"ruleId":"677","severity":1,"message":"802","line":50,"column":8,"nodeType":"679","endLine":50,"endColumn":44,"suggestions":"803"},{"ruleId":"677","severity":1,"message":"804","line":54,"column":8,"nodeType":"679","endLine":54,"endColumn":15,"suggestions":"805"},{"ruleId":"677","severity":1,"message":"752","line":56,"column":36,"nodeType":"674","endLine":56,"endColumn":47},{"ruleId":"672","severity":1,"message":"673","line":7,"column":10,"nodeType":"674","messageId":"675","endLine":7,"endColumn":20},{"ruleId":"672","severity":1,"message":"725","line":10,"column":8,"nodeType":"674","messageId":"675","endLine":10,"endColumn":12},{"ruleId":"672","severity":1,"message":"806","line":21,"column":19,"nodeType":"674","messageId":"675","endLine":21,"endColumn":27},{"ruleId":"672","severity":1,"message":"807","line":27,"column":11,"nodeType":"674","messageId":"675","endLine":27,"endColumn":24},{"ruleId":"672","severity":1,"message":"808","line":30,"column":11,"nodeType":"674","messageId":"675","endLine":30,"endColumn":31},{"ruleId":"672","severity":1,"message":"809","line":32,"column":11,"nodeType":"674","messageId":"675","endLine":32,"endColumn":31},{"ruleId":"672","severity":1,"message":"810","line":34,"column":11,"nodeType":"674","messageId":"675","endLine":34,"endColumn":18},{"ruleId":"672","severity":1,"message":"676","line":36,"column":13,"nodeType":"674","messageId":"675","endLine":36,"endColumn":14},{"ruleId":"672","severity":1,"message":"811","line":68,"column":15,"nodeType":"674","messageId":"675","endLine":68,"endColumn":20},{"ruleId":"672","severity":1,"message":"695","line":9,"column":8,"nodeType":"674","messageId":"675","endLine":9,"endColumn":19},{"ruleId":"672","severity":1,"message":"812","line":3,"column":8,"nodeType":"674","messageId":"675","endLine":3,"endColumn":18},{"ruleId":"672","severity":1,"message":"813","line":1,"column":57,"nodeType":"674","messageId":"675","endLine":1,"endColumn":66},{"ruleId":"672","severity":1,"message":"729","line":1,"column":68,"nodeType":"674","messageId":"675","endLine":1,"endColumn":74},{"ruleId":"672","severity":1,"message":"814","line":1,"column":76,"nodeType":"674","messageId":"675","endLine":1,"endColumn":83},{"ruleId":"672","severity":1,"message":"815","line":1,"column":85,"nodeType":"674","messageId":"675","endLine":1,"endColumn":92},{"ruleId":"672","severity":1,"message":"816","line":3,"column":10,"nodeType":"674","messageId":"675","endLine":3,"endColumn":20},{"ruleId":"672","severity":1,"message":"735","line":6,"column":8,"nodeType":"674","messageId":"675","endLine":6,"endColumn":25},{"ruleId":"672","severity":1,"message":"817","line":16,"column":10,"nodeType":"674","messageId":"675","endLine":16,"endColumn":21},{"ruleId":"672","severity":1,"message":"764","line":18,"column":8,"nodeType":"674","messageId":"675","endLine":18,"endColumn":13},{"ruleId":"677","severity":1,"message":"818","line":53,"column":6,"nodeType":"679","endLine":53,"endColumn":31,"suggestions":"819"},{"ruleId":"672","severity":1,"message":"820","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":27},{"ruleId":"672","severity":1,"message":"821","line":67,"column":13,"nodeType":"674","messageId":"675","endLine":67,"endColumn":15},{"ruleId":"672","severity":1,"message":"822","line":5,"column":28,"nodeType":"674","messageId":"675","endLine":5,"endColumn":32},{"ruleId":"672","severity":1,"message":"714","line":13,"column":10,"nodeType":"674","messageId":"675","endLine":13,"endColumn":20},{"ruleId":"677","severity":1,"message":"823","line":40,"column":8,"nodeType":"679","endLine":40,"endColumn":41,"suggestions":"824"},{"ruleId":"672","severity":1,"message":"825","line":3,"column":38,"nodeType":"674","messageId":"675","endLine":3,"endColumn":47},{"ruleId":"672","severity":1,"message":"676","line":23,"column":13,"nodeType":"674","messageId":"675","endLine":23,"endColumn":14},{"ruleId":"672","severity":1,"message":"826","line":2,"column":8,"nodeType":"674","messageId":"675","endLine":2,"endColumn":14},{"ruleId":"672","severity":1,"message":"827","line":6,"column":10,"nodeType":"674","messageId":"675","endLine":6,"endColumn":17},{"ruleId":"672","severity":1,"message":"828","line":13,"column":10,"nodeType":"674","messageId":"675","endLine":13,"endColumn":30},{"ruleId":"672","severity":1,"message":"829","line":14,"column":10,"nodeType":"674","messageId":"675","endLine":14,"endColumn":20},{"ruleId":"672","severity":1,"message":"830","line":15,"column":10,"nodeType":"674","messageId":"675","endLine":15,"endColumn":16},{"ruleId":"677","severity":1,"message":"831","line":50,"column":8,"nodeType":"679","endLine":50,"endColumn":10,"suggestions":"832"},{"ruleId":"677","severity":1,"message":"833","line":78,"column":8,"nodeType":"679","endLine":78,"endColumn":24,"suggestions":"834"},{"ruleId":"677","severity":1,"message":"835","line":78,"column":9,"nodeType":"836","endLine":78,"endColumn":23},{"ruleId":"672","severity":1,"message":"676","line":41,"column":13,"nodeType":"674","messageId":"675","endLine":41,"endColumn":14},{"ruleId":"677","severity":1,"message":"837","line":81,"column":8,"nodeType":"679","endLine":81,"endColumn":24,"suggestions":"838"},{"ruleId":"672","severity":1,"message":"676","line":18,"column":13,"nodeType":"674","messageId":"675","endLine":18,"endColumn":14},{"ruleId":"672","severity":1,"message":"694","line":1,"column":17,"nodeType":"674","messageId":"675","endLine":1,"endColumn":25},{"ruleId":"672","severity":1,"message":"839","line":23,"column":11,"nodeType":"674","messageId":"675","endLine":23,"endColumn":22},{"ruleId":"672","severity":1,"message":"676","line":24,"column":13,"nodeType":"674","messageId":"675","endLine":24,"endColumn":14},{"ruleId":"672","severity":1,"message":"840","line":26,"column":11,"nodeType":"674","messageId":"675","endLine":26,"endColumn":22},{"ruleId":"672","severity":1,"message":"795","line":2,"column":8,"nodeType":"674","messageId":"675","endLine":2,"endColumn":16},{"ruleId":"677","severity":1,"message":"841","line":22,"column":8,"nodeType":"679","endLine":22,"endColumn":10,"suggestions":"842"},{"ruleId":"672","severity":1,"message":"688","line":1,"column":49,"nodeType":"674","messageId":"675","endLine":1,"endColumn":64},{"ruleId":"672","severity":1,"message":"689","line":5,"column":10,"nodeType":"674","messageId":"675","endLine":5,"endColumn":31},{"ruleId":"672","severity":1,"message":"690","line":28,"column":5,"nodeType":"674","messageId":"675","endLine":28,"endColumn":21},{"ruleId":"672","severity":1,"message":"820","line":31,"column":10,"nodeType":"674","messageId":"675","endLine":31,"endColumn":27},{"ruleId":"672","severity":1,"message":"691","line":31,"column":29,"nodeType":"674","messageId":"675","endLine":31,"endColumn":48},{"ruleId":"672","severity":1,"message":"843","line":35,"column":10,"nodeType":"674","messageId":"675","endLine":35,"endColumn":16},{"ruleId":"672","severity":1,"message":"778","line":2,"column":10,"nodeType":"674","messageId":"675","endLine":2,"endColumn":22},{"ruleId":"672","severity":1,"message":"768","line":22,"column":7,"nodeType":"674","messageId":"675","endLine":22,"endColumn":20},{"ruleId":"677","severity":1,"message":"844","line":55,"column":8,"nodeType":"679","endLine":55,"endColumn":10,"suggestions":"845"},{"ruleId":"672","severity":1,"message":"846","line":133,"column":11,"nodeType":"674","messageId":"675","endLine":133,"endColumn":30},{"ruleId":"847","severity":1,"message":"848","line":38,"column":90,"nodeType":"710","endLine":38,"endColumn":149},{"ruleId":"672","severity":1,"message":"849","line":12,"column":10,"nodeType":"674","messageId":"675","endLine":12,"endColumn":20},{"ruleId":"672","severity":1,"message":"839","line":25,"column":11,"nodeType":"674","messageId":"675","endLine":25,"endColumn":22},{"ruleId":"672","severity":1,"message":"850","line":26,"column":11,"nodeType":"674","messageId":"675","endLine":26,"endColumn":16},{"ruleId":"672","severity":1,"message":"851","line":27,"column":11,"nodeType":"674","messageId":"675","endLine":27,"endColumn":21},{"ruleId":"672","severity":1,"message":"807","line":28,"column":11,"nodeType":"674","messageId":"675","endLine":28,"endColumn":24},{"ruleId":"672","severity":1,"message":"852","line":72,"column":19,"nodeType":"674","messageId":"675","endLine":72,"endColumn":23},{"ruleId":"672","severity":1,"message":"776","line":1,"column":17,"nodeType":"674","messageId":"675","endLine":1,"endColumn":26},{"ruleId":"672","severity":1,"message":"694","line":1,"column":28,"nodeType":"674","messageId":"675","endLine":1,"endColumn":36},{"ruleId":"672","severity":1,"message":"707","line":3,"column":34,"nodeType":"674","messageId":"675","endLine":3,"endColumn":57},{"ruleId":"672","severity":1,"message":"853","line":4,"column":10,"nodeType":"674","messageId":"675","endLine":4,"endColumn":25},{"ruleId":"672","severity":1,"message":"854","line":4,"column":27,"nodeType":"674","messageId":"675","endLine":4,"endColumn":36},{"ruleId":"677","severity":1,"message":"855","line":32,"column":8,"nodeType":"679","endLine":32,"endColumn":52,"suggestions":"856"},{"ruleId":"677","severity":1,"message":"835","line":32,"column":9,"nodeType":"857","endLine":32,"endColumn":51},{"ruleId":"858","severity":1,"message":"859","line":60,"column":184,"nodeType":"860","messageId":"861","endLine":60,"endColumn":238,"fix":"862"},{"ruleId":"858","severity":1,"message":"859","line":61,"column":184,"nodeType":"860","messageId":"861","endLine":61,"endColumn":238,"fix":"863"},{"ruleId":"858","severity":1,"message":"864","line":65,"column":55,"nodeType":"860","messageId":"861","endLine":65,"endColumn":118,"fix":"865"},{"ruleId":"858","severity":1,"message":"864","line":66,"column":55,"nodeType":"860","messageId":"861","endLine":66,"endColumn":118,"fix":"866"},{"ruleId":"672","severity":1,"message":"707","line":5,"column":10,"nodeType":"674","messageId":"675","endLine":5,"endColumn":33},{"ruleId":"672","severity":1,"message":"867","line":2,"column":55,"nodeType":"674","messageId":"675","endLine":2,"endColumn":72},{"ruleId":"672","severity":1,"message":"868","line":3,"column":17,"nodeType":"674","messageId":"675","endLine":3,"endColumn":26},"@typescript-eslint/no-unused-vars","'resetGames' is defined but never used.","Identifier","unusedVar","'t' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'byePlayerNumber', 'insertByePlayers', and 'numberOfPlayers'. Either include them or remove the dependency array.","ArrayExpression",["869"],"'roundNumberDenominator' is assigned a value but never used.","no-native-reassign",["870"],"no-negated-in-lhs",["871"],"React Hook useEffect has a missing dependency: 'entityState.eliminationGames'. Either include it or remove the dependency array.",["872"],"'PayloadedAction' is defined but never used.","'ForgotPasswordReqData' is defined but never used.","'UserActionParams' is defined but never used.","'UserRegisterResData' is defined but never used.",["870"],["871"],"'useState' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'ErrorMessage' is defined but never used.","'Formik' is defined but never used.","'authActions' is defined but never used.","'appName' is defined but never used.","'FormikValues' is defined but never used.","'IError' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["873"],["870"],["871"],"'StateEliminationPlayers' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'fade' is defined but never used.","'drawerWidth' is assigned a value but never used.","'FC' is defined but never used.","'useHistory' is defined but never used.","'timer' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.",["870"],["871"],"'FacebookIcon' is defined but never used.","'path' is assigned a value but never used.","React Hook useEffect contains a call to 'setPath'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [history.location.pathname] as a second argument to the useEffect Hook.",["874"],"'Paper' is defined but never used.","'EliminationForm' is defined but never used.","'clsx' is defined but never used.","'Whatshot' is defined but never used.","'StarsIcon' is defined but never used.","'CompareArrowsIcon' is defined but never used.","'Action' is defined but never used.","'StateTournament' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'setSubmitting' is assigned a value but never used.","'actionCreator' is defined but never used.","'DialogContentText' is defined but never used.","React Hook useEffect has a missing dependency: 'userState.delete.error'. Either include it or remove the dependency array.",["875"],"'React' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'ReactElement' is defined but never used.","'BrowserRouter' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'throttle' is defined but never used.",["876"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'Icon' is assigned a value but never used.","'RoundRobinIcon' is defined but never used.","'history' is assigned a value but never used.",["870"],["871"],"'loginCheck' is assigned a value but never used.","'UserGoogleLoginReqData' is defined but never used.","'DispatchWithoutAction' is defined but never used.",["870"],["871"],"'EntityStateData' is defined but never used.","'toast' is defined but never used.","'i18n' is defined but never used.",["870"],["871"],"'initialPlayer' is assigned a value but never used.","'mainClasses' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'participants.length'. Either include it or remove the dependency array.",["877"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'ActionStatus' is defined but never used.",["870"],["871"],"'languageSelectStyles' is defined but never used.","'SubheaderStateValues' is defined but never used.","'SubheaderState' is defined but never used.","'EntityById' is defined but never used.","'StateEliminationPlayer' is defined but never used.","'arrayGroupBy' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'AxiosResponse' is defined but never used.","'Button' is defined but never used.","'registerActions' is defined but never used.",["878"],"'StateEliminationGame' is defined but never used.","'StateGames' is defined but never used.","'StateLMSPlayer' is defined but never used.","'AppState' is defined but never used.","'UserStateData' is defined but never used.","React Hook useEffect has missing dependencies: 'formValues' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["879"],"'height' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'submitInitialGamesToStore'. Either include it or remove the dependency array.",["880"],"React Hook useEffect has a missing dependency: 'getPlayersDataWithStats'. Either include it or remove the dependency array.",["881"],"React Hook useEffect has a missing dependency: 'delayedUpdateMaxScores'. Either include it or remove the dependency array.",["882"],"'setGames' is assigned a value but never used.","'settingsState' is assigned a value but never used.","'scoreToggleButtonRef' is assigned a value but never used.","'firstRoundGameNumber' is assigned a value but never used.","'columns' is assigned a value but never used.","'round' is assigned a value but never used.","'IconButton' is defined but never used.","'AnyAction' is defined but never used.","'Reducer' is defined but never used.","'compose' is defined but never used.","'ErrorNames' is defined but never used.","'useSnackbar' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userState.delete.status'. Either include them or remove the dependency array.",["883"],"'UserDeleteReqData' is defined but never used.","'id' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["884"],"'Draggable' is defined but never used.","'Dialog' is defined but never used.","'connect' is defined but never used.","'EntitiesReducerState' is defined but never used.","'withStyles' is defined but never used.","'Styles' is defined but never used.","React Hook useEffect has missing dependencies: 'gameKey', 'handleKeyDown', and 'sets'. Either include them or remove the dependency array.",["885"],"React Hook useEffect has missing dependencies: 'gameKey', 'games', and 'numberOfGames'. Either include them or remove the dependency array.",["886"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","React Hook useEffect has missing dependencies: 'lastVisibleScore', 'numberOfGoals', and 'visibleScores'. Either include them or remove the dependency array. If 'setInitiallyLastVisibleScore' needs the current value of 'visibleScores', you can also switch to useReducer instead of useState and read 'visibleScores' in the reducer.",["887"],"'entityState' is assigned a value but never used.","'handleClose' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authState.status' and 'dispatch'. Either include them or remove the dependency array.",["888"],"'logout' is defined but never used.","React Hook useEffect has a missing dependency: 'getInitialTeams'. Either include it or remove the dependency array.",["889"],"'insterIntoEmptySpot' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Typography' is defined but never used.","'games' is assigned a value but never used.","'lmsPlayers' is assigned a value but never used.","'name' is assigned a value but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","React Hook useEffect has missing dependencies: 'gamesState' and 'props.gameKey'. Either include them or remove the dependency array. If 'setGame' needs the current value of 'props.gameKey', you can also switch to useReducer instead of useState and read 'props.gameKey' in the reducer.",["890"],"LogicalExpression","no-useless-computed-key","Unnecessarily computed property ['final'] found.","Property","unnecessarilyComputedProperty",{"range":"891","text":"892"},{"range":"893","text":"892"},"Unnecessarily computed property ['thirdPlace'] found.",{"range":"894","text":"895"},{"range":"896","text":"895"},"'WithSnackbarProps' is defined but never used.","'Component' is defined but never used.",{"desc":"897","fix":"898"},"no-global-assign","no-unsafe-negation",{"desc":"899","fix":"900"},{"desc":"901","fix":"902"},{"desc":"903","fix":"904"},{"desc":"905","fix":"906"},{"desc":"903","fix":"907"},{"desc":"908","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},{"desc":"920","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},{"desc":"928","fix":"929"},{"desc":"930","fix":"931"},{"desc":"932","fix":"933"},{"desc":"934","fix":"935"},[3673,3682],"'final'",[3918,3927],[4185,4199],"'thirdPlace'",[4310,4324],"Update the dependencies array to be: [byePlayerNumber, entityState.eliminationPlayers, insertByePlayers, numberOfPlayers]",{"range":"936","text":"937"},"Update the dependencies array to be: [entityState.eliminationGames]",{"range":"938","text":"939"},"Update the dependencies array to be: [dispatch, registerState.verifyEmail.status, token]",{"range":"940","text":"941"},"Add dependencies array: [history.location.pathname]",{"range":"942","text":"943"},"Update the dependencies array to be: [userState.delete.error, userState.delete.status]",{"range":"944","text":"945"},{"range":"946","text":"943"},"Update the dependencies array to be: [entityState.participants, participants.length]",{"range":"947","text":"948"},"Update the dependencies array to be: [dispatch, token, userState.delete.status]",{"range":"949","text":"950"},"Update the dependencies array to be: [formValues, props, registerState.status]",{"range":"951","text":"952"},"Update the dependencies array to be: [submitInitialGamesToStore]",{"range":"953","text":"954"},"Update the dependencies array to be: [storeGames, entityState.tournament, getPlayersDataWithStats]",{"range":"955","text":"956"},"Update the dependencies array to be: [delayedUpdateMaxScores, width]",{"range":"957","text":"958"},"Update the dependencies array to be: [history, userState.delete.status, userState.update.status]",{"range":"959","text":"960"},"Update the dependencies array to be: [authState.forgotPassword.status, props]",{"range":"961","text":"962"},"Update the dependencies array to be: [gameKey, handleKeyDown, sets]",{"range":"963","text":"964"},"Update the dependencies array to be: [gameKey, games, numberOfGames]",{"range":"965","text":"966"},"Update the dependencies array to be: [lastVisibleScore, numberOfGoals, selectedNumber, visibleScores]",{"range":"967","text":"968"},"Update the dependencies array to be: [authState.status, dispatch]",{"range":"969","text":"970"},"Update the dependencies array to be: [getInitialTeams]",{"range":"971","text":"972"},"Update the dependencies array to be: [gamesState, props.gameKey]",{"range":"973","text":"974"},[2123,2155],"[byePlayerNumber, entityState.eliminationPlayers, insertByePlayers, numberOfPlayers]",[1195,1197],"[entityState.eliminationGames]",[1909,1943],"[dispatch, registerState.verifyEmail.status, token]",[865,865],", [history.location.pathname]",[1122,1147],"[userState.delete.error, userState.delete.status]",[2691,2691],[3396,3422],"[entityState.participants, participants.length]",[1545,1570],"[dispatch, token, userState.delete.status]",[2294,2316],"[formValues, props, registerState.status]",[1992,1994],"[submitInitialGamesToStore]",[2120,2156],"[storeGames, entityState.tournament, getPlayersDataWithStats]",[2240,2247],"[delayedUpdateMaxScores, width]",[2068,2093],"[history, userState.delete.status, userState.update.status]",[1477,1510],"[authState.forgotPassword.status, props]",[2339,2341],"[gameKey, handleKeyDown, sets]",[3378,3394],"[gameKey, games, numberOfGames]",[3255,3271],"[lastVisibleScore, numberOfGoals, selectedNumber, visibleScores]",[723,725],"[authState.status, dispatch]",[2337,2339],"[getInitialTeams]",[1557,1601],"[gamesState, props.gameKey]"]