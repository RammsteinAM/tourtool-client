[{"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\reportWebVitals.ts":"1","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\helpers.ts":"2","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\Login.tsx":"3","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\user.ts":"4","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\actions.ts":"5","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\error.ts":"6","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\store.ts":"7","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\types.ts":"8","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\loginStyles.ts":"9","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\index.tsx":"10","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\main.ts":"11","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\reducer.ts":"12","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\FacebookButton.tsx":"13","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\facebookButtonStyles.ts":"14","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleLogo.tsx":"15","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\googleButtonStyles.ts":"16","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleButton.tsx":"17","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\i18n.ts":"18","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\languageSelectStyles.ts":"19","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\index.tsx":"20","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\localization.ts":"21","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PrivateRoute.tsx":"22","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\config.ts":"23","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\index.tsx":"24","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\loginDialogStyles.ts":"25","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\index.tsx":"26","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\layoutStyles.ts":"27","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PublicRoute.tsx":"28","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\registerStyles.ts":"29","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\Register.tsx":"30","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\App.tsx":"31","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Settings\\Settings.tsx":"32","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\mainStyles.ts":"33","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\types.ts":"34","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\reducer.ts":"35","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\actions.ts":"36","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\passwordResetStyles.ts":"37","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\PasswordResetForm.tsx":"38","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordReset.tsx":"39","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\RegisterSuccess.tsx":"40","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\EmailVerificationResult.tsx":"41","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\types.ts":"42","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\reducer.ts":"43","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\asyncWrapper.ts":"44","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\IndependentSnackbar\\index.tsx":"45","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\theme.ts":"46","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\Profile.tsx":"47","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\profileStyles.ts":"48","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordResetSuccess.tsx":"49","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\index.tsx":"50","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\homeStyles.ts":"51","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\authUtils.ts":"52","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\error.ts":"53","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\actions.ts":"54","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Main.tsx":"55","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\constants.ts":"56","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentTypeSelect.tsx":"57","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\tournamentStyles.ts":"58","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\headerStyles.ts":"59","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\index.tsx":"60","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderHome.tsx":"61","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentForm.tsx":"62","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderTournamentForm.tsx":"63","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\styles.ts":"64","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerTypeSelect.tsx":"65","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerForm.tsx":"66","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\styleUtils.ts":"67","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderGeneric.tsx":"68","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\FormSubheader.tsx":"69","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\types.ts":"70","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\reducer.ts":"71","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\actions.ts":"72","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\arrayUtils.ts":"73","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\Elimination.tsx":"74","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerFormTextField.tsx":"75","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\EliminationSidebar.tsx":"76","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\EliminationSidebarItem.tsx":"77"},{"size":425,"mtime":1609635969166,"results":"78","hashOfConfig":"79"},{"size":1226,"mtime":1612764630390,"results":"80","hashOfConfig":"79"},{"size":8198,"mtime":1612122176303,"results":"81","hashOfConfig":"79"},{"size":4627,"mtime":1612120241591,"results":"82","hashOfConfig":"79"},{"size":7296,"mtime":1612527457458,"results":"83","hashOfConfig":"79"},{"size":243,"mtime":1611751297698,"results":"84","hashOfConfig":"79"},{"size":806,"mtime":1612527864490,"results":"85","hashOfConfig":"79"},{"size":3764,"mtime":1611748658223,"results":"86","hashOfConfig":"79"},{"size":837,"mtime":1611571052470,"results":"87","hashOfConfig":"79"},{"size":1018,"mtime":1612139074895,"results":"88","hashOfConfig":"79"},{"size":370,"mtime":1611750698023,"results":"89","hashOfConfig":"79"},{"size":3477,"mtime":1612527457458,"results":"90","hashOfConfig":"79"},{"size":594,"mtime":1610619559220,"results":"91","hashOfConfig":"79"},{"size":549,"mtime":1611146916965,"results":"92","hashOfConfig":"79"},{"size":1386,"mtime":1610694471474,"results":"93","hashOfConfig":"79"},{"size":544,"mtime":1611146916965,"results":"94","hashOfConfig":"79"},{"size":711,"mtime":1610694471474,"results":"95","hashOfConfig":"79"},{"size":1004,"mtime":1612264845546,"results":"96","hashOfConfig":"79"},{"size":322,"mtime":1610633123636,"results":"97","hashOfConfig":"79"},{"size":1660,"mtime":1612126195537,"results":"98","hashOfConfig":"79"},{"size":24373,"mtime":1613028464633,"results":"99","hashOfConfig":"79"},{"size":729,"mtime":1611054759451,"results":"100","hashOfConfig":"79"},{"size":51,"mtime":1610346617372,"results":"101","hashOfConfig":"79"},{"size":4621,"mtime":1612164930922,"results":"102","hashOfConfig":"79"},{"size":1000,"mtime":1612164946847,"results":"103","hashOfConfig":"79"},{"size":7406,"mtime":1612854288942,"results":"104","hashOfConfig":"79"},{"size":2680,"mtime":1612852814011,"results":"105","hashOfConfig":"79"},{"size":722,"mtime":1612260090406,"results":"106","hashOfConfig":"79"},{"size":1109,"mtime":1611836196552,"results":"107","hashOfConfig":"79"},{"size":7311,"mtime":1612163405292,"results":"108","hashOfConfig":"79"},{"size":2835,"mtime":1612773514885,"results":"109","hashOfConfig":"79"},{"size":231,"mtime":1611642817858,"results":"110","hashOfConfig":"79"},{"size":1479,"mtime":1611574474665,"results":"111","hashOfConfig":"79"},{"size":2990,"mtime":1611748471617,"results":"112","hashOfConfig":"79"},{"size":3143,"mtime":1611565848868,"results":"113","hashOfConfig":"79"},{"size":3775,"mtime":1611750921362,"results":"114","hashOfConfig":"79"},{"size":1799,"mtime":1611836357722,"results":"115","hashOfConfig":"79"},{"size":9860,"mtime":1612690736459,"results":"116","hashOfConfig":"79"},{"size":4591,"mtime":1611755383379,"results":"117","hashOfConfig":"79"},{"size":3394,"mtime":1612122003482,"results":"118","hashOfConfig":"79"},{"size":5225,"mtime":1611836196552,"results":"119","hashOfConfig":"79"},{"size":1384,"mtime":1612444222111,"results":"120","hashOfConfig":"79"},{"size":1056,"mtime":1612527786168,"results":"121","hashOfConfig":"79"},{"size":667,"mtime":1612121434590,"results":"122","hashOfConfig":"79"},{"size":879,"mtime":1612425850323,"results":"123","hashOfConfig":"79"},{"size":495,"mtime":1611155648035,"results":"124","hashOfConfig":"79"},{"size":7423,"mtime":1612527355789,"results":"125","hashOfConfig":"79"},{"size":1116,"mtime":1611836357722,"results":"126","hashOfConfig":"79"},{"size":1725,"mtime":1611676586630,"results":"127","hashOfConfig":"79"},{"size":1660,"mtime":1612136995053,"results":"128","hashOfConfig":"79"},{"size":1308,"mtime":1612131059292,"results":"129","hashOfConfig":"79"},{"size":325,"mtime":1611755651076,"results":"130","hashOfConfig":"79"},{"size":711,"mtime":1611754576523,"results":"131","hashOfConfig":"79"},{"size":1794,"mtime":1612527457458,"results":"132","hashOfConfig":"79"},{"size":1737,"mtime":1612852652595,"results":"133","hashOfConfig":"79"},{"size":152,"mtime":1612352215930,"results":"134","hashOfConfig":"79"},{"size":3809,"mtime":1612353994339,"results":"135","hashOfConfig":"79"},{"size":10746,"mtime":1613056694605,"results":"136","hashOfConfig":"79"},{"size":2007,"mtime":1612865140931,"results":"137","hashOfConfig":"79"},{"size":3545,"mtime":1612854375555,"results":"138","hashOfConfig":"79"},{"size":2315,"mtime":1612192837236,"results":"139","hashOfConfig":"79"},{"size":8585,"mtime":1612425383346,"results":"140","hashOfConfig":"79"},{"size":2241,"mtime":1612359524956,"results":"141","hashOfConfig":"79"},{"size":3240,"mtime":1612350812022,"results":"142","hashOfConfig":"79"},{"size":3612,"mtime":1612767518123,"results":"143","hashOfConfig":"79"},{"size":14123,"mtime":1613052158106,"results":"144","hashOfConfig":"79"},{"size":498,"mtime":1612421595520,"results":"145","hashOfConfig":"79"},{"size":3122,"mtime":1612765148848,"results":"146","hashOfConfig":"79"},{"size":1717,"mtime":1612425383346,"results":"147","hashOfConfig":"79"},{"size":1305,"mtime":1612527301596,"results":"148","hashOfConfig":"79"},{"size":1473,"mtime":1612764893748,"results":"149","hashOfConfig":"79"},{"size":1863,"mtime":1612510761212,"results":"150","hashOfConfig":"79"},{"size":423,"mtime":1612764220147,"results":"151","hashOfConfig":"79"},{"size":7653,"mtime":1613114680811,"results":"152","hashOfConfig":"79"},{"size":3725,"mtime":1613052475974,"results":"153","hashOfConfig":"79"},{"size":3199,"mtime":1613112569715,"results":"154","hashOfConfig":"79"},{"size":2076,"mtime":1613112392409,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"x7fxt9",{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"198"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"173"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"216"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"170"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"173"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"170"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"198"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"265"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"198"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"170"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\reportWebVitals.ts",[],["339","340"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\helpers.ts",["341"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\Login.tsx",["342","343","344"],"import React, { useEffect, useState, FC } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress, Link } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport loginStyles from './loginStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\nimport FacebookButton from '../../components/Buttons/FacebookLogin/FacebookButton';\r\nimport GoogleButton from '../../components/Buttons/GoogleLogin/GoogleButton';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { appName } from '../../utils/constants';\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport toast from '../../components/IndependentSnackbar';\r\n\r\ninterface FormikValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface IError {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\ninterface Props {\r\n    resetPasswordCallback: () => void\r\n}\r\n\r\nconst Login = (props: Props) => {\r\n    const classes = loginStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.status === ActionStatus.Request);\r\n        if (authState.status === ActionStatus.Failure) {\r\n            //authState.error && toast.error(t(`ERROR_${authState.error}`))\r\n        }\r\n    }, [authState.status]);\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.login(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleForgotPassword = (e: React.MouseEvent): void => {\r\n        e.preventDefault();\r\n        props.resetPasswordCallback();\r\n    }\r\n\r\n    const responseGoogle = (response: any) => {\r\n        dispatch(authActions.googleLogin(response.tokenId));\r\n    }\r\n\r\n    const responseGoogleFailure = (response: any) => {\r\n        toast.error(`${t('Google Login Error:')} ${response?.details}`);\r\n    }\r\n\r\n    const responseFacebook = (response: any) => {\r\n        dispatch(authActions.facebookLogin(response));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                {t(\"Login to app\", { appName })}\r\n            </Typography>\r\n            <Formik\r\n                initialValues={{ email: '', password: '' }}\r\n                validate={values => {\r\n                    const errors: IError = {};\r\n                    if (!values.email) {\r\n                        errors.email = t('Email is required');\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n                        errors.email = t('Invalid Email Address');\r\n                    }\r\n                    if (!values.password) {\r\n                        errors.password = t('Please enter the Password');\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={handleFormSubmit}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit\r\n                }) => (\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            error={!!errors.email && touched.email}\r\n                            size=\"small\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label={t('Email')}\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.email && touched.email &&\r\n                                <ErrorMessage name=\"email\" component=\"div\" className={mainClasses.formError} />}\r\n                        </div>\r\n                        <TextField\r\n                            error={!!errors.password && touched.password}\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label={t('Password')}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.password && touched.password &&\r\n                                <ErrorMessage name=\"password\" component=\"div\" className={mainClasses.formError} />}\r\n                        </div>\r\n                        <div className={classes.forgotPasswordLink}>\r\n                            <Link href=\"\" onClick={handleForgotPassword}>\r\n                                {t(\"Forgot Password?\")}\r\n                            </Link>\r\n                        </div>\r\n                        <br />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={submitting}\r\n                            className={classes.button}\r\n                        >\r\n                            {t('Login')}\r\n                        </Button>\r\n                        <GoogleLogin\r\n                            clientId=\"689539234040-ul5se7j4rnm8s7mkf04bn51suq67p1hg.apps.googleusercontent.com\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={responseGoogleFailure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                            render={(renderProps) => (\r\n                                <GoogleButton onClick={renderProps.onClick} />\r\n                            )}\r\n                        />\r\n                        <FacebookLogin\r\n                            appId=\"1360736550926562\"\r\n                            autoLoad={false}\r\n                            fields=\"name,email\"\r\n                            buttonStyle={\r\n                                { width: \"200px\", textTransform: \"none\" }\r\n                            }\r\n                            callback={responseFacebook}\r\n                            render={(renderProps) => (\r\n                                <FacebookButton onClick={renderProps.onClick} />\r\n                            )}\r\n                        />\r\n                        {authState.status === ActionStatus.Request &&\r\n                            <div className={mainClasses.progress}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        }\r\n                        {/* {authState.status === ActionStatus.Failure &&\r\n                            <div className={mainClasses.errorMessage}>\r\n                                {t(`ERROR_${authState.error}`)}\r\n                            </div>\r\n                        } */}\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;",["345","346"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\services\\user.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\actions.ts",["347","348"],"import { actionCreator, payloadedActionCreator } from \"../helpers\";\r\nimport { UserGoogleLoginReqData, UserLoginCheckResData, UserLoginReqData, UserLoginResData, UserPasswordResetReqData } from \"../../types/user\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport {\r\n    AuthActionParams,\r\n    LoginFailureActionParams,\r\n    LoginRequestActionParams,\r\n    LoginSuccessActionParams,\r\n    // LoginCheckFailureActionParams,\r\n    // LoginCheckRequestActionParams,\r\n    // LoginCheckSuccessActionParams,\r\n    ForgotPasswordRequestActionParams,\r\n    ForgotPasswordSuccessActionParams,\r\n    ForgotPasswordFailureActionParams,\r\n    ResetPasswordRequestActionParams,\r\n    ResetPasswordSuccessActionParams,\r\n    ResetPasswordFailureActionParams,\r\n    //UserUpdateSuccessActionParams,\r\n    LogoutActionParams,\r\n    LOGIN_REQUEST,\r\n    LOGIN_FAILURE,\r\n    LOGIN_SUCCESS,\r\n    // LOGIN_CHECK_REQUEST,\r\n    // LOGIN_CHECK_FAILURE,\r\n    // LOGIN_CHECK_SUCCESS,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAILURE,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILURE,\r\n    FORGOT_PASSWORD_RESET,\r\n    //USER_UPDATE_SUCCESS,\r\n    LOGOUT,\r\n    ForgotPasswordReqData,\r\n    ForgotPasswordResetActionParams,\r\n} from \"./types\"\r\nimport { userServices } from \"../../services/user\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport { Dispatch, DispatchWithoutAction } from \"react\";\r\nimport { ResponseData } from \"../../types/main\";\r\n\r\nexport const loginRequest = actionCreator<LoginRequestActionParams>(LOGIN_REQUEST);\r\n\r\nexport const loginSuccess = payloadedActionCreator<LoginSuccessActionParams>(LOGIN_SUCCESS);\r\n\r\nexport const loginFailure = payloadedActionCreator<LoginFailureActionParams>(LOGIN_FAILURE);\r\n\r\nexport const forgotPasswordRequest = actionCreator<ForgotPasswordRequestActionParams>(FORGOT_PASSWORD_REQUEST);\r\n\r\nexport const forgotPasswordSuccess = payloadedActionCreator<ForgotPasswordSuccessActionParams>(FORGOT_PASSWORD_SUCCESS);\r\n\r\nexport const forgotPasswordFailure = payloadedActionCreator<ForgotPasswordFailureActionParams>(FORGOT_PASSWORD_FAILURE);\r\n\r\nexport const resetPasswordRequest = actionCreator<ResetPasswordRequestActionParams>(RESET_PASSWORD_REQUEST);\r\n\r\nexport const resetPasswordSuccess = payloadedActionCreator<ResetPasswordSuccessActionParams>(RESET_PASSWORD_SUCCESS);\r\n\r\nexport const resetPasswordFailure = payloadedActionCreator<ResetPasswordFailureActionParams>(RESET_PASSWORD_FAILURE);\r\n\r\nexport const forgotPasswordReset = actionCreator<ForgotPasswordResetActionParams>(FORGOT_PASSWORD_RESET);\r\n\r\n//export const userUpdateSuccess = payloadedActionCreator<UserUpdateSuccessActionParams>(USER_UPDATE_SUCCESS);\r\n\r\nexport const logout = actionCreator<LogoutActionParams>(LOGOUT);\r\n\r\nconst login = (data: UserLoginReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest());\r\n\r\n        userServices.login(data)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    cookies.set('x-auth-token', res.data.data!.accessToken);\r\n                    localStorage.setItem('refreshToken', res.data.data!.refreshToken!);\r\n                    dispatch(loginSuccess(res.data));\r\n\r\n                    //history.push(from);\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst loginCheck = () => {\r\n    const refreshToken = localStorage.getItem('refreshToken')\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest());\r\n\r\n        userServices.loginCheck({ refreshToken })\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginCheckResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    if (res.data.data?.accessToken) {\r\n                        cookies.set('x-auth-token', res.data.data!.accessToken);\r\n                    }\r\n                    dispatch(loginSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: '', message: '' }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst googleLogin = (token: string) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest());\r\n\r\n        userServices.googleLogin(token)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    cookies.set('x-auth-token', res.data.data!.accessToken);\r\n                    localStorage.setItem('refreshToken', res.data.data!.refreshToken!);\r\n                    dispatch(loginSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst facebookLogin = (token: string) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(loginRequest());\r\n\r\n        userServices.facebookLogin(token)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserLoginResData>>) => {\r\n                    const cookies = new Cookies();\r\n                    cookies.set('x-auth-token', res.data.data!.accessToken);\r\n                    localStorage.setItem('refreshToken', res.data.data!.refreshToken!);\r\n                    dispatch(loginSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(loginFailure({ error: error.name, message: error.message }));\r\n                    //dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst forgotPassword = (data: ForgotPasswordReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(forgotPasswordRequest());\r\n\r\n        userServices.forgotPassword(data)\r\n            .then(\r\n                (res: AxiosResponse) => {\r\n                    dispatch(forgotPasswordSuccess(res.data));\r\n                    //history.push(from);\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(forgotPasswordFailure({ error: error.name, message: error.message }));\r\n                    //dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst resetPassword = (data: UserPasswordResetReqData) => {\r\n    return (dispatch: Dispatch<AuthActionParams>) => {\r\n        dispatch(resetPasswordRequest());\r\n\r\n        userServices.resetPassword(data)\r\n            .then(\r\n                (res: AxiosResponse) => {\r\n                    dispatch(resetPasswordSuccess(res.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(resetPasswordFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nexport const authActions = {\r\n    login,\r\n    loginCheck,\r\n    googleLogin,\r\n    facebookLogin,\r\n    forgotPassword,\r\n    forgotPasswordReset,\r\n    resetPassword,\r\n    logout,\r\n};",["349","350"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\error.ts",[],["351","352"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\store.ts",["353","354","355","356"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\types.ts",["357"],"import { Action } from \"redux\";\r\nimport { ActionStatus, ResponseData, ResponseError } from \"../../types/main\";\r\nimport AppState, { DatalessState } from \"../../types/redux\";\r\nimport { UserStateData } from \"../../types/user\";\r\nimport { PayloadedAction } from \"../helpers\";\r\n\r\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nconst LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n// const LOGIN_CHECK_REQUEST = \"LOGIN_CHECK_REQUEST\";\r\n// const LOGIN_CHECK_SUCCESS = \"LOGIN_CHECK_SUCCESS\";\r\n// const LOGIN_CHECK_FAILURE = \"LOGIN_CHECK_FAILURE\";\r\nconst FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\";\r\nconst FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\r\nconst FORGOT_PASSWORD_FAILURE = \"FORGOT_PASSWORD_FAILURE\";\r\nconst FORGOT_PASSWORD_RESET = \"FORGOT_PASSWORD_RESET\";\r\nconst RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\";\r\nconst RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\r\nconst RESET_PASSWORD_FAILURE = \"RESET_PASSWORD_FAILURE\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\nexport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    // LOGIN_CHECK_REQUEST,\r\n    // LOGIN_CHECK_SUCCESS,\r\n    // LOGIN_CHECK_FAILURE,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAILURE,\r\n    FORGOT_PASSWORD_RESET,\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILURE,\r\n    LOGOUT,\r\n}\r\n\r\nexport interface ForgotPasswordReqData {\r\n    email: string;\r\n}\r\n\r\nexport interface AuthReducerAdditionalData {\r\n    forgotPassword: DatalessState;\r\n    resetPassword: DatalessState;\r\n    loginCheck: DatalessState;\r\n}\r\n\r\nexport type AuthReducerState = AppState<UserStateData> & AuthReducerAdditionalData;\r\n\r\nexport type LoginRequestActionParams = Action<typeof LOGIN_REQUEST>;\r\nexport type LoginSuccessActionParams = PayloadedAction<typeof LOGIN_SUCCESS, ResponseData<UserStateData> | null>;\r\nexport type LoginFailureActionParams = PayloadedAction<typeof LOGIN_FAILURE, ResponseError | null>;\r\n// export type LoginCheckRequestActionParams = Action<typeof LOGIN_CHECK_REQUEST>;\r\n// export type LoginCheckSuccessActionParams = PayloadedAction<typeof LOGIN_CHECK_SUCCESS, ResponseData<UserStateData> | null>;\r\n// export type LoginCheckFailureActionParams = PayloadedAction<typeof LOGIN_CHECK_FAILURE, ResponseError | null>;\r\n// export type LoginActionParams = LoginRequestActionParams | LoginSuccessActionParams | LoginFailureActionParams;\r\nexport type ForgotPasswordRequestActionParams = Action<typeof FORGOT_PASSWORD_REQUEST>;\r\nexport type ForgotPasswordSuccessActionParams = PayloadedAction<typeof FORGOT_PASSWORD_SUCCESS, AppState<any> | null>;\r\nexport type ForgotPasswordFailureActionParams = PayloadedAction<typeof FORGOT_PASSWORD_FAILURE, ResponseError | null>;\r\nexport type ForgotPasswordResetActionParams = Action<typeof FORGOT_PASSWORD_RESET>;\r\nexport type ResetPasswordRequestActionParams = Action<typeof RESET_PASSWORD_REQUEST>;\r\nexport type ResetPasswordSuccessActionParams = PayloadedAction<typeof RESET_PASSWORD_SUCCESS, AppState<any> | null>;\r\nexport type ResetPasswordFailureActionParams = PayloadedAction<typeof RESET_PASSWORD_FAILURE, ResponseError | null>;\r\nexport type LogoutActionParams = Action<typeof LOGOUT>;\r\nexport type AuthActionParams =\r\n    LoginRequestActionParams |\r\n    LoginSuccessActionParams |\r\n    LoginFailureActionParams |\r\n    // LoginCheckRequestActionParams |\r\n    // LoginCheckSuccessActionParams |\r\n    // LoginCheckFailureActionParams |\r\n    ForgotPasswordRequestActionParams |\r\n    ForgotPasswordSuccessActionParams |\r\n    ForgotPasswordFailureActionParams |\r\n    ForgotPasswordResetActionParams |\r\n    ResetPasswordRequestActionParams |\r\n    ResetPasswordSuccessActionParams |\r\n    ResetPasswordFailureActionParams | \r\n    LogoutActionParams\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Login\\loginStyles.ts",[],["358","359"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\main.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\auth\\reducer.ts",["360"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\FacebookButton.tsx",[],["361","362"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\FacebookLogin\\facebookButtonStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleLogo.tsx",["363"],"import React from 'react'\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst GoogleLogo = (props: Props) => {\r\n    return (\r\n        <SvgIcon>\r\n            <svg viewBox=\"0 0 256 262\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid\">\r\n                <path d=\"M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\" fill=\"#4285F4\" />\r\n                <path d=\"M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1\" fill=\"#34A853\" />\r\n                <path d=\"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782\" fill=\"#FBBC05\" />\r\n                <path d=\"M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251\" fill=\"#EB4335\" />\r\n            </svg>\r\n        </SvgIcon>\r\n    )\r\n}\r\n\r\nexport default GoogleLogo\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\googleButtonStyles.ts",[],["364","365"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Buttons\\GoogleLogin\\GoogleButton.tsx",["366"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport FacebookIcon from '@material-ui/icons/Facebook'; \r\nimport googleButtonStyles from './googleButtonStyles';\r\nimport GoogleLogo from './GoogleLogo';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n  onClick: Function\r\n}\r\n\r\nconst GoogleButton = (props: Props) => {\r\n  const classes = googleButtonStyles();\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"default\"\r\n      className={classes.button}\r\n      startIcon={<GoogleLogo />}\r\n      onClick={() => props.onClick()}\r\n    >\r\n      {t('Google Login')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default GoogleButton","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\i18n.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\languageSelectStyles.ts",[],["367","368"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\LanguageSelect\\index.tsx",["369","370","371","372"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport languageSelectStyles from './languageSelectStyles';\r\nimport i18n from '../../utils/i18n';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nexport type AppLanguages = 'en' | 'hy' | 'ru';\r\n\r\nexport enum AppLanguageNames {\r\n    English = 'en',\r\n    Armenian = 'hy',\r\n    Russian = 'ru'\r\n}\r\n\r\nconst LanguageSelect = (props: Props) => {\r\n    const classes = languageSelectStyles();\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        //console.log()\r\n        i18n.changeLanguage(event.target.value as string);\r\n        localStorage.setItem('i18nextLng', event.target.value as string);\r\n    };\r\n\r\n    const { t } = useTranslation();\r\n    const currentLanguage: string = i18n.language.substring(0, 2);\r\n    return (\r\n        <div>\r\n            <InputLabel id=\"demo-simple-select-label\">{t('Language')}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                fullWidth\r\n                value={currentLanguage}\r\n                onChange={handleChange}\r\n            >\r\n                <MenuItem value={'en'}>{t('English')}</MenuItem>\r\n                <MenuItem value={'hy'}>{t('Armenian')}</MenuItem>\r\n                <MenuItem value={'ru'}>{t('Russian')}</MenuItem>\r\n            </Select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageSelect\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\localization.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PrivateRoute.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\config.ts",[],["373","374"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\index.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Dialogs\\Login\\loginDialogStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\index.tsx",["375"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\layoutStyles.ts",["376"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Routes\\PublicRoute.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\registerStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\Register.tsx",["377","378","379"],"import React, { useEffect, useState, FC } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerActions } from '../../redux/register/actions'\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { appName } from '../../utils/constants';\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport { RegisterFormValues } from '../../types/user';\r\nimport registerStyles from './registerStyles';\r\n\r\ninterface IError {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\ninterface Props {\r\n    onSuccessCallback: (values: RegisterFormValues) => void;\r\n}\r\n\r\nconst Register = (props: Props) => {\r\n    const classes = registerStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [formValues, setFormValues] = useState<RegisterFormValues>();\r\n    const registerState = useSelector((state: RootState) => state.register);\r\n    //const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(registerState.status === ActionStatus.Request);\r\n        if (registerState.status === ActionStatus.Success && formValues) {\r\n            props.onSuccessCallback(formValues); // TODO\r\n        }\r\n    }, [registerState.status]);\r\n\r\n    const handleFormSubmit = (values: RegisterFormValues): void => {\r\n        setFormValues(values);\r\n        dispatch(registerActions.register(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Typography>\r\n                {t(\"Register for\", { appName })}\r\n            </Typography>\r\n            <Formik\r\n                initialValues={{ email: '', password: '', displayName: '' }}\r\n                validate={values => {\r\n                    const errors: IError = {};\r\n                    if (!values.email) {\r\n                        errors.email = t('Email is required');\r\n                    } else if (\r\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                    ) {\r\n\r\n                        errors.email = t('Invalid Email address');\r\n                    }\r\n                    if (!values.password) {\r\n                        errors.password = t('Please enter the Password');\r\n                    } else if (\r\n                        !/(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}/.test(values.password)\r\n                    ) {\r\n                        errors.password = t('password-validation-error');\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={handleFormSubmit}\r\n            >\r\n                {({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit\r\n                }) => (\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            fullWidth\r\n                            id=\"displayName\"\r\n                            label={t('Display Name')}\r\n                            name=\"displayName\"\r\n                            autoComplete=\"displayName\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.displayName && touched.displayName &&\r\n                                <ErrorMessage name=\"displayName\" component=\"div\" className={mainClasses.formError} />\r\n                            }\r\n                        </div>\r\n                        <TextField\r\n                            error={!!errors.email && touched.email}\r\n                            size=\"small\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label={t('Email')}\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.email && touched.email &&\r\n                                <ErrorMessage name=\"email\" component=\"div\" className={mainClasses.formError} />\r\n                            }\r\n                        </div>\r\n                        <TextField\r\n                            error={!!errors.password && touched.password}\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label={t('Password')}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={classes.textField}\r\n                        />\r\n                        <div className={mainClasses.formErrorContainer}>\r\n                            {errors.password && touched.password &&\r\n                                <ErrorMessage name=\"password\" component=\"div\" className={mainClasses.formError} />\r\n                            }\r\n                        </div>\r\n                        <br />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={submitting}\r\n                            className={classes.button}\r\n                        >\r\n                            {t('Register')}\r\n                        </Button>\r\n                        {registerState.status === ActionStatus.Request &&\r\n                            <div className={mainClasses.progress}>\r\n                                <CircularProgress />\r\n                            </div>\r\n                        }\r\n                        {/* {registerState.status === ActionStatus.Failure &&\r\n                            <div className={mainClasses.errorMessage}>\r\n                                {t(`ERROR_${registerState.error}`)}\r\n                                </div>\r\n                        } */}\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Register;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\App.tsx",["380","381"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Settings\\Settings.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\mainStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\types.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\reducer.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\register\\actions.ts",["382"],"import { actionCreator, payloadedActionCreator } from \"../helpers\";\r\nimport { UserLoginReqData, UserRegisterReqData } from \"../../types/user\";\r\nimport {\r\n    RegisterActionParams,\r\n    RegisterFailureActionParams,\r\n    RegisterRequestActionParams,\r\n    RegisterSuccessActionParams,\r\n    VerifyEmailRequestActionParams,\r\n    VerifyEmailSuccessActionParams,\r\n    VerifyEmailFailureActionParams,\r\n    ResendVericationEmailRequestActionParams,\r\n    ResendVericationEmailSuccessActionParams,\r\n    ResendVericationEmailFailureActionParams,\r\n    REGISTER_REQUEST,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE,\r\n    VERIFY_EMAIL_REQUEST,\r\n    VERIFY_EMAIL_SUCCESS,\r\n    VERIFY_EMAIL_FAILURE,\r\n    RESEND_VERIFICATION_EMAIL_REQUEST,\r\n    RESEND_VERIFICATION_EMAIL_SUCCESS,\r\n    RESEND_VERIFICATION_EMAIL_FAILURE,\r\n} from \"./types\"\r\nimport { userServices } from \"../../services/user\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport { Dispatch, DispatchWithoutAction } from \"react\";\r\n\r\nexport const registerRequest = payloadedActionCreator<RegisterRequestActionParams>(REGISTER_REQUEST);\r\n\r\nexport const registerSuccess = actionCreator<RegisterSuccessActionParams>(REGISTER_SUCCESS);\r\n\r\nexport const registerFailure = payloadedActionCreator<RegisterFailureActionParams>(REGISTER_FAILURE);\r\n\r\nexport const verifyEmailRequest = actionCreator<VerifyEmailRequestActionParams>(VERIFY_EMAIL_REQUEST);\r\n\r\nexport const verifyEmailSuccess = payloadedActionCreator<VerifyEmailSuccessActionParams>(VERIFY_EMAIL_SUCCESS);\r\n\r\nexport const verifyEmailFailure = payloadedActionCreator<VerifyEmailFailureActionParams>(VERIFY_EMAIL_FAILURE);\r\n\r\nexport const resendVericationEmailRequest = actionCreator<ResendVericationEmailRequestActionParams>(RESEND_VERIFICATION_EMAIL_REQUEST);\r\n\r\nexport const resendVericationEmailSuccess = payloadedActionCreator<ResendVericationEmailSuccessActionParams>(RESEND_VERIFICATION_EMAIL_SUCCESS);\r\n\r\nexport const resendVericationEmailFailure = payloadedActionCreator<ResendVericationEmailFailureActionParams>(RESEND_VERIFICATION_EMAIL_FAILURE);\r\n\r\nconst register = (data: UserRegisterReqData) => {\r\n    return (dispatch: Dispatch<RegisterActionParams>) => {\r\n        dispatch(registerRequest(data));\r\n\r\n        userServices.register(data)\r\n            .then(\r\n                (res: AxiosResponse) => {\r\n                    dispatch(registerSuccess());\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(registerFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst verifyEmail = (token: string) => {\r\n    return (dispatch: Dispatch<RegisterActionParams>) => {\r\n        dispatch(verifyEmailRequest());\r\n\r\n        userServices.verifyUser(token)\r\n            .then(\r\n                (user: AxiosResponse) => {\r\n                    dispatch(verifyEmailSuccess(user.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(verifyEmailFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nconst resendVerificationEmail = (data: UserLoginReqData) => {\r\n    return (dispatch: Dispatch<RegisterActionParams>) => {\r\n        dispatch(resendVericationEmailRequest());\r\n\r\n        userServices.resendVerificationEmail(data)\r\n            .then(\r\n                (user: AxiosResponse) => {\r\n                    dispatch(resendVericationEmailSuccess(user.data));\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(resendVericationEmailFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nexport const registerActions = {\r\n    register,\r\n    verifyEmail,\r\n    resendVerificationEmail,\r\n};","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\passwordResetStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\PasswordResetForm.tsx",["383"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport resetPasswordStyles from './passwordResetStyles';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { ErrorMessage, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport mainStyles from '../../styles/mainStyles';\r\n\r\ninterface FormikValues {\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IError {\r\n    password?: string;\r\n    confirmPassword?: string;\r\n}\r\n\r\nconst PasswordResetForm = () => {\r\n    const [success, setSuccess] = useState<boolean>(false);\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const dispatch = useDispatch();\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const history = useHistory();\r\n    const classes = resetPasswordStyles();\r\n    const mainClasses = mainStyles();\r\n    const { token } = useParams<{ token: string }>();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.resetPassword.status === ActionStatus.Request);\r\n        if (authState.resetPassword.status === ActionStatus.Success) {\r\n            setSuccess(true);\r\n        }\r\n    }, [authState.resetPassword.status]);\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.resetPassword({ password: values.password, token }));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleLoginPageButton = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth={false}\r\n            fullScreen={fullScreen}\r\n            open\r\n            classes={{\r\n                paper:\r\n                    classes.paper\r\n            }}\r\n        >\r\n            <div className={classes.content}>\r\n                <div className={classes.leftPart}>\r\n                    (Lorem Ipsum)\r\n                        </div>\r\n                <div className={classes.mainPart}>\r\n\r\n                    <div className={classes.mainContent}>\r\n                        {!success ?\r\n                            <>\r\n                                <Typography>\r\n                                    {t('Please enter a new Password')}\r\n                                </Typography>\r\n                                <Formik\r\n                                    initialValues={{ password: '', confirmPassword: '' }}\r\n                                    validate={values => {\r\n                                        const errors: IError = {};\r\n                                        if (!values.password) {\r\n                                            errors.password = t('Please enter a Password');\r\n                                        } else if (\r\n                                            !/(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}/.test(values.password)\r\n                                        ) {\r\n                                            errors.password = t('password-validation-error');\r\n                                        } else if (values.password !== values.confirmPassword) {\r\n                                            errors.confirmPassword = t('Passwords do not match');\r\n                                        }\r\n                                        if (!values.confirmPassword) {\r\n                                            errors.confirmPassword = t('Please confirm the Password');\r\n                                        }\r\n\r\n                                        return errors;\r\n                                    }}\r\n                                    onSubmit={handleFormSubmit}\r\n                                >\r\n                                    {({\r\n                                        values,\r\n                                        errors,\r\n                                        touched,\r\n                                        handleChange,\r\n                                        handleBlur,\r\n                                        handleSubmit\r\n                                    }) => (\r\n                                        <form className={classes.form} onSubmit={handleSubmit}>\r\n                                            <TextField\r\n                                                error={!!errors.password && touched.password}\r\n                                                required\r\n                                                fullWidth\r\n                                                name=\"password\"\r\n                                                label={t('Password')}\r\n                                                type=\"password\"\r\n                                                id=\"password\"\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={classes.textField}\r\n                                            />\r\n                                            <div className={mainClasses.formErrorContainer}>\r\n                                                {errors.password && touched.password &&\r\n                                                    <ErrorMessage name=\"password\" component=\"div\" className={mainClasses.formError} />}\r\n                                            </div>\r\n                                            <TextField\r\n                                                error={!!errors.confirmPassword && touched.confirmPassword}\r\n                                                required\r\n                                                fullWidth\r\n                                                name=\"confirmPassword\"\r\n                                                label={t('Confirm Password')}\r\n                                                type=\"password\"\r\n                                                id=\"confirmPassword\"\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={classes.textField}\r\n                                            />\r\n                                            <div className={mainClasses.formErrorContainer}>\r\n                                                {errors.confirmPassword && touched.confirmPassword &&\r\n                                                    <ErrorMessage name=\"confirmPassword\" component=\"div\" className={mainClasses.formError} />}\r\n                                            </div>\r\n                                            <br />\r\n                                            <Button\r\n                                                type=\"submit\"\r\n                                                variant=\"contained\"\r\n                                                color=\"secondary\"\r\n                                                disabled={submitting}\r\n                                                className={classes.button}\r\n                                            >\r\n                                                {t('Confirm')}\r\n                                            </Button>\r\n                                            {authState.resetPassword.status === ActionStatus.Request &&\r\n                                                <div className={mainClasses.progress}>\r\n                                                    <CircularProgress />\r\n                                                </div>\r\n                                            }\r\n                                            {authState.resetPassword.status === ActionStatus.Failure &&\r\n                                                <div className={mainClasses.errorMessage}>\r\n                                                    {t(`ERROR_${authState.resetPassword.error}`)}\r\n                                                </div>\r\n                                            }\r\n                                        </form>\r\n                                    )}\r\n                                </Formik>\r\n                            </> :\r\n                            <>\r\n                                <Typography>\r\n                                    {t(\"Your password was successfully reset\")}\r\n                                </Typography>\r\n                                <div>\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\"\r\n                                        disabled={submitting}\r\n                                        className={classes.button}\r\n                                        onClick={handleLoginPageButton}\r\n                                    >\r\n                                        {t('Go to Login Page')}\r\n                                    </Button>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default PasswordResetForm;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordReset.tsx",["384","385","386","387","388"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\RegisterSuccess.tsx",["389","390","391","392","393"],"import React, { useEffect, useState, FC } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions';\r\nimport registerStyles from './registerStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport mainStyles from '../../styles/mainStyles';\r\nimport { registerActions } from '../../redux/register/actions';\r\n\r\ninterface FormikValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface IError {\r\n    email?: string;\r\n    password?: string;\r\n}\r\n\r\ninterface Props {\r\n    //resetPasswordCallback: () => void;\r\n}\r\n\r\nconst RegisterSuccess = (props: Props) => {\r\n    const classes = registerStyles();\r\n    const mainClasses = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const [timeLeft, setTimeLeft] = useState<number>(60);\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const registerState = useSelector((state: RootState) => state.register);\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(authState.status === ActionStatus.Request);\r\n    }, [authState.status]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (timeLeft > 0) setTimeLeft(timeLeft - 1);\r\n        }, 1000);\r\n    });\r\n\r\n    const handleFormSubmit = (values: FormikValues): void => {\r\n        dispatch(authActions.login(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    const handleResendEmail = (e: React.MouseEvent): void => {\r\n        //e.preventDefault();\r\n        dispatch(registerActions.resendVerificationEmail(registerState.data!));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Typography>\r\n                {t(\"Registration success\")}\r\n            </Typography>\r\n            <div>\r\n                {t(\"registration-success-body\")}\r\n                {timeLeft > 0 ?\r\n                    t(\"registration-success-body-end1\", { sec: timeLeft }) :\r\n                    t(\"registration-success-body-end2\")\r\n                }\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={submitting || timeLeft > 0}\r\n                    className={classes.button}\r\n                    onClick={handleResendEmail}\r\n                >\r\n                    {t('Resend Verification Email')}\r\n                </Button>\r\n            </div>\r\n            {registerState.resendVerificationEmail.status === ActionStatus.Request &&\r\n                <div className={mainClasses.progress}>\r\n                    <CircularProgress />\r\n                </div>\r\n            }\r\n            {registerState.resendVerificationEmail.status === ActionStatus.Failure &&\r\n                <div className={mainClasses.errorMessage}>{registerState.resendVerificationEmail.error}</div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegisterSuccess;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Register\\EmailVerificationResult.tsx",["394","395","396","397","398","399","400","401","402","403","404","405"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\types.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\reducer.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\asyncWrapper.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\IndependentSnackbar\\index.tsx",[],["406","407"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\styles\\theme.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\Profile.tsx",["408","409","410"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Profile\\profileStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\PasswordReset\\RequestPasswordResetSuccess.tsx",["411","412","413","414"],"import React, { useEffect, useState, FC } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authActions } from '../../redux/auth/actions'\r\nimport resetPasswordStyles from './passwordResetStyles';\r\nimport { RootState } from '../../redux/store';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    onSuccessCallback: () => void;\r\n}\r\n\r\nconst RequestPasswordResetSuccess = (props: Props) => {\r\n    const classes = resetPasswordStyles();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useState<boolean>(false);\r\n    const authState = useSelector((state: RootState) => state.auth);\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(authActions.forgotPasswordReset())\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                {t(\"Check your Email\")}\r\n            </Typography>\r\n            <div>\r\n                <p>\r\n                    {t(\"password-reset-success-body\")}\r\n                </p>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disabled={submitting}\r\n                    className={classes.button}\r\n                    onClick={() => props.onSuccessCallback()}\r\n                >\r\n                    {t('Go to Login Page')}\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RequestPasswordResetSuccess;",["415","416"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\index.tsx",["417","418","419","420","421","422","423","424","425","426","427"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Home\\homeStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\authUtils.ts",["428"],"import Cookies from 'universal-cookie';\r\n\r\nconst loginCheck = () => {\r\n    const cookies = new Cookies();\r\n    return cookies.get('x-auth-token');\r\n}\r\n\r\nexport const clearCookieAndStorage = (): void => {\r\n    const cookies = new Cookies();\r\n    cookies.remove('x-auth-token');\r\n    localStorage.removeItem('refreshToken');\r\n}","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\types\\error.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\user\\actions.ts",["429","430","431","432"],"import { actionCreator, payloadedActionCreator, PayloadedAction } from \"../helpers\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AxiosError, AxiosResponse } from \"axios\";\r\nimport { userServices } from \"../../services/user\";\r\nimport { ForgotPasswordReqData } from \"../auth/types\";\r\nimport {\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAILURE,\r\n    USER_RESET,\r\n    UpdateRequestActionParams,\r\n    UpdateSuccessActionParams,\r\n    UpdateFailureActionParams,\r\n    UserActionParams,\r\n    UserResetActionParams\r\n} from \"./types\"\r\nimport { UserRegisterResData, UserStateData, UserUpdateReqData } from \"../../types/user\";\r\nimport { ResponseData } from \"../../types/main\";\r\nimport toast from \"../../components/IndependentSnackbar\";\r\nimport i18n from \"../../utils/i18n\";\r\n\r\nexport const updateRequest = actionCreator<UpdateRequestActionParams>(USER_UPDATE_REQUEST);\r\n\r\nexport const updateSuccess = payloadedActionCreator<UpdateSuccessActionParams>(USER_UPDATE_SUCCESS);\r\n\r\nexport const updateFailure = payloadedActionCreator<UpdateFailureActionParams>(USER_UPDATE_FAILURE);\r\n\r\nexport const reset = actionCreator<UserResetActionParams>(USER_RESET);\r\n\r\nconst update = (data: UserUpdateReqData) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(updateRequest());\r\n\r\n        userServices.update(data)\r\n            .then(\r\n                (res: AxiosResponse<ResponseData<UserStateData>>) => {\r\n                    dispatch(updateSuccess(res.data));\r\n                    toast.success(i18n.t('Changes saved'))\r\n                },\r\n                (error: AxiosError) => {\r\n                    dispatch(updateFailure({ error: error.name, message: error.message }));\r\n                }\r\n            );\r\n    };\r\n}\r\n\r\nexport const userActions = {\r\n    update,\r\n    reset,\r\n};","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Main.tsx",["433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"import React, { ReactElement } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\nimport { ActionStatus } from '../../types/main';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport clsx from 'clsx';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport layoutStyles from './layoutStyles';\r\nimport Header from './Headers';\r\n\r\ninterface Props {\r\n    children: ReactElement,\r\n    menuOpen: boolean,\r\n    backdropVisible: boolean,\r\n    backdropCallback: (e: React.MouseEvent) => void,\r\n}\r\n\r\nconst Main = (props: Props) => {\r\n    const classes = layoutStyles();\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n    return (\r\n        <>\r\n            <Header menuOpen={props.menuOpen} />\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {props.children}\r\n            </main>\r\n            <Backdrop open={props.backdropVisible} onClick={props.backdropCallback} className={classes.backdrop} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\constants.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentTypeSelect.tsx",["451","452","453","454","455","456"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\tournamentStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\headerStyles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\index.tsx",["457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderHome.tsx",["472","473","474","475","476","477","478","479","480","481","482","483"],"import React, { ReactElement, useEffect, useState } from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport clsx from 'clsx';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport headerStyles from './headerStyles';\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Header = (props: Props) => {\r\n    const classes = headerStyles();\r\n    const history = useHistory();\r\n    const [path, setPath] = useState('');\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setPath(history.location.pathname)\r\n\r\n    })\r\n\r\n    return (\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                {t('Manage Tournaments')}\r\n            </Typography>\r\n            <FormControl className={classes.search}/* className={clsx(classes.margin, classes.textField)} */>\r\n                <Input\r\n                    id=\"standard-adornment-password\"\r\n                    type='text'\r\n                    //value={values.password}\r\n                    //onChange={handleChange('password')}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"hide search field\"\r\n                            // onClick={handleClickShowPassword}\r\n                            // onMouseDown={handleMouseDownPassword}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                />\r\n            </FormControl>\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\TournamentForm.tsx",["484","485","486","487","488","489","490","491","492","493"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderTournamentForm.tsx",["494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import React, { ReactElement, useEffect, useState } from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport clsx from 'clsx';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { useFormikContext } from 'formik';\r\nimport headerStyles from './headerStyles';\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Header = (props: Props) => {\r\n    const [path, setPath] = useState('');\r\n    const classes = headerStyles();\r\n    const history = useHistory();\r\n    //const { submitForm } = useFormikContext();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setPath(history.location.pathname)\r\n\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n        //submitForm();\r\n    }\r\n\r\n    const handleBackButton = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return (\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                {t('Tournament Settings')}\r\n            </Typography>\r\n            <IconButton className={classes.iconButton} aria-label=\"back\" onClick={handleBackButton}>\r\n                <ChevronLeftIcon />\r\n            </IconButton>\r\n            <Button\r\n                form='tournament-form'\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                //disabled={submitting}\r\n                className={classes.button}\r\n                //onClick={handleSubmit}\r\n            >\r\n                {t('Next')}\r\n            </Button>\r\n        </Toolbar>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\styles.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerTypeSelect.tsx",["511","512","513","514","515","516","517"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EliminationForm from './TournamentForm';\r\nimport clsx from 'clsx';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport Whatshot from '@material-ui/icons/Whatshot';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ReactComponent as Teams } from '../../resources/icons/teams.svg';\r\nimport { ReactComponent as Single } from '../../resources/icons/single.svg';\r\nimport { ReactComponent as DrawYourPartner } from '../../resources/icons/drawYourPartner.svg';\r\n\r\nimport tournamentStyles from './tournamentStyles';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst PlayerTypeSelect = (props: Props) => {\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n\r\n    const handleCardClick = (type: string) => {\r\n        history.push(`/tournament-player-form/${type}`)\r\n    }\r\n\r\n    const classes = tournamentStyles();\r\n    return (\r\n        <div className={classes.cardListContainer}>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#8bc34a' }}\r\n                    onClick={() => handleCardClick('teams')}\r\n                >\r\n                    <Teams className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Teams')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#e16f3d' }}\r\n                    onClick={() => handleCardClick('single')}\r\n                >\r\n                    <Single className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Single')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n            <Card className={classes.cardRoot}>\r\n                <CardContent\r\n                    className={classes.cardContent}\r\n                    style={{ backgroundColor: '#00b8d4' }}\r\n                    onClick={() => handleCardClick('dyp')}\r\n                >\r\n                    <DrawYourPartner className={classes.cardIcon} />\r\n                    <div className={classes.cardTitle}>{t('Draw Your Partner')}</div>\r\n                </CardContent>\r\n                <CardActions disableSpacing className={classes.cardActions}>\r\n                    <IconButton onClick={() => handleCardClick('drawYourPartner')} >\r\n                        <PlayArrowIcon />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerTypeSelect\r\n","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerForm.tsx",["518","519","520","521","522","523","524","525"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\styleUtils.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\Layout\\Headers\\HeaderGeneric.tsx",["526","527","528","529","530","531","532","533","534","535","536","537","538"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\components\\FormComponents\\FormSubheader.tsx",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\types.ts",["539"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\reducer.ts",["540","541","542","543","544","545"],"import { EntityById, EntityStateData, StatePlayer, StatePlayers } from \"../../types/entities\";\r\nimport { ActionStatus } from \"../../types/main\";\r\nimport { arrayGroupBy } from \"../helpers\";\r\nimport {\r\n  UserActionParams,\r\n  UPDATE_PLAYERS,\r\n  UPDATE_PLAYERS_REQUEST,\r\n  UPDATE_PLAYERS_SUCCESS,\r\n  UPDATE_PLAYERS_FAILURE,\r\n  EntitiesReducerState,\r\n} from \"./types\"\r\n\r\n\r\nconst initialState: EntitiesReducerState | null = {\r\n  players: [] /* {\r\n    byId: {},\r\n    allIds: [],\r\n  } */,\r\n  games: {\r\n    byId: {},\r\n    allIds: [],\r\n  },\r\n};\r\n\r\nconst reducer = (state: EntitiesReducerState = initialState, action: UserActionParams): EntitiesReducerState => {\r\n  switch (action.type) {\r\n    case UPDATE_PLAYERS: {\r\n      return {\r\n        ...state,\r\n        players: [...action.payload]//{ byId: arrayGroupBy<EntityById<StatePlayer>>([...action.payload], 'name'), allIds: [] /* ...action.payload.map(x => x.) */ }\r\n        //status: ActionStatus.Request\r\n      };\r\n    }\r\n    case UPDATE_PLAYERS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        //status: ActionStatus.Request\r\n      };\r\n    }\r\n    case UPDATE_PLAYERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        //status: ActionStatus.Success,\r\n        ...action.payload\r\n      };\r\n    }\r\n    case UPDATE_PLAYERS_FAILURE: {\r\n      return {\r\n        ...state,\r\n        //status: ActionStatus.Failure,\r\n        ...action.payload\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","C:\\Users\\Avet\\Sources\\tourtool-client\\src\\redux\\tournamentEntities\\actions.ts",["546","547","548","549"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\utils\\arrayUtils.ts",[],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\Elimination.tsx",["550","551","552"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\PlayerFormTextField.tsx",["553","554","555","556"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\EliminationSidebar.tsx",["557","558","559"],"C:\\Users\\Avet\\Sources\\tourtool-client\\src\\pages\\Tournaments\\EliminationSidebarItem.tsx",["560","561","562","563","564"],{"ruleId":"565","replacedBy":"566"},{"ruleId":"567","replacedBy":"568"},{"ruleId":"569","severity":1,"message":"570","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":25},{"ruleId":"569","severity":1,"message":"573","line":1,"column":38,"nodeType":"571","messageId":"572","endLine":1,"endColumn":40},{"ruleId":"569","severity":1,"message":"574","line":3,"column":8,"nodeType":"571","messageId":"572","endLine":3,"endColumn":19},{"ruleId":"569","severity":1,"message":"575","line":43,"column":11,"nodeType":"571","messageId":"572","endLine":43,"endColumn":18},{"ruleId":"565","replacedBy":"576"},{"ruleId":"567","replacedBy":"577"},{"ruleId":"569","severity":1,"message":"578","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":32},{"ruleId":"569","severity":1,"message":"579","line":41,"column":20,"nodeType":"571","messageId":"572","endLine":41,"endColumn":41},{"ruleId":"565","replacedBy":"580"},{"ruleId":"567","replacedBy":"581"},{"ruleId":"565","replacedBy":"582"},{"ruleId":"567","replacedBy":"583"},{"ruleId":"569","severity":1,"message":"584","line":1,"column":57,"nodeType":"571","messageId":"572","endLine":1,"endColumn":66},{"ruleId":"569","severity":1,"message":"585","line":1,"column":68,"nodeType":"571","messageId":"572","endLine":1,"endColumn":74},{"ruleId":"569","severity":1,"message":"586","line":1,"column":76,"nodeType":"571","messageId":"572","endLine":1,"endColumn":83},{"ruleId":"569","severity":1,"message":"587","line":1,"column":85,"nodeType":"571","messageId":"572","endLine":1,"endColumn":92},{"ruleId":"569","severity":1,"message":"588","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":22},{"ruleId":"565","replacedBy":"589"},{"ruleId":"567","replacedBy":"590"},{"ruleId":"569","severity":1,"message":"591","line":2,"column":8,"nodeType":"571","messageId":"572","endLine":2,"endColumn":16},{"ruleId":"565","replacedBy":"592"},{"ruleId":"567","replacedBy":"593"},{"ruleId":"569","severity":1,"message":"594","line":3,"column":8,"nodeType":"571","messageId":"572","endLine":3,"endColumn":18},{"ruleId":"565","replacedBy":"595"},{"ruleId":"567","replacedBy":"596"},{"ruleId":"569","severity":1,"message":"597","line":3,"column":8,"nodeType":"571","messageId":"572","endLine":3,"endColumn":20},{"ruleId":"565","replacedBy":"598"},{"ruleId":"567","replacedBy":"599"},{"ruleId":"569","severity":1,"message":"600","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":22},{"ruleId":"569","severity":1,"message":"601","line":2,"column":24,"nodeType":"571","messageId":"572","endLine":2,"endColumn":34},{"ruleId":"569","severity":1,"message":"602","line":2,"column":36,"nodeType":"571","messageId":"572","endLine":2,"endColumn":41},{"ruleId":"569","severity":1,"message":"603","line":23,"column":11,"nodeType":"571","messageId":"572","endLine":23,"endColumn":18},{"ruleId":"565","replacedBy":"604"},{"ruleId":"567","replacedBy":"605"},{"ruleId":"569","severity":1,"message":"606","line":1,"column":31,"nodeType":"571","messageId":"572","endLine":1,"endColumn":48},{"ruleId":"569","severity":1,"message":"607","line":1,"column":36,"nodeType":"571","messageId":"572","endLine":1,"endColumn":40},{"ruleId":"569","severity":1,"message":"573","line":1,"column":38,"nodeType":"571","messageId":"572","endLine":1,"endColumn":40},{"ruleId":"569","severity":1,"message":"608","line":13,"column":10,"nodeType":"571","messageId":"572","endLine":13,"endColumn":20},{"ruleId":"609","severity":1,"message":"610","line":43,"column":8,"nodeType":"611","endLine":43,"endColumn":30,"suggestions":"612"},{"ruleId":"569","severity":1,"message":"613","line":2,"column":25,"nodeType":"571","messageId":"572","endLine":2,"endColumn":33},{"ruleId":"609","severity":1,"message":"614","line":28,"column":6,"nodeType":"611","endLine":28,"endColumn":8,"suggestions":"615"},{"ruleId":"569","severity":1,"message":"579","line":26,"column":20,"nodeType":"571","messageId":"572","endLine":26,"endColumn":41},{"ruleId":"569","severity":1,"message":"574","line":9,"column":8,"nodeType":"571","messageId":"572","endLine":9,"endColumn":19},{"ruleId":"569","severity":1,"message":"573","line":1,"column":38,"nodeType":"571","messageId":"572","endLine":1,"endColumn":40},{"ruleId":"569","severity":1,"message":"616","line":5,"column":28,"nodeType":"571","messageId":"572","endLine":5,"endColumn":32},{"ruleId":"569","severity":1,"message":"617","line":29,"column":11,"nodeType":"571","messageId":"572","endLine":29,"endColumn":22},{"ruleId":"569","severity":1,"message":"575","line":33,"column":11,"nodeType":"571","messageId":"572","endLine":33,"endColumn":18},{"ruleId":"609","severity":1,"message":"618","line":42,"column":8,"nodeType":"611","endLine":42,"endColumn":41,"suggestions":"619"},{"ruleId":"569","severity":1,"message":"573","line":1,"column":38,"nodeType":"571","messageId":"572","endLine":1,"endColumn":40},{"ruleId":"569","severity":1,"message":"620","line":21,"column":11,"nodeType":"571","messageId":"572","endLine":21,"endColumn":17},{"ruleId":"569","severity":1,"message":"575","line":38,"column":11,"nodeType":"571","messageId":"572","endLine":38,"endColumn":18},{"ruleId":"569","severity":1,"message":"621","line":46,"column":15,"nodeType":"571","messageId":"572","endLine":46,"endColumn":20},{"ruleId":"569","severity":1,"message":"622","line":51,"column":11,"nodeType":"571","messageId":"572","endLine":51,"endColumn":27},{"ruleId":"569","severity":1,"message":"623","line":1,"column":17,"nodeType":"571","messageId":"572","endLine":1,"endColumn":25},{"ruleId":"569","severity":1,"message":"574","line":9,"column":8,"nodeType":"571","messageId":"572","endLine":9,"endColumn":19},{"ruleId":"569","severity":1,"message":"624","line":10,"column":8,"nodeType":"571","messageId":"572","endLine":10,"endColumn":17},{"ruleId":"569","severity":1,"message":"625","line":13,"column":10,"nodeType":"571","messageId":"572","endLine":13,"endColumn":22},{"ruleId":"569","severity":1,"message":"626","line":13,"column":24,"nodeType":"571","messageId":"572","endLine":13,"endColumn":30},{"ruleId":"569","severity":1,"message":"627","line":15,"column":10,"nodeType":"571","messageId":"572","endLine":15,"endColumn":21},{"ruleId":"569","severity":1,"message":"628","line":19,"column":10,"nodeType":"571","messageId":"572","endLine":19,"endColumn":17},{"ruleId":"569","severity":1,"message":"629","line":25,"column":11,"nodeType":"571","messageId":"572","endLine":25,"endColumn":23},{"ruleId":"569","severity":1,"message":"620","line":30,"column":11,"nodeType":"571","messageId":"572","endLine":30,"endColumn":17},{"ruleId":"569","severity":1,"message":"630","line":39,"column":6,"nodeType":"571","messageId":"572","endLine":39,"endColumn":22},{"ruleId":"569","severity":1,"message":"631","line":54,"column":13,"nodeType":"571","messageId":"572","endLine":54,"endColumn":28},{"ruleId":"609","severity":1,"message":"632","line":64,"column":8,"nodeType":"611","endLine":64,"endColumn":42,"suggestions":"633"},{"ruleId":"565","replacedBy":"634"},{"ruleId":"567","replacedBy":"635"},{"ruleId":"569","severity":1,"message":"636","line":18,"column":10,"nodeType":"571","messageId":"572","endLine":18,"endColumn":21},{"ruleId":"569","severity":1,"message":"637","line":19,"column":8,"nodeType":"571","messageId":"572","endLine":19,"endColumn":13},{"ruleId":"569","severity":1,"message":"575","line":38,"column":9,"nodeType":"571","messageId":"572","endLine":38,"endColumn":16},{"ruleId":"569","severity":1,"message":"573","line":1,"column":38,"nodeType":"571","messageId":"572","endLine":1,"endColumn":40},{"ruleId":"569","severity":1,"message":"638","line":18,"column":24,"nodeType":"571","messageId":"572","endLine":18,"endColumn":37},{"ruleId":"569","severity":1,"message":"639","line":19,"column":11,"nodeType":"571","messageId":"572","endLine":19,"endColumn":20},{"ruleId":"569","severity":1,"message":"575","line":20,"column":11,"nodeType":"571","messageId":"572","endLine":20,"endColumn":18},{"ruleId":"565","replacedBy":"640"},{"ruleId":"567","replacedBy":"641"},{"ruleId":"569","severity":1,"message":"642","line":5,"column":10,"nodeType":"571","messageId":"572","endLine":5,"endColumn":21},{"ruleId":"569","severity":1,"message":"643","line":9,"column":8,"nodeType":"571","messageId":"572","endLine":9,"endColumn":19},{"ruleId":"569","severity":1,"message":"644","line":10,"column":8,"nodeType":"571","messageId":"572","endLine":10,"endColumn":18},{"ruleId":"569","severity":1,"message":"645","line":11,"column":8,"nodeType":"571","messageId":"572","endLine":11,"endColumn":13},{"ruleId":"569","severity":1,"message":"646","line":12,"column":8,"nodeType":"571","messageId":"572","endLine":12,"endColumn":22},{"ruleId":"569","severity":1,"message":"647","line":13,"column":8,"nodeType":"571","messageId":"572","endLine":13,"endColumn":14},{"ruleId":"569","severity":1,"message":"648","line":14,"column":8,"nodeType":"571","messageId":"572","endLine":14,"endColumn":15},{"ruleId":"569","severity":1,"message":"649","line":15,"column":8,"nodeType":"571","messageId":"572","endLine":15,"endColumn":18},{"ruleId":"569","severity":1,"message":"594","line":16,"column":8,"nodeType":"571","messageId":"572","endLine":16,"endColumn":18},{"ruleId":"569","severity":1,"message":"650","line":17,"column":8,"nodeType":"571","messageId":"572","endLine":17,"endColumn":17},{"ruleId":"569","severity":1,"message":"651","line":18,"column":8,"nodeType":"571","messageId":"572","endLine":18,"endColumn":12},{"ruleId":"569","severity":1,"message":"652","line":3,"column":7,"nodeType":"571","messageId":"572","endLine":3,"endColumn":17},{"ruleId":"569","severity":1,"message":"653","line":1,"column":49,"nodeType":"571","messageId":"572","endLine":1,"endColumn":64},{"ruleId":"569","severity":1,"message":"654","line":5,"column":10,"nodeType":"571","messageId":"572","endLine":5,"endColumn":31},{"ruleId":"569","severity":1,"message":"655","line":14,"column":5,"nodeType":"571","messageId":"572","endLine":14,"endColumn":21},{"ruleId":"569","severity":1,"message":"656","line":17,"column":10,"nodeType":"571","messageId":"572","endLine":17,"endColumn":29},{"ruleId":"569","severity":1,"message":"657","line":2,"column":8,"nodeType":"571","messageId":"572","endLine":2,"endColumn":14},{"ruleId":"569","severity":1,"message":"642","line":5,"column":10,"nodeType":"571","messageId":"572","endLine":5,"endColumn":21},{"ruleId":"569","severity":1,"message":"658","line":5,"column":23,"nodeType":"571","messageId":"572","endLine":5,"endColumn":34},{"ruleId":"569","severity":1,"message":"659","line":6,"column":10,"nodeType":"571","messageId":"572","endLine":6,"endColumn":19},{"ruleId":"569","severity":1,"message":"588","line":7,"column":10,"nodeType":"571","messageId":"572","endLine":7,"endColumn":22},{"ruleId":"569","severity":1,"message":"643","line":8,"column":8,"nodeType":"571","messageId":"572","endLine":8,"endColumn":19},{"ruleId":"569","severity":1,"message":"644","line":9,"column":8,"nodeType":"571","messageId":"572","endLine":9,"endColumn":18},{"ruleId":"569","severity":1,"message":"645","line":10,"column":8,"nodeType":"571","messageId":"572","endLine":10,"endColumn":13},{"ruleId":"569","severity":1,"message":"646","line":11,"column":8,"nodeType":"571","messageId":"572","endLine":11,"endColumn":22},{"ruleId":"569","severity":1,"message":"647","line":12,"column":8,"nodeType":"571","messageId":"572","endLine":12,"endColumn":14},{"ruleId":"569","severity":1,"message":"648","line":13,"column":8,"nodeType":"571","messageId":"572","endLine":13,"endColumn":15},{"ruleId":"569","severity":1,"message":"649","line":14,"column":8,"nodeType":"571","messageId":"572","endLine":14,"endColumn":18},{"ruleId":"569","severity":1,"message":"594","line":15,"column":8,"nodeType":"571","messageId":"572","endLine":15,"endColumn":18},{"ruleId":"569","severity":1,"message":"650","line":16,"column":8,"nodeType":"571","messageId":"572","endLine":16,"endColumn":17},{"ruleId":"569","severity":1,"message":"651","line":17,"column":8,"nodeType":"571","messageId":"572","endLine":17,"endColumn":12},{"ruleId":"569","severity":1,"message":"574","line":18,"column":10,"nodeType":"571","messageId":"572","endLine":18,"endColumn":21},{"ruleId":"569","severity":1,"message":"575","line":32,"column":11,"nodeType":"571","messageId":"572","endLine":32,"endColumn":18},{"ruleId":"569","severity":1,"message":"660","line":33,"column":13,"nodeType":"571","messageId":"572","endLine":33,"endColumn":14},{"ruleId":"569","severity":1,"message":"661","line":2,"column":8,"nodeType":"571","messageId":"572","endLine":2,"endColumn":13},{"ruleId":"569","severity":1,"message":"662","line":7,"column":8,"nodeType":"571","messageId":"572","endLine":7,"endColumn":23},{"ruleId":"569","severity":1,"message":"651","line":8,"column":8,"nodeType":"571","messageId":"572","endLine":8,"endColumn":12},{"ruleId":"569","severity":1,"message":"663","line":11,"column":8,"nodeType":"571","messageId":"572","endLine":11,"endColumn":16},{"ruleId":"569","severity":1,"message":"664","line":12,"column":8,"nodeType":"571","messageId":"572","endLine":12,"endColumn":17},{"ruleId":"569","severity":1,"message":"665","line":13,"column":8,"nodeType":"571","messageId":"572","endLine":13,"endColumn":25},{"ruleId":"569","severity":1,"message":"666","line":1,"column":17,"nodeType":"571","messageId":"572","endLine":1,"endColumn":29},{"ruleId":"569","severity":1,"message":"667","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":23},{"ruleId":"569","severity":1,"message":"613","line":2,"column":25,"nodeType":"571","messageId":"572","endLine":2,"endColumn":33},{"ruleId":"569","severity":1,"message":"657","line":3,"column":8,"nodeType":"571","messageId":"572","endLine":3,"endColumn":14},{"ruleId":"569","severity":1,"message":"643","line":6,"column":8,"nodeType":"571","messageId":"572","endLine":6,"endColumn":19},{"ruleId":"569","severity":1,"message":"644","line":7,"column":8,"nodeType":"571","messageId":"572","endLine":7,"endColumn":18},{"ruleId":"569","severity":1,"message":"645","line":8,"column":8,"nodeType":"571","messageId":"572","endLine":8,"endColumn":13},{"ruleId":"569","severity":1,"message":"646","line":9,"column":8,"nodeType":"571","messageId":"572","endLine":9,"endColumn":22},{"ruleId":"569","severity":1,"message":"648","line":11,"column":8,"nodeType":"571","messageId":"572","endLine":11,"endColumn":15},{"ruleId":"569","severity":1,"message":"594","line":13,"column":8,"nodeType":"571","messageId":"572","endLine":13,"endColumn":18},{"ruleId":"569","severity":1,"message":"650","line":14,"column":8,"nodeType":"571","messageId":"572","endLine":14,"endColumn":17},{"ruleId":"569","severity":1,"message":"574","line":16,"column":10,"nodeType":"571","messageId":"572","endLine":16,"endColumn":21},{"ruleId":"569","severity":1,"message":"668","line":20,"column":8,"nodeType":"571","messageId":"572","endLine":20,"endColumn":28},{"ruleId":"569","severity":1,"message":"669","line":29,"column":12,"nodeType":"571","messageId":"572","endLine":29,"endColumn":16},{"ruleId":"609","severity":1,"message":"670","line":32,"column":5,"nodeType":"571","endLine":32,"endColumn":14,"suggestions":"671"},{"ruleId":"569","severity":1,"message":"666","line":1,"column":17,"nodeType":"571","messageId":"572","endLine":1,"endColumn":29},{"ruleId":"569","severity":1,"message":"667","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":23},{"ruleId":"569","severity":1,"message":"613","line":2,"column":25,"nodeType":"571","messageId":"572","endLine":2,"endColumn":33},{"ruleId":"569","severity":1,"message":"672","line":2,"column":35,"nodeType":"571","messageId":"572","endLine":2,"endColumn":40},{"ruleId":"569","severity":1,"message":"673","line":2,"column":42,"nodeType":"571","messageId":"572","endLine":2,"endColumn":48},{"ruleId":"569","severity":1,"message":"657","line":3,"column":8,"nodeType":"571","messageId":"572","endLine":3,"endColumn":14},{"ruleId":"569","severity":1,"message":"644","line":7,"column":8,"nodeType":"571","messageId":"572","endLine":7,"endColumn":18},{"ruleId":"569","severity":1,"message":"647","line":10,"column":8,"nodeType":"571","messageId":"572","endLine":10,"endColumn":14},{"ruleId":"569","severity":1,"message":"651","line":15,"column":8,"nodeType":"571","messageId":"572","endLine":15,"endColumn":12},{"ruleId":"569","severity":1,"message":"574","line":16,"column":10,"nodeType":"571","messageId":"572","endLine":16,"endColumn":21},{"ruleId":"569","severity":1,"message":"669","line":25,"column":12,"nodeType":"571","messageId":"572","endLine":25,"endColumn":16},{"ruleId":"609","severity":1,"message":"670","line":28,"column":5,"nodeType":"571","endLine":28,"endColumn":14,"suggestions":"674"},{"ruleId":"569","severity":1,"message":"642","line":4,"column":10,"nodeType":"571","messageId":"572","endLine":4,"endColumn":21},{"ruleId":"569","severity":1,"message":"658","line":4,"column":23,"nodeType":"571","messageId":"572","endLine":4,"endColumn":34},{"ruleId":"569","severity":1,"message":"659","line":5,"column":10,"nodeType":"571","messageId":"572","endLine":5,"endColumn":19},{"ruleId":"569","severity":1,"message":"675","line":12,"column":20,"nodeType":"571","messageId":"572","endLine":12,"endColumn":33},{"ruleId":"569","severity":1,"message":"676","line":15,"column":10,"nodeType":"571","messageId":"572","endLine":15,"endColumn":28},{"ruleId":"569","severity":1,"message":"677","line":34,"column":6,"nodeType":"571","messageId":"572","endLine":34,"endColumn":26},{"ruleId":"678","severity":1,"message":"679","line":48,"column":7,"nodeType":"571","messageId":"680","endLine":48,"endColumn":21},{"ruleId":"569","severity":1,"message":"681","line":57,"column":12,"nodeType":"571","messageId":"572","endLine":57,"endColumn":26},{"ruleId":"569","severity":1,"message":"682","line":57,"column":28,"nodeType":"571","messageId":"572","endLine":57,"endColumn":44},{"ruleId":"569","severity":1,"message":"617","line":59,"column":11,"nodeType":"571","messageId":"572","endLine":59,"endColumn":22},{"ruleId":"569","severity":1,"message":"666","line":1,"column":17,"nodeType":"571","messageId":"572","endLine":1,"endColumn":29},{"ruleId":"569","severity":1,"message":"667","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":23},{"ruleId":"569","severity":1,"message":"613","line":2,"column":25,"nodeType":"571","messageId":"572","endLine":2,"endColumn":33},{"ruleId":"569","severity":1,"message":"672","line":2,"column":35,"nodeType":"571","messageId":"572","endLine":2,"endColumn":40},{"ruleId":"569","severity":1,"message":"673","line":2,"column":42,"nodeType":"571","messageId":"572","endLine":2,"endColumn":48},{"ruleId":"569","severity":1,"message":"643","line":6,"column":8,"nodeType":"571","messageId":"572","endLine":6,"endColumn":19},{"ruleId":"569","severity":1,"message":"644","line":7,"column":8,"nodeType":"571","messageId":"572","endLine":7,"endColumn":18},{"ruleId":"569","severity":1,"message":"645","line":8,"column":8,"nodeType":"571","messageId":"572","endLine":8,"endColumn":13},{"ruleId":"569","severity":1,"message":"646","line":9,"column":8,"nodeType":"571","messageId":"572","endLine":9,"endColumn":22},{"ruleId":"569","severity":1,"message":"647","line":10,"column":8,"nodeType":"571","messageId":"572","endLine":10,"endColumn":14},{"ruleId":"569","severity":1,"message":"650","line":14,"column":8,"nodeType":"571","messageId":"572","endLine":14,"endColumn":17},{"ruleId":"569","severity":1,"message":"651","line":15,"column":8,"nodeType":"571","messageId":"572","endLine":15,"endColumn":12},{"ruleId":"569","severity":1,"message":"574","line":17,"column":10,"nodeType":"571","messageId":"572","endLine":17,"endColumn":21},{"ruleId":"569","severity":1,"message":"683","line":18,"column":10,"nodeType":"571","messageId":"572","endLine":18,"endColumn":26},{"ruleId":"569","severity":1,"message":"669","line":25,"column":12,"nodeType":"571","messageId":"572","endLine":25,"endColumn":16},{"ruleId":"609","severity":1,"message":"670","line":31,"column":5,"nodeType":"571","endLine":31,"endColumn":14,"suggestions":"684"},{"ruleId":"569","severity":1,"message":"685","line":36,"column":11,"nodeType":"571","messageId":"572","endLine":36,"endColumn":23},{"ruleId":"569","severity":1,"message":"661","line":2,"column":8,"nodeType":"571","messageId":"572","endLine":2,"endColumn":13},{"ruleId":"569","severity":1,"message":"662","line":7,"column":8,"nodeType":"571","messageId":"572","endLine":7,"endColumn":23},{"ruleId":"569","severity":1,"message":"651","line":8,"column":8,"nodeType":"571","messageId":"572","endLine":8,"endColumn":12},{"ruleId":"569","severity":1,"message":"686","line":10,"column":8,"nodeType":"571","messageId":"572","endLine":10,"endColumn":21},{"ruleId":"569","severity":1,"message":"663","line":11,"column":8,"nodeType":"571","messageId":"572","endLine":11,"endColumn":16},{"ruleId":"569","severity":1,"message":"664","line":12,"column":8,"nodeType":"571","messageId":"572","endLine":12,"endColumn":17},{"ruleId":"569","severity":1,"message":"665","line":13,"column":8,"nodeType":"571","messageId":"572","endLine":13,"endColumn":25},{"ruleId":"569","severity":1,"message":"651","line":2,"column":8,"nodeType":"571","messageId":"572","endLine":2,"endColumn":12},{"ruleId":"569","severity":1,"message":"624","line":4,"column":8,"nodeType":"571","messageId":"572","endLine":4,"endColumn":17},{"ruleId":"569","severity":1,"message":"675","line":9,"column":20,"nodeType":"571","messageId":"572","endLine":9,"endColumn":33},{"ruleId":"569","severity":1,"message":"687","line":28,"column":6,"nodeType":"571","messageId":"572","endLine":28,"endColumn":16},{"ruleId":"569","severity":1,"message":"617","line":46,"column":11,"nodeType":"571","messageId":"572","endLine":46,"endColumn":22},{"ruleId":"609","severity":1,"message":"688","line":62,"column":8,"nodeType":"611","endLine":62,"endColumn":10,"suggestions":"689"},{"ruleId":"609","severity":1,"message":"690","line":69,"column":8,"nodeType":"611","endLine":69,"endColumn":29,"suggestions":"691"},{"ruleId":"692","severity":1,"message":"693","line":214,"column":17,"nodeType":"694","messageId":"695","endLine":214,"endColumn":23},{"ruleId":"569","severity":1,"message":"666","line":1,"column":17,"nodeType":"571","messageId":"572","endLine":1,"endColumn":29},{"ruleId":"569","severity":1,"message":"667","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":23},{"ruleId":"569","severity":1,"message":"613","line":2,"column":25,"nodeType":"571","messageId":"572","endLine":2,"endColumn":33},{"ruleId":"569","severity":1,"message":"672","line":2,"column":35,"nodeType":"571","messageId":"572","endLine":2,"endColumn":40},{"ruleId":"569","severity":1,"message":"673","line":2,"column":42,"nodeType":"571","messageId":"572","endLine":2,"endColumn":48},{"ruleId":"569","severity":1,"message":"643","line":6,"column":8,"nodeType":"571","messageId":"572","endLine":6,"endColumn":19},{"ruleId":"569","severity":1,"message":"644","line":7,"column":8,"nodeType":"571","messageId":"572","endLine":7,"endColumn":18},{"ruleId":"569","severity":1,"message":"645","line":8,"column":8,"nodeType":"571","messageId":"572","endLine":8,"endColumn":13},{"ruleId":"569","severity":1,"message":"646","line":9,"column":8,"nodeType":"571","messageId":"572","endLine":9,"endColumn":22},{"ruleId":"569","severity":1,"message":"647","line":10,"column":8,"nodeType":"571","messageId":"572","endLine":10,"endColumn":14},{"ruleId":"569","severity":1,"message":"651","line":16,"column":8,"nodeType":"571","messageId":"572","endLine":16,"endColumn":12},{"ruleId":"569","severity":1,"message":"669","line":34,"column":12,"nodeType":"571","messageId":"572","endLine":34,"endColumn":16},{"ruleId":"609","severity":1,"message":"670","line":39,"column":5,"nodeType":"571","endLine":39,"endColumn":14,"suggestions":"696"},{"ruleId":"569","severity":1,"message":"697","line":5,"column":10,"nodeType":"571","messageId":"572","endLine":5,"endColumn":23},{"ruleId":"569","severity":1,"message":"698","line":1,"column":10,"nodeType":"571","messageId":"572","endLine":1,"endColumn":20},{"ruleId":"569","severity":1,"message":"570","line":1,"column":22,"nodeType":"571","messageId":"572","endLine":1,"endColumn":37},{"ruleId":"569","severity":1,"message":"699","line":1,"column":39,"nodeType":"571","messageId":"572","endLine":1,"endColumn":50},{"ruleId":"569","severity":1,"message":"700","line":1,"column":52,"nodeType":"571","messageId":"572","endLine":1,"endColumn":64},{"ruleId":"569","severity":1,"message":"588","line":2,"column":10,"nodeType":"571","messageId":"572","endLine":2,"endColumn":22},{"ruleId":"569","severity":1,"message":"701","line":3,"column":10,"nodeType":"571","messageId":"572","endLine":3,"endColumn":22},{"ruleId":"569","severity":1,"message":"653","line":1,"column":49,"nodeType":"571","messageId":"572","endLine":1,"endColumn":64},{"ruleId":"569","severity":1,"message":"654","line":5,"column":10,"nodeType":"571","messageId":"572","endLine":5,"endColumn":31},{"ruleId":"569","severity":1,"message":"655","line":15,"column":5,"nodeType":"571","messageId":"572","endLine":15,"endColumn":21},{"ruleId":"569","severity":1,"message":"656","line":17,"column":10,"nodeType":"571","messageId":"572","endLine":17,"endColumn":29},{"ruleId":"609","severity":1,"message":"702","line":37,"column":8,"nodeType":"611","endLine":37,"endColumn":29,"suggestions":"703"},{"ruleId":"569","severity":1,"message":"704","line":51,"column":11,"nodeType":"571","messageId":"572","endLine":51,"endColumn":31},{"ruleId":"569","severity":1,"message":"705","line":64,"column":13,"nodeType":"571","messageId":"572","endLine":64,"endColumn":17},{"ruleId":"569","severity":1,"message":"700","line":5,"column":39,"nodeType":"571","messageId":"572","endLine":5,"endColumn":51},{"ruleId":"706","severity":1,"message":"707","line":67,"column":25,"nodeType":"708","endLine":67,"endColumn":28},{"ruleId":"706","severity":1,"message":"707","line":77,"column":25,"nodeType":"708","endLine":77,"endColumn":45},{"ruleId":"706","severity":1,"message":"707","line":86,"column":25,"nodeType":"708","endLine":86,"endColumn":28},{"ruleId":"569","severity":1,"message":"709","line":4,"column":38,"nodeType":"571","messageId":"572","endLine":4,"endColumn":47},{"ruleId":"569","severity":1,"message":"710","line":5,"column":8,"nodeType":"571","messageId":"572","endLine":5,"endColumn":22},{"ruleId":"569","severity":1,"message":"711","line":22,"column":12,"nodeType":"571","messageId":"572","endLine":22,"endColumn":19},{"ruleId":"569","severity":1,"message":"712","line":1,"column":17,"nodeType":"571","messageId":"572","endLine":1,"endColumn":26},{"ruleId":"569","severity":1,"message":"623","line":1,"column":28,"nodeType":"571","messageId":"572","endLine":1,"endColumn":36},{"ruleId":"569","severity":1,"message":"700","line":3,"column":23,"nodeType":"571","messageId":"572","endLine":3,"endColumn":35},{"ruleId":"569","severity":1,"message":"713","line":4,"column":10,"nodeType":"571","messageId":"572","endLine":4,"endColumn":25},{"ruleId":"569","severity":1,"message":"714","line":4,"column":27,"nodeType":"571","messageId":"572","endLine":4,"endColumn":36},"no-native-reassign",["715"],"no-negated-in-lhs",["716"],"@typescript-eslint/no-unused-vars","'EntityStateData' is defined but never used.","Identifier","unusedVar","'FC' is defined but never used.","'CssBaseline' is defined but never used.","'history' is assigned a value but never used.",["715"],["716"],"'UserGoogleLoginReqData' is defined but never used.","'DispatchWithoutAction' is defined but never used.",["715"],["716"],["715"],["716"],"'AnyAction' is defined but never used.","'Action' is defined but never used.","'Reducer' is defined but never used.","'compose' is defined but never used.","'ActionStatus' is defined but never used.",["715"],["716"],"'AppState' is defined but never used.",["715"],["716"],"'IconButton' is defined but never used.",["715"],["716"],"'FacebookIcon' is defined but never used.",["715"],["716"],"'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'classes' is assigned a value but never used.",["715"],["716"],"'ReactEventHandler' is defined but never used.","'fade' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formValues' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["717"],"'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'authState.status' and 'dispatch'. Either include them or remove the dependency array.",["718"],"'Link' is defined but never used.","'mainClasses' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["719"],"'IError' is defined but never used.","'timer' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'useState' is defined but never used.","'TextField' is defined but never used.","'ErrorMessage' is defined but never used.","'Formik' is defined but never used.","'authActions' is defined but never used.","'appName' is defined but never used.","'FormikValues' is defined but never used.","'LoginDialogState' is defined but never used.","'enqueueSnackbar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["720"],["715"],["716"],"'useSnackbar' is defined but never used.","'toast' is defined but never used.","'setSubmitting' is assigned a value but never used.","'authState' is assigned a value but never used.",["715"],["716"],"'useDispatch' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'InputAdornment' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'CloseIcon' is defined but never used.","'clsx' is defined but never used.","'loginCheck' is assigned a value but never used.","'PayloadedAction' is defined but never used.","'ForgotPasswordReqData' is defined but never used.","'UserActionParams' is defined but never used.","'UserRegisterResData' is defined but never used.","'Button' is defined but never used.","'useSelector' is defined but never used.","'RootState' is defined but never used.","'t' is assigned a value but never used.","'Paper' is defined but never used.","'EliminationForm' is defined but never used.","'Whatshot' is defined but never used.","'StarsIcon' is defined but never used.","'CompareArrowsIcon' is defined but never used.","'ReactElement' is defined but never used.","'BrowserRouter' is defined but never used.","'HeaderTournamentForm' is defined but never used.","'path' is assigned a value but never used.","React Hook useEffect contains a call to 'setPath'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [history.location.pathname] as a second argument to the useEffect Hook.",["721"],"'Route' is defined but never used.","'Switch' is defined but never used.",["722"],"'CheckboxProps' is defined but never used.","'RegisterFormValues' is defined but never used.","'SubheaderStateValues' is defined but never used.","@typescript-eslint/no-redeclare","'TournamentForm' is already defined.","redeclared","'subheaderState' is assigned a value but never used.","'setSubeaderState' is assigned a value but never used.","'useFormikContext' is defined but never used.",["723"],"'handleSubmit' is assigned a value but never used.","'MoreHorizIcon' is defined but never used.","'GoalValues' is defined but never used.","React Hook useEffect has a missing dependency: 'entityState.players'. Either include it or remove the dependency array.",["724"],"React Hook useEffect has a missing dependency: 'players.length'. Either include it or remove the dependency array.",["725"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["726"],"'UserStateData' is defined but never used.","'EntityById' is defined but never used.","'StatePlayer' is defined but never used.","'StatePlayers' is defined but never used.","'arrayGroupBy' is defined but never used.","React Hook useEffect has missing dependencies: 'byePlayerNumber', 'insertByePlayers', 'numberOfPlayers', and 'players'. Either include them or remove the dependency array. You can also do a functional update 'setPlayers(p => ...)' if you only need 'players' in the 'setPlayers' call.",["727"],"'submitPlayersToStore' is assigned a value but never used.","'kekw' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Draggable' is defined but never used.","'DragHandleIcon' is defined but never used.","'players' is assigned a value but never used.","'useEffect' is defined but never used.","'DragDropContext' is defined but never used.","'Droppable' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"736","fix":"738"},{"desc":"736","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"736","fix":"744"},{"desc":"745","fix":"746"},"Update the dependencies array to be: [formValues, props, registerState.status]",{"range":"747","text":"748"},"Update the dependencies array to be: [authState.status, dispatch]",{"range":"749","text":"750"},"Update the dependencies array to be: [authState.forgotPassword.status, props]",{"range":"751","text":"752"},"Update the dependencies array to be: [dispatch, registerState.verifyEmail.status, token]",{"range":"753","text":"754"},"Add dependencies array: [history.location.pathname]",{"range":"755","text":"756"},{"range":"757","text":"756"},{"range":"758","text":"756"},"Update the dependencies array to be: [entityState.players]",{"range":"759","text":"760"},"Update the dependencies array to be: [entityState.players, players.length]",{"range":"761","text":"762"},{"range":"763","text":"756"},"Update the dependencies array to be: [byePlayerNumber, entityState.players, insertByePlayers, numberOfPlayers, players]",{"range":"764","text":"765"},[1748,1770],"[formValues, props, registerState.status]",[1288,1290],"[authState.status, dispatch]",[1518,1551],"[authState.forgotPassword.status, props]",[2158,2192],"[dispatch, registerState.verifyEmail.status, token]",[1353,1353],", [history.location.pathname]",[1183,1183],[1340,1340],[2510,2512],"[entityState.players]",[2734,2755],"[entityState.players, players.length]",[1708,1708],[1641,1662],"[byePlayerNumber, entityState.players, insertByePlayers, numberOfPlayers, players]"]